#!/usr/bin/env node
/**
 * MCP Server generated from OpenAPI spec for its-public-web-api v1.0.0
 * Generated on: 2025-08-22T14:25:33.575Z
 */

// Load environment variables from .env file
import dotenv from 'dotenv';
dotenv.config();

import { Server } from "@modelcontextprotocol/sdk/server/index.js";
import { StdioServerTransport } from "@modelcontextprotocol/sdk/server/stdio.js";
import {
  CallToolRequestSchema,
  ListToolsRequestSchema,
  type Tool,
  type CallToolResult,
  type CallToolRequest
} from "@modelcontextprotocol/sdk/types.js";

import { z, ZodError } from 'zod';
import { jsonSchemaToZod } from 'json-schema-to-zod';
import axios, { type AxiosRequestConfig, type AxiosError } from 'axios';

/**
 * Type definition for JSON objects
 */
type JsonObject = Record<string, any>;

/**
 * Interface for MCP Tool Definition
 */
interface McpToolDefinition {
    name: string;
    description: string;
    inputSchema: any;
    method: string;
    pathTemplate: string;
    executionParameters: { name: string, in: string }[];
    requestBodyContentType?: string;
    securityRequirements: any[];
}

/**
 * Server configuration
 */
export const SERVER_NAME = "its-public-web-api";
export const SERVER_VERSION = "1.0.0";
export const API_BASE_URL = process.env.API_BASE_URL || "https://api-staging.testsys.io";

/**
 * Ensure a Bearer token is available. If API_BEARER_TOKEN is not set,
 * try to acquire one using OAuth2 client-credentials variables from env.
 *
 * Env contract:
 * - OAUTH_TOKEN_URL (required if acquiring)
 * - OAUTH_CLIENT_ID (required if acquiring)
 * - OAUTH_CLIENT_SECRET (required if acquiring)
 * - OAUTH_SCOPE (optional, space-delimited)
 * - OAUTH_AUDIENCE (optional)
 */
async function ensureBearerToken(): Promise<void> {
  try {
    if (process.env.API_BEARER_TOKEN && process.env.API_BEARER_TOKEN.trim() !== '') {
      console.error("Using API_BEARER_TOKEN from environment");
      return;
    }

    const tokenUrl = process.env.OAUTH_TOKEN_URL;
    const clientId = process.env.OAUTH_CLIENT_ID;
    const clientSecret = process.env.OAUTH_CLIENT_SECRET;
    const scope = process.env.OAUTH_SCOPE || process.env.OAUTH_SCOPES;
    const audience = process.env.OAUTH_AUDIENCE;

    if (!tokenUrl || !clientId || !clientSecret) {
      console.error("No API_BEARER_TOKEN present and missing OAUTH_* env (OAUTH_TOKEN_URL, OAUTH_CLIENT_ID, OAUTH_CLIENT_SECRET). Skipping auto token fetch.");
      return;
    }

    const form = new URLSearchParams();
    form.append('grant_type', 'client_credentials');
    if (scope) form.append('scope', scope);
    if (audience) form.append('audience', audience);

    console.error(`Acquiring bearer token via client_credentials at ${tokenUrl}`);
    const resp = await axios({
      method: 'POST',
      url: tokenUrl,
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Authorization': `Basic ${Buffer.from(`${clientId}:${clientSecret}`).toString('base64')}`
      },
      data: form.toString()
    });

    const token = resp.data?.access_token as string | undefined;
    if (token && token.trim() !== '') {
      process.env.API_BEARER_TOKEN = token;
      const expiresIn = resp.data?.expires_in ? Number(resp.data.expires_in) : undefined;
      console.error(`Bearer token acquired${expiresIn ? ` (expires in ${expiresIn}s)` : ''}`);
    } else {
      console.error("Token endpoint response missing access_token. Leaving API_BEARER_TOKEN unset.");
    }
  } catch (err: unknown) {
    const msg = err instanceof Error ? err.message : String(err);
    console.error("Failed to acquire bearer token via client credentials:", msg);
  }
}

/**
 * MCP Server instance
 */
const server = new Server(
    { name: SERVER_NAME, version: SERVER_VERSION },
    { capabilities: { tools: {} } }
);

/**
 * Map of tool definitions by name
 */
const toolDefinitionMap: Map<string, McpToolDefinition> = new Map([

  ["ChannelInstitutionQuery", {
    name: "ChannelInstitutionQuery",
    description: `Retrieves institutions.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The institutions imported will be children of this parent institution. The web API client must have access to this institution, or a parent of this institution."},"limit":{"maximum":500,"minimum":1,"type":"number","format":"int32","default":500,"description":"The number of examinee objects to return. By default, this call returns a maximum of 500 objects. The limit can be set to any number less than 500."},"before-id":{"type":"number","format":"int64","description":"A specific `examinee-id`. The API returns objects with `examinee-id`s that precede `before-id`. This parameter cannot be used if `after-id` is used."},"after-id":{"type":"number","format":"int64","description":"A specific `examinee-id`. The API returns objects with `examinee-id`s that follow `after-id`. This parameter cannot be used if `before-id` is used."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/channel/institutions/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["ChannelInstitutionImport", {
    name: "ChannelInstitutionImport",
    description: `Creates institutions.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"parent-program-institution-id":{"type":"string","description":"The institutions imported will be children of this parent institution. The web API client must have access to this institution or a parent of this institution. This parameter is required if the web API client is an institution-level client."},"requestBody":{"type":"object","properties":{"name":{"type":["string","null"],"description":"The descriptive name of the institution."},"institution-type-code":{"type":["string","null"],"description":"Defines the type of institution. Valid values will be provided as part of configuration. This value must be a valid child type of the parent institution."},"institution-code":{"type":["string","null"],"description":"The unique identifier for the institution."},"program-institution-id":{"type":["string","null"],"description":"The program-specific identifier of the institution. If not supplied, the API will set to `institution-code`. This identifier is used to identify an institution in all web API calls."},"program-alternate-id":{"type":["string","null"],"description":"The program alternate identifier for the institution."},"program-billing-code":{"type":["string","null"],"description":"The program billing code for the institution."},"program-campus-code":{"type":["string","null"],"description":"The program campus code for the institution."},"program-system-id":{"type":["string","null"],"description":"The program’s system identifier of the institution. This is typically a database identifier. This identifier must be unique across all institutions linked to the program."},"alternate-id":{"type":["string","null"],"description":"The alternate identifier for the institution across all programs."},"address1":{"type":["string","null"],"description":"The first line of the institution’s address."},"address2":{"type":["string","null"],"description":"The second line of the institution’s address."},"address3":{"type":["string","null"],"description":"The third line of the institution’s address."},"city":{"type":["string","null"],"description":"The city of the institution."},"state":{"type":["string","null"],"description":"The state of the institution."},"country":{"maxLength":3,"minLength":0,"type":["string","null"],"description":"The country of the institution."},"postal-code":{"type":["string","null"],"description":"The zip code of the institution."},"campus":{"type":["string","null"],"description":"The name of the institution campus."},"contact-email":{"type":["string","null"],"description":"The email address of the main contact for the institution."},"contact-name":{"type":["string","null"],"description":"The name of the main contact for the institution."},"contact-phone":{"type":["string","null"],"description":"The phone number of the main contact for the institution."},"directions":{"type":["string","null"],"description":"The directions to the institution."},"start-grade":{"type":"number","description":"The lowest grade the institution supports.","format":"int32"},"end-grade":{"type":"number","description":"The highest grade the institution supports.","format":"int32"},"hours":{"type":["string","null"],"description":"The hours the institution is open and available for testing."},"fice-code":{"type":["string","null"],"description":"The six-digit identification code used to identify institutions of higher education in the United States."},"allow-anonymous-examinees":{"type":["boolean","null"],"description":"If set to `true`, examinees will skip self-registration and will be anonymous."},"time-zone-id":{"type":["number","null"],"description":"Windows time zone identifier.","format":"int32"},"use-daylight-savings":{"type":"boolean","description":"If set to `true`, daylight savings will be honored."},"demo":{"type":"boolean","description":"Should be set to `true` for QA, test, or demonstration locations. If not provided, set to `false`."},"active":{"type":"boolean","description":"If `false`, this institution will not be allowed to deliver tests. When set to `false`, all children institutions are automatically set to inactive. If not provided, set to `false`."},"custom-properties":{"type":["array","null"],"items":{"type":"object","properties":{"property":{"type":"object","properties":{"name":{"type":"string","description":"The program-specific name identifying the property. Property must be a list.","nullable":true},"code":{"type":"string","description":"List specific code to set the property to.","nullable":true}},"additionalProperties":false}},"additionalProperties":false},"description":"The collection of properties."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id"]},
    method: "post",
    pathTemplate: "/channel/institutions/import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"parent-program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["ChannelInstitutionImport1", {
    name: "ChannelInstitutionImport1",
    description: `Creates institutions.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"parent-program-institution-id":{"type":"string","description":"The institutions imported will be children of this parent institution. The web API client must have access to this institution or a parent of this institution. This parameter is required if the web API client is an institution-level client."},"requestBody":{"type":"object","properties":{"name":{"type":["string","null"],"description":"The descriptive name of the institution."},"institution-type-code":{"type":["string","null"],"description":"Defines the type of institution. Valid values will be provided as part of configuration. This value must be a valid child type of the parent institution."},"institution-code":{"type":["string","null"],"description":"The unique identifier for the institution."},"program-institution-id":{"type":["string","null"],"description":"The program-specific identifier of the institution. If not supplied, the API will set to `institution-code`. This identifier is used to identify an institution in all web API calls."},"program-alternate-id":{"type":["string","null"],"description":"The program alternate identifier for the institution."},"program-billing-code":{"type":["string","null"],"description":"The program billing code for the institution."},"program-campus-code":{"type":["string","null"],"description":"The program campus code for the institution."},"program-system-id":{"type":["string","null"],"description":"The program’s system identifier of the institution. This is typically a database identifier. This identifier must be unique across all institutions linked to the program."},"alternate-id":{"type":["string","null"],"description":"The alternate identifier for the institution across all programs."},"address1":{"type":["string","null"],"description":"The first line of the institution’s address."},"address2":{"type":["string","null"],"description":"The second line of the institution’s address."},"address3":{"type":["string","null"],"description":"The third line of the institution’s address."},"city":{"type":["string","null"],"description":"The city of the institution."},"state":{"type":["string","null"],"description":"The state of the institution."},"country":{"maxLength":3,"minLength":0,"type":["string","null"],"description":"The country of the institution."},"postal-code":{"type":["string","null"],"description":"The zip code of the institution."},"campus":{"type":["string","null"],"description":"The name of the institution campus."},"contact-email":{"type":["string","null"],"description":"The email address of the main contact for the institution."},"contact-name":{"type":["string","null"],"description":"The name of the main contact for the institution."},"contact-phone":{"type":["string","null"],"description":"The phone number of the main contact for the institution."},"directions":{"type":["string","null"],"description":"The directions to the institution."},"start-grade":{"type":"number","description":"The lowest grade the institution supports.","format":"int32"},"end-grade":{"type":"number","description":"The highest grade the institution supports.","format":"int32"},"hours":{"type":["string","null"],"description":"The hours the institution is open and available for testing."},"fice-code":{"type":["string","null"],"description":"The six-digit identification code used to identify institutions of higher education in the United States."},"allow-anonymous-examinees":{"type":["boolean","null"],"description":"If set to `true`, examinees will skip self-registration and will be anonymous."},"time-zone-id":{"type":["number","null"],"description":"Windows time zone identifier.","format":"int32"},"use-daylight-savings":{"type":"boolean","description":"If set to `true`, daylight savings will be honored."},"demo":{"type":"boolean","description":"Should be set to `true` for QA, test, or demonstration locations. If not provided, set to `false`."},"active":{"type":"boolean","description":"If `false`, this institution will not be allowed to deliver tests. When set to `false`, all children institutions are automatically set to inactive. If not provided, set to `false`."},"custom-properties":{"type":["array","null"],"items":{"type":"object","properties":{"property":{"type":"object","properties":{"name":{"type":"string","description":"The program-specific name identifying the property. Property must be a list.","nullable":true},"code":{"type":"string","description":"List specific code to set the property to.","nullable":true}},"additionalProperties":false}},"additionalProperties":false},"description":"The collection of properties."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id"]},
    method: "patch",
    pathTemplate: "/channel/institutions/import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"parent-program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["EventAuthorizationQuery", {
    name: "EventAuthorizationQuery",
    description: `This method queries event-specific authorization codes. The event must have previously been created, and the user querying must have access. If an authorization code has been used, then result information is also returned.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. If supplied, all events linked to this institution or its children will be returned. The web API client must have access to this institution."},"event-id":{"type":"number","format":"int64","description":"The unique database identifier of the event. If not supplied, `event-description` is required."},"event-description":{"type":"string","description":"The unique textual identifier of the event. If not supplied, `event-id` is required."},"limit":{"maximum":500,"minimum":1,"type":"number","format":"int32","default":500,"description":"The number of event-authorization objects to return. By default, this call returns a maximum of 500 objects. The limit can be set to any number less than 500."},"before-id":{"type":"number","format":"int64","default":9223372036854776000,"description":"A specific `authorization-id`. The API returns objects with `authorization-id`s that precede `before-id`. This parameter cannot be used if `after-id` is used."},"after-id":{"type":"number","format":"int64","description":"A specific `authorization-id`. The API returns objects with `authorization-id`s that follow `after-id`. This parameter cannot be used if `before-id` is used."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/event/authorizations/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"event-id","in":"query"},{"name":"event-description","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["EventClassQuery", {
    name: "EventClassQuery",
    description: `Retrieves details about a remote session.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The program institution's name."},"event-class-id":{"type":"number","format":"int64","description":"The unique identifier of the event class."},"event-id":{"type":"number","format":"int64","description":"Includes all sessions starting on or after this date. This parameter and end-utc are required if session-code is not supplied."},"program-class-code":{"type":"string","description":"Program unique identifier for the event class."}},"required":["program-id","program-institution-id"]},
    method: "get",
    pathTemplate: "/event-class/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"event-class-id","in":"query"},{"name":"event-id","in":"query"},{"name":"program-class-code","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["EventClassCreate", {
    name: "EventClassCreate",
    description: `Creates an event class. This call is for clients who want to group together examinees into a class for a particular event.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The Web API client must have access to this institution."},"requestBody":{"type":"object","properties":{"event-class-id":{"type":["number","null"],"description":"Unique event class identifier.","format":"int64"},"event-id":{"type":["number","null"],"description":"Unique event identifier.","format":"int64"},"program-institution-id":{"type":["string","null"],"description":"The program institution’s name."},"description":{"type":["string","null"],"description":"The description of the event class."},"period":{"type":["number","null"],"description":"The period of the class.","format":"int32"},"create-utc":{"type":["string","null"],"description":"UTC date of creating the class.","format":"date-time"},"modify-utc":{"type":["string","null"],"description":"UTC date of modifying the class.","format":"date-time"},"program-class-code":{"type":["string","null"],"description":"Program unique identifier for the event class."}},"additionalProperties":false,"description":"Body for event-class/create endpoint with its validation. Inherits from the EventClass object."}},"required":["program-id","program-institution-id","requestBody"]},
    method: "post",
    pathTemplate: "/event-class/Create",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["EventClassUpdate", {
    name: "EventClassUpdate",
    description: `Finds and updates an existing event class from the event-class-id in the object data.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"requestBody":{"type":"object","properties":{"event-class-id":{"type":["number","null"],"description":"Unique event class identifier.","format":"int64"},"event-id":{"type":["number","null"],"description":"Unique event identifier.","format":"int64"},"program-institution-id":{"type":["string","null"],"description":"The program institution’s name."},"description":{"type":["string","null"],"description":"The description of the event class."},"period":{"type":["number","null"],"description":"The period of the class.","format":"int32"},"create-utc":{"type":["string","null"],"description":"UTC date of creating the class.","format":"date-time"},"modify-utc":{"type":["string","null"],"description":"UTC date of modifying the class.","format":"date-time"},"program-class-code":{"type":["string","null"],"description":"Program unique identifier for the event class."}},"additionalProperties":false,"description":"Body for event-class/update endpoint with its validation. Inherits from the EventClass object."}},"required":["program-id","program-institution-id","requestBody"]},
    method: "patch",
    pathTemplate: "/event-class/Update",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["EventClassDelete", {
    name: "EventClassDelete",
    description: `Removes all the linked examinees and deletes the Event Class.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"event-class-id":{"type":"number","format":"int64","description":"The unique identifier of the event class."}},"required":["program-id","event-class-id"]},
    method: "delete",
    pathTemplate: "/event-class/Delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"event-class-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["EventClassExamineesCreate", {
    name: "EventClassExamineesCreate",
    description: `Creates an event class examinee record. This call is for clients who want to group together examinees into a class for a particular event.  `,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"event-class-id":{"type":"number","format":"int64"},"ExamineeIds":{"type":"array","items":{"type":"number","format":"int64"}},"ProgramExamineeSystemIds":{"type":"array","items":{"type":"string"}},"ProgramExamineePublicIds":{"type":"array","items":{"type":"string"}},"requestBody":{"type":"array","items":{"type":"object","properties":{"examinee-id":{"type":["number","null"],"format":"int64"},"program-examinee-public-id":{"type":["string","null"]},"program-examinee-system-id":{"type":["string","null"]}},"additionalProperties":false},"description":"The JSON request body."}},"required":["program-id","program-institution-id","event-class-id"]},
    method: "post",
    pathTemplate: "/event-class/examinees/create",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"event-class-id","in":"query"},{"name":"ExamineeIds","in":"query"},{"name":"ProgramExamineeSystemIds","in":"query"},{"name":"ProgramExamineePublicIds","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["EventClassExamineesQuery", {
    name: "EventClassExamineesQuery",
    description: `Retrieves details about an examinee in an event class.Choose to filter by either event-class-id or a candidate identifier, and if candidate identifier choose 1 of the candidate identifiers (public, system, or examinee) `,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"event-class-id":{"type":"number","format":"int64","description":"The unique identifier of the event class. "},"examinee-id":{"type":"number","format":"int64","description":"ITS unique identifier for the examinee. "},"program-examinee-system-id":{"type":"string","description":"The program’s system identifier of the examinee."},"program-examinee-public-id":{"type":"string","description":"The program’s public or business identifier of the examinee. "}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/event-class/examinees/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"event-class-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["EventClassExamineesDelete", {
    name: "EventClassExamineesDelete",
    description: `Removes the specified linked examinees. `,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"event-class-examinee-id":{"type":"number","format":"int64","description":"Deletes the individual Event Class Examinee record.  "},"event-class-id":{"type":"number","format":"int64","description":"Deletes all of the Event Class Examinee records for the event-class-id. "}},"required":["program-id"]},
    method: "delete",
    pathTemplate: "/event-class/examinees/delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"event-class-examinee-id","in":"query"},{"name":"event-class-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["EventExamineeImport", {
    name: "EventExamineeImport",
    description: `Creates or updates examinees and adds them to an event. This is a complete overwrite of the examinee in the ITS system. Any parameter not passed is cleared.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Examinees are linked to this institution. The web API client must have access to this institution."},"event-id":{"type":"number","format":"int64","description":"The unique database identifier of the event."},"requestBody":{"type":"object","properties":{"examinee-data":{"type":["array","null"],"items":{"type":"object","properties":{"examinee-id":{"type":"integer","description":"The unique ITS database identifier of the examinee. Required for Updates.","format":"int64","nullable":true},"program-examinee-system-id":{"maxLength":100,"type":"string","description":"The program's system identifier of the examinee. This is typically a database identifier. This identifier must be unique within the uniqueness scope defined for the program. It is required for Creates if `program-examinee-public-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-public-id` are not provided.","nullable":true},"program-examinee-public-id":{"maxLength":100,"type":"string","description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. The identifier must be unique within the uniqueness scope as defined for the program. It is required for Creates if `program-examinee-system-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-system-id` are not provided.","nullable":true},"program-examinee-institution-id":{"maxLength":256,"type":"string","description":"The program's unique Institutional Examinee identifier. The identifier must be unique within the uniqueness scope as defined for the program. The `program-institution-id` URL parameter is required when using this identifier.","nullable":true},"record-identifier":{"type":"string","description":"","nullable":true},"registration-identifier":{"type":"string","description":"","nullable":true},"active":{"type":"boolean","description":"If `true`, the examinee is active.","nullable":true},"examinee-status-id":{"type":"integer","description":"The table below describes each possible examinee status ID.\r\n**Examinee Status ID**\r\n\r\n| Status ID | Description         |\r\n|-----------|---------------------|\r\n| 1         | Active              |\r\n| 2         | Inactive            |\r\n| 3         | Suspended           |\r\n| 4         | Suspended Read-Only |","format":"int32","nullable":true},"enrollment-status":{"type":"string","description":"This is a program defined list. Example: Active, Graduated, …","nullable":true},"last-name":{"type":"string","description":"The examinee's last name.","nullable":true},"first-name":{"type":"string","description":"The examinee's first name.","nullable":true},"full-name":{"type":"string","description":"The examinee's full name. This is used for certificates and score reports.","nullable":true},"middle-name":{"type":"string","description":"The examinee's middle name. ","nullable":true},"title":{"type":"string","description":"A word used to describe the examinee's status or profession. Examples include Mr, Mrs, Doctor, Professor, etc. The set of allowed possible values is configurable for the program.","nullable":true},"grade":{"type":"string","description":"The enrolled grade of the examinee.","nullable":true},"major":{"type":"string","description":"The academic major of the examinee. The set of allowed possible values is configurable for the program.","nullable":true},"gender":{"type":"string","description":"The gender of the examinee. The set of allowed possible values is configurable for the program.","nullable":true},"ethnicity":{"type":"string","description":"A pipe-separated list of program-specific codes that describe the examinee.","nullable":true},"race":{"type":"string","description":"A pipe-separated list of program-specific codes that describe the examinee.","nullable":true},"language":{"type":"string","description":"The three-letter ISO language code.","nullable":true},"date-of-birth":{"type":"string","description":"The examinee's date of birth. MM-DD-YYYY","format":"date-time","nullable":true},"privacy-protected":{"type":"boolean","description":"Set if the user does not want their information shared. The default is `false`.","nullable":true},"waiver":{"type":"boolean","description":"Set if a waiver is on file for an examinee.","nullable":true},"time-zone-id":{"type":"integer","description":"The time zone that the examinee is in. See timezone/query for valid ID numbers.","format":"int32","nullable":true},"use-daylight-savings":{"type":"boolean","description":"If `true`, the examinee honors daylights savings.","nullable":true},"photo-image":{"type":"string","description":"Not Available","nullable":true},"photo-format":{"type":"string","description":"Not Available","nullable":true},"email":{"type":"string","description":"The examinee's email address. Must be correctly formatted per RFC 5322.","nullable":true},"primary-phone":{"type":"string","description":"The examinee's primary phone number.","nullable":true},"alternate-phone":{"type":"string","description":"The examinee's alternative phone number.","nullable":true},"parent-email-addresses":{"type":"string","description":"The email addresses of the examinee's parents. This is comma delimited. Must be correctly formatted per RFC 5322.","nullable":true},"preferred-contact-method":{"type":"integer","description":"This is the preferred contact method of the examinee. The default is 1. The table below includes the supported contact methods.\r\n**Contact Method**\r\n\r\n| Value | Description |\r\n|-------|-------------|\r\n| 1     | Email       |\r\n| 4     | SMS         |","format":"int32","nullable":true},"address":{"type":"string","description":"The first line of the examinee's address.","nullable":true},"address2":{"type":"string","description":"The second line of the examinee's address.","nullable":true},"address3":{"type":"string","description":"The third line of the examinee's address.","nullable":true},"city":{"type":"string","description":"The city that the examinee lives in.","nullable":true},"state":{"type":"string","description":"The state that the examinee lives in.","nullable":true},"postal-code":{"type":"string","description":"The examinee's postal code.","nullable":true},"country":{"type":"string","description":"The examinee's three-letter ISO country code. This is validated to be three characters.","nullable":true},"company":{"type":"string","description":"The company that the examinee works for. No additional validation is performed.","nullable":true},"job-title":{"type":"string","description":"The examinee's job title. No additional validation is performed.","nullable":true},"custom-properties":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The program-specific names identifying the property.","nullable":true},"code":{"type":"string","description":"The program-specific code for the property.","nullable":true}},"additionalProperties":false},"description":"This element can contain an XML hierarchy of custom properties that are returned with the examinee information.","nullable":true},"time-factor":{"type":"string","description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a 3 would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","nullable":true},"delivery-options":{"type":"integer","description":"The bit flag that can be used for program options. See program documentation. See options in Appendix A.","format":"int32","nullable":true},"delivery-overrides":{"type":"integer","description":"The bit flag that can be used for program overrides. See program documentation. See overrides in Appendix B.","format":"int32","nullable":true},"institutions":{"type":"array","items":{"type":"object","properties":{"institution-id":{"type":"integer","description":"The unique ITS database identifier of the institution.","format":"int64"},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Examinees are linked to this institution. The web API client must have access to this institution.","nullable":true},"name":{"type":"string","description":"The institution name.","nullable":true},"program-examinee-public-id":{"type":"string","description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. For programs that use a username to login, this is the username. This identifier must be unique within the uniqueness scope as defined for the program. It is required if `RecordIdentifier` is not provided.","nullable":true},"enrollment-status":{"type":"integer","description":"This is required if the examinee is uniquely identified at the institution level. The table below includes the acceptable enrollment status values.\r\n**Enrollment Status**\r\n\r\n| Value | Description  |\r\n|-------|--------------|\r\n| 1     | Enrolled     |\r\n| 2     | Transferred  |\r\n| 3     | Graduated    |\r\n| 4     | Not Enrolled |","format":"int32"}},"additionalProperties":false},"description":"The collection of institution elements.","nullable":true},"certification-names":{"type":"array","items":{"type":"string"},"description":"The names of the certifications associated with this examinee. Multiple certifications are returned as a pipe | separated list.","nullable":true}},"additionalProperties":false},"description":"A collection of one or more examinee objects to create. The examinee object is documented above."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id","event-id"]},
    method: "post",
    pathTemplate: "/event/examinee/import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"event-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["EventExamineeImport1", {
    name: "EventExamineeImport1",
    description: `Creates or updates examinees and adds them to an event. This is a complete overwrite of the examinee in the ITS system. Any parameter not passed is cleared.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Examinees are linked to this institution. The web API client must have access to this institution."},"event-id":{"type":"number","format":"int64","description":"The unique database identifier of the event."},"requestBody":{"type":"object","properties":{"examinee-data":{"type":["array","null"],"items":{"type":"object","properties":{"examinee-id":{"type":"integer","description":"The unique ITS database identifier of the examinee. Required for Updates.","format":"int64","nullable":true},"program-examinee-system-id":{"maxLength":100,"type":"string","description":"The program's system identifier of the examinee. This is typically a database identifier. This identifier must be unique within the uniqueness scope defined for the program. It is required for Creates if `program-examinee-public-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-public-id` are not provided.","nullable":true},"program-examinee-public-id":{"maxLength":100,"type":"string","description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. The identifier must be unique within the uniqueness scope as defined for the program. It is required for Creates if `program-examinee-system-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-system-id` are not provided.","nullable":true},"program-examinee-institution-id":{"maxLength":256,"type":"string","description":"The program's unique Institutional Examinee identifier. The identifier must be unique within the uniqueness scope as defined for the program. The `program-institution-id` URL parameter is required when using this identifier.","nullable":true},"record-identifier":{"type":"string","description":"","nullable":true},"registration-identifier":{"type":"string","description":"","nullable":true},"active":{"type":"boolean","description":"If `true`, the examinee is active.","nullable":true},"examinee-status-id":{"type":"integer","description":"The table below describes each possible examinee status ID.\r\n**Examinee Status ID**\r\n\r\n| Status ID | Description         |\r\n|-----------|---------------------|\r\n| 1         | Active              |\r\n| 2         | Inactive            |\r\n| 3         | Suspended           |\r\n| 4         | Suspended Read-Only |","format":"int32","nullable":true},"enrollment-status":{"type":"string","description":"This is a program defined list. Example: Active, Graduated, …","nullable":true},"last-name":{"type":"string","description":"The examinee's last name.","nullable":true},"first-name":{"type":"string","description":"The examinee's first name.","nullable":true},"full-name":{"type":"string","description":"The examinee's full name. This is used for certificates and score reports.","nullable":true},"middle-name":{"type":"string","description":"The examinee's middle name. ","nullable":true},"title":{"type":"string","description":"A word used to describe the examinee's status or profession. Examples include Mr, Mrs, Doctor, Professor, etc. The set of allowed possible values is configurable for the program.","nullable":true},"grade":{"type":"string","description":"The enrolled grade of the examinee.","nullable":true},"major":{"type":"string","description":"The academic major of the examinee. The set of allowed possible values is configurable for the program.","nullable":true},"gender":{"type":"string","description":"The gender of the examinee. The set of allowed possible values is configurable for the program.","nullable":true},"ethnicity":{"type":"string","description":"A pipe-separated list of program-specific codes that describe the examinee.","nullable":true},"race":{"type":"string","description":"A pipe-separated list of program-specific codes that describe the examinee.","nullable":true},"language":{"type":"string","description":"The three-letter ISO language code.","nullable":true},"date-of-birth":{"type":"string","description":"The examinee's date of birth. MM-DD-YYYY","format":"date-time","nullable":true},"privacy-protected":{"type":"boolean","description":"Set if the user does not want their information shared. The default is `false`.","nullable":true},"waiver":{"type":"boolean","description":"Set if a waiver is on file for an examinee.","nullable":true},"time-zone-id":{"type":"integer","description":"The time zone that the examinee is in. See timezone/query for valid ID numbers.","format":"int32","nullable":true},"use-daylight-savings":{"type":"boolean","description":"If `true`, the examinee honors daylights savings.","nullable":true},"photo-image":{"type":"string","description":"Not Available","nullable":true},"photo-format":{"type":"string","description":"Not Available","nullable":true},"email":{"type":"string","description":"The examinee's email address. Must be correctly formatted per RFC 5322.","nullable":true},"primary-phone":{"type":"string","description":"The examinee's primary phone number.","nullable":true},"alternate-phone":{"type":"string","description":"The examinee's alternative phone number.","nullable":true},"parent-email-addresses":{"type":"string","description":"The email addresses of the examinee's parents. This is comma delimited. Must be correctly formatted per RFC 5322.","nullable":true},"preferred-contact-method":{"type":"integer","description":"This is the preferred contact method of the examinee. The default is 1. The table below includes the supported contact methods.\r\n**Contact Method**\r\n\r\n| Value | Description |\r\n|-------|-------------|\r\n| 1     | Email       |\r\n| 4     | SMS         |","format":"int32","nullable":true},"address":{"type":"string","description":"The first line of the examinee's address.","nullable":true},"address2":{"type":"string","description":"The second line of the examinee's address.","nullable":true},"address3":{"type":"string","description":"The third line of the examinee's address.","nullable":true},"city":{"type":"string","description":"The city that the examinee lives in.","nullable":true},"state":{"type":"string","description":"The state that the examinee lives in.","nullable":true},"postal-code":{"type":"string","description":"The examinee's postal code.","nullable":true},"country":{"type":"string","description":"The examinee's three-letter ISO country code. This is validated to be three characters.","nullable":true},"company":{"type":"string","description":"The company that the examinee works for. No additional validation is performed.","nullable":true},"job-title":{"type":"string","description":"The examinee's job title. No additional validation is performed.","nullable":true},"custom-properties":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The program-specific names identifying the property.","nullable":true},"code":{"type":"string","description":"The program-specific code for the property.","nullable":true}},"additionalProperties":false},"description":"This element can contain an XML hierarchy of custom properties that are returned with the examinee information.","nullable":true},"time-factor":{"type":"string","description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a 3 would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","nullable":true},"delivery-options":{"type":"integer","description":"The bit flag that can be used for program options. See program documentation. See options in Appendix A.","format":"int32","nullable":true},"delivery-overrides":{"type":"integer","description":"The bit flag that can be used for program overrides. See program documentation. See overrides in Appendix B.","format":"int32","nullable":true},"institutions":{"type":"array","items":{"type":"object","properties":{"institution-id":{"type":"integer","description":"The unique ITS database identifier of the institution.","format":"int64"},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Examinees are linked to this institution. The web API client must have access to this institution.","nullable":true},"name":{"type":"string","description":"The institution name.","nullable":true},"program-examinee-public-id":{"type":"string","description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. For programs that use a username to login, this is the username. This identifier must be unique within the uniqueness scope as defined for the program. It is required if `RecordIdentifier` is not provided.","nullable":true},"enrollment-status":{"type":"integer","description":"This is required if the examinee is uniquely identified at the institution level. The table below includes the acceptable enrollment status values.\r\n**Enrollment Status**\r\n\r\n| Value | Description  |\r\n|-------|--------------|\r\n| 1     | Enrolled     |\r\n| 2     | Transferred  |\r\n| 3     | Graduated    |\r\n| 4     | Not Enrolled |","format":"int32"}},"additionalProperties":false},"description":"The collection of institution elements.","nullable":true},"certification-names":{"type":"array","items":{"type":"string"},"description":"The names of the certifications associated with this examinee. Multiple certifications are returned as a pipe | separated list.","nullable":true}},"additionalProperties":false},"description":"A collection of one or more examinee objects to create. The examinee object is documented above."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id","event-id"]},
    method: "patch",
    pathTemplate: "/event/examinee/import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"event-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["EventQuery", {
    name: "EventQuery",
    description: `Retrieves details about an event.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. If supplied, all events linked to this institution, or its children will be returned. The web API client must have access to this institution."},"event-id":{"type":"string","description":"The unique database identifier of the event."},"event-description":{"type":"string","description":"Unique textual identifier for the event."},"active-only":{"type":"boolean","description":"If true, only events that haven't expired will be returned. The api will return events where end-utc is in the future."},"limit":{"maximum":500,"minimum":1,"type":"number","format":"int32","description":"The number of event objects to return. By default, this call returns a maximum of 500 objects. The limit can be set to any number less than 500."},"before-id":{"type":"number","format":"int64","description":"A specific `event-id`. The API returns objects with event-ids that precede `before-id`. This parameter cannot be used if `after-id` is used."},"after-id":{"type":"number","format":"int64","description":"A specific `event-id`. The API returns objects with event-ids that follow `after-id`. This parameter cannot be used if `before-id` is used."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/event/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"event-id","in":"query"},{"name":"event-description","in":"query"},{"name":"active-only","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["EventClose", {
    name: "EventClose",
    description: `This method closes a testing event. Closing a testing event will automatically complete all incomplete results, and if inventory is used, release unused inventory. User making the call must have access to the \`program-institution-id\` associated with the event. This is an asynchronous call that sets a flag on the event telling a service to start the process, and immediately returns, before the service has started.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. If supplied, all events linked to this institution, or its children will be returned. The web API client must have access to this institution."},"event-id":{"type":"string","description":"The unique database identifier of the event."},"event-description":{"type":"string","description":"Unique textual identifier for the event."}},"required":["program-id"]},
    method: "delete",
    pathTemplate: "/event/close",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"event-id","in":"query"},{"name":"event-description","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["EventCreate", {
    name: "EventCreate",
    description: `Creates events`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. This identifier is required for all institution tests. If supplied the testing event is only available to this institution and its children. The web API client must have access to this institution."},"requestBody":{"type":"array","items":{"type":"object","properties":{"event-id":{"type":["number","null"],"description":"Unique database identifier for the event. Must be used for subsequent calls to event/authorizations/query or event/close.","format":"int64"},"event-description":{"type":["string","null"],"description":"Unique textual identifier for the event. Minimum of 1 character and Maximum of 100"},"package-code":{"type":["string","null"],"description":"Uniquely identifies test(s) to be delivered. Not required or used for updates. Minimum of 1 character and Maximum of 50"},"form-name":{"type":["string","null"],"description":"Not required or used for updates.  Minimum of 1 character and Maximum of 50"},"start-utc":{"type":["string","null"],"description":"The start date and time of the event in UTC.","format":"date-time"},"end-utc":{"type":["string","null"],"description":"The end date and time of the event in UTC.","format":"date-time"},"num-examinees":{"type":"number","description":"The number of examinees. Parameter is required for anonymous or self-registration models (when not uploading examinees). One authorization will be generated for each examinee. Only increases are supported for updates.","format":"int32"},"event-options":{"type":["number","null"],"description":"Bitflag. Set bits to enable options. The table below includes the possible values for this parameter. Must be a value from 0 to 2097151 (including)\r\n**Event Options** \r\n\r\n| Bit | (Bit Value) | Description                                                                                                                     |\r\n|-----|-------------|---------------------------------------------------------------------------------------------------------------------------------|\r\n|  0  | 1         | Enable immediate score report in session                                                                                                                                                                                                              |\r\n|  2  | 4         | Automatically add students to event when logging into session                                                                                                                                                                                         |\r\n|  3  | 8         | Allow sessions for future events to be created                                                                                                                                                                                                        |\r\n|  4  | 16        | Restrict students to one class in event                                                                                                                                                                                                               |\r\n|  5  | 32        | Enable PDF downloads for all students                                                                                                                                                                                                                 |\r\n|  6  | 64        | Enable answer sheets for all students                                                                                                                                                                                                                 |\r\n|  7  | 128       | Require students to have a class in order to test                                                                                                                                                                                                     |\r\n|  8  | 256       | Allow classes to be created and modified after the event is closed.                                                                                                                                                                                   |\r\n|  9  | 512       | Do not release all unused inventory on close (primary or secondary) if the student did not use primary and secondary inventory. Default behavior is to release inventory if the student did not use primary and secondary inventory.                  |\r\n|  10 | 1024      | Release secondary inventory if student does not use secondary inventory. Default behavior is to not release secondary inventory if the student used the primary inventory and to release secondary inventory if the student did not use the primary.  |\r\n|  11 | 2048      | Reports are generated on event close                                                                                                                                                                                                                  |\r\n|  12 | 4096      | Reports are generated on score completion of all results                                                                                                                                                                                              |\r\n|  13 | 8192      | Waiver required.                                                                                                                                                                                                                                      |\r\n|  14 | 16384     | When set, StartTest2 will require a secure browser.    \r\n|  15 | 32768     | When set, event has been overridden by a program level user. Instutition users have limited ability to   edit.   |\r\n|  16 | 65536     | Event assignments require candidates to have active registrations.                                                                                                                                                                                    |\r\n|  17 | 131072    | Event candidates are anonymous                                                                                                                                                                                                                        |\r\n|  18 | 262144    | Suppress pre-test profiles                                                                                                                                                                                                                            |\r\n|  19 | 524288    | Require all sessions to be remote proctored.                                                                                                                                                                                                          |\r\n|  20 | 1048576   | Practice test administration. Forms are limited to practice forms via the program-specific test   administration setup component.       ","format":"int64"},"time-factor":{"type":["number","null"],"description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a “3” would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","format":"double"},"inventory-source":{"type":["number","null"],"description":"Only used for programs that require inventory. Specific requirements for this element will be provided as part of program configuration. The table below includes the possible values for this parameter. \r\n**Inventory Source** \r\n\r\n| Value | Description                                             |\r\n|-------|---------------------------------------------------------|\r\n| 1     | None                                                    |\r\n| 2     | Event owner institution is responsible for inventory    |\r\n| 3     | Event delivery institution is responsible for inventory |\r\n| 4     | Institution configuration defines source for inventory  |","format":"int64"},"all-institutions":{"type":"boolean","description":"If set to true, this event is available to all children institutions of the program-institution-id passed as the input parameter of this call."},"scoring-priority":{"type":["number","null"],"description":"Used to determine constructed response scoring priority when passed to third-party scoring system. Recommended values are program-specific and are typically based upon the expected number of business days needed for scoring turn-around. If not set, scoring will use the default priority. \r\n\r\nProgram approval is required to use expedited priority settings.","format":"int32"},"event-institutions":{"type":["array","null"],"items":{"type":"object","properties":{"delivery-program-institution-id":{"type":"string","description":"The unique identifier of a child institution that will have access to this event.  Minimum of 1 character and Maximum of 50","nullable":true}},"additionalProperties":false},"description":"A collection of delivery institutions that will have access to this event. This element should not be included if all-institutions is set to true."},"delivery-program-institution-id":{"type":["string","null"],"description":"The unique identifier of a child institution that will have access to this event. Minimum of 1 character and Maximum of 50"}},"additionalProperties":false,"description":"Body for event/create endpoint with its validation. Inherits from the Event object."},"description":"The JSON request body."}},"required":["program-id"]},
    method: "post",
    pathTemplate: "/event/create",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["EventUpdate", {
    name: "EventUpdate",
    description: `Finds and updates events by matching on supplied identifiers.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. This identifier is required for all institution tests. If supplied the testing event is only available to this institution and its children. The web API client must have access to this institution."},"requestBody":{"type":"array","items":{"type":"object","properties":{"event-id":{"type":["number","null"],"description":"Unique database identifier for the event. Must be used for subsequent calls to event/authorizations/query or event/close.","format":"int64"},"event-description":{"type":["string","null"],"description":"Unique textual identifier for the event. Minimum of 1 character and Maximum of 100"},"package-code":{"type":["string","null"],"description":"Uniquely identifies test(s) to be delivered. Not required or used for updates. Minimum of 1 character and Maximum of 50"},"form-name":{"type":["string","null"],"description":"Not required or used for updates.  Minimum of 1 character and Maximum of 50"},"start-utc":{"type":["string","null"],"description":"The start date and time of the event in UTC.","format":"date-time"},"end-utc":{"type":["string","null"],"description":"The end date and time of the event in UTC.","format":"date-time"},"num-examinees":{"type":"number","description":"The number of examinees. Parameter is required for anonymous or self-registration models (when not uploading examinees). One authorization will be generated for each examinee. Only increases are supported for updates.","format":"int32"},"event-options":{"type":["number","null"],"description":"Bitflag. Set bits to enable options. The table below includes the possible values for this parameter. Must be a value from 0 to 2097151 (including)\r\n**Event Options** \r\n\r\n| Bit | (Bit Value) | Description                                                                                                                     |\r\n|-----|-------------|---------------------------------------------------------------------------------------------------------------------------------|\r\n|  0  | 1         | Enable immediate score report in session                                                                                                                                                                                                              |\r\n|  2  | 4         | Automatically add students to event when logging into session                                                                                                                                                                                         |\r\n|  3  | 8         | Allow sessions for future events to be created                                                                                                                                                                                                        |\r\n|  4  | 16        | Restrict students to one class in event                                                                                                                                                                                                               |\r\n|  5  | 32        | Enable PDF downloads for all students                                                                                                                                                                                                                 |\r\n|  6  | 64        | Enable answer sheets for all students                                                                                                                                                                                                                 |\r\n|  7  | 128       | Require students to have a class in order to test                                                                                                                                                                                                     |\r\n|  8  | 256       | Allow classes to be created and modified after the event is closed.                                                                                                                                                                                   |\r\n|  9  | 512       | Do not release all unused inventory on close (primary or secondary) if the student did not use primary and secondary inventory. Default behavior is to release inventory if the student did not use primary and secondary inventory.                  |\r\n|  10 | 1024      | Release secondary inventory if student does not use secondary inventory. Default behavior is to not release secondary inventory if the student used the primary inventory and to release secondary inventory if the student did not use the primary.  |\r\n|  11 | 2048      | Reports are generated on event close                                                                                                                                                                                                                  |\r\n|  12 | 4096      | Reports are generated on score completion of all results                                                                                                                                                                                              |\r\n|  13 | 8192      | Waiver required.                                                                                                                                                                                                                                      |\r\n|  14 | 16384     | When set, StartTest2 will require a secure browser.    \r\n|  15 | 32768     | When set, event has been overridden by a program level user. Instutition users have limited ability to   edit.   |\r\n|  16 | 65536     | Event assignments require candidates to have active registrations.                                                                                                                                                                                    |\r\n|  17 | 131072    | Event candidates are anonymous                                                                                                                                                                                                                        |\r\n|  18 | 262144    | Suppress pre-test profiles                                                                                                                                                                                                                            |\r\n|  19 | 524288    | Require all sessions to be remote proctored.                                                                                                                                                                                                          |\r\n|  20 | 1048576   | Practice test administration. Forms are limited to practice forms via the program-specific test   administration setup component.       ","format":"int64"},"time-factor":{"type":["number","null"],"description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a “3” would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","format":"double"},"inventory-source":{"type":["number","null"],"description":"Only used for programs that require inventory. Specific requirements for this element will be provided as part of program configuration. The table below includes the possible values for this parameter. \r\n**Inventory Source** \r\n\r\n| Value | Description                                             |\r\n|-------|---------------------------------------------------------|\r\n| 1     | None                                                    |\r\n| 2     | Event owner institution is responsible for inventory    |\r\n| 3     | Event delivery institution is responsible for inventory |\r\n| 4     | Institution configuration defines source for inventory  |","format":"int64"},"all-institutions":{"type":"boolean","description":"If set to true, this event is available to all children institutions of the program-institution-id passed as the input parameter of this call."},"scoring-priority":{"type":["number","null"],"description":"Used to determine constructed response scoring priority when passed to third-party scoring system. Recommended values are program-specific and are typically based upon the expected number of business days needed for scoring turn-around. If not set, scoring will use the default priority. \r\n\r\nProgram approval is required to use expedited priority settings.","format":"int32"},"event-institutions":{"type":["array","null"],"items":{"type":"object","properties":{"delivery-program-institution-id":{"type":"string","description":"The unique identifier of a child institution that will have access to this event.  Minimum of 1 character and Maximum of 50","nullable":true}},"additionalProperties":false},"description":"A collection of delivery institutions that will have access to this event. This element should not be included if all-institutions is set to true."},"delivery-program-institution-id":{"type":["string","null"],"description":"The unique identifier of a child institution that will have access to this event. Minimum of 1 character and Maximum of 50"}},"additionalProperties":false,"description":"Body for event/update endpoint with its validation. Inherits from the Event object."},"description":"The JSON request body."}},"required":["program-id"]},
    method: "put",
    pathTemplate: "/event/update",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["ExamineeAuditQuery", {
    name: "ExamineeAuditQuery",
    description: `This method queries the examinee audit logs.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"examinee-id":{"type":"number","format":"int64","description":"The unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"string","description":"The program’s system identifier of the examinee."},"program-examinee-public-id":{"type":"string","description":"The program’s public or business identifier of the examinee."},"start-utc":{"type":"string","format":"date","description":"The start date >= of the audit log records in UTC."},"end-utc":{"type":"string","format":"date","description":"The end date <= of the audit log records in UTC."},"timezoneId":{"type":"number","format":"int64","description":"Defaults to ID=30 – UTC. Use the timezone/query to find the ID of the timezone you want to have the date and time values converted into. "},"useDaylightSavings":{"type":"boolean","description":"Required if a timezone-id is given."},"languageCode":{"type":"string","description":"Three-character language code (default is ENU) of language to return.  Currently only affects the \"Secure Browser Errors\" table query"},"includeBitFlag":{"type":"number","format":"int64","description":"Bit flag for any information you wish to include in the forms object. If include-flag is not requested, all information is included. \r\nExample: To include general form information and informational meta data, use 65 to represent 1+ 64.\r\nBit Information:\r\n\r\n| Bit Flag                       | Bit Value |\r\n| ------------------------------ | --------- |\r\n| 1 = General Form Information   | 1         |\r\n| 3 = Form Selection             | 2         |\r\n| 4 = Audits                     | 4         |\r\n| 5 = Equating                   | 8         |\r\n| 6 = Informational Meta Data    | 16        |\r\n| 7 = Delivery Information       | 32        |\r\n| 8 = Questions                  | 64        |\r\n| 9 = Reporting Groups / Scoring | 128       |\r\n| 10 = Projects                  | 256       |\r\n| 11 = Project Tasks             | 512       |\r\n| 12 = Project Labs              | 1024      |\r\n| 13 = Cases                     | 2048      |\r\n| 14 = Case Slides               | 4096      |\r\n| 15 = Sets                      | 8192      |\r\n"}},"required":["program-id","timezoneId","useDaylightSavings","includeBitFlag"]},
    method: "get",
    pathTemplate: "/examinee/audit/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"},{"name":"timezoneId","in":"query"},{"name":"useDaylightSavings","in":"query"},{"name":"languageCode","in":"query"},{"name":"includeBitFlag","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["QueryExamineeEvents", {
    name: "QueryExamineeEvents",
    description: `Retrieves examinee event information.`,
    inputSchema: {"type":"object","properties":{"program-id":{"minimum":1,"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. If supplied, all events linked to this institution, or its children will be returned. The web API client must have access to this institution."},"examinee-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"array","items":{"type":"string"},"description":"The program's system identifier of the examinee."},"program-examinee-public-id":{"type":"array","items":{"type":"string"},"description":"The program's public or business identifier of the examinee."},"IDType":{"enum":[0,1,2,3],"type":"number","format":"int32"}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/examinee/events/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"IDType","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["LongitudinalSegmentDetailQuery", {
    name: "LongitudinalSegmentDetailQuery",
    description: `Retrieves all the information needed to build an examinee's continuous learning dashboard for a specific segment.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"longitudinal-group-id":{"type":"number","format":"int64","description":"The unique ITS database identifier of the longitudinal group."},"longitudinal-group-name":{"type":"string","description":"The unique textual identifier of the longitudinal group."},"examinee-id":{"type":"number","format":"int64","description":"**One of the examinee identifiers below must be supplied** \nThe unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"string","description":"The program's system identifier of the examinee."},"program-examinee-public-id":{"type":"string","description":"The program's public or business identifier of the examinee."},"include-flag":{"maximum":15,"minimum":1,"type":"number","format":"int32","description":"Bit flag that represents any information you wish to include in the result.\r\n    Example: To include examinee and longitudinal information, use 5 to represent 1 + 4.\r\n    **Bit Information**\r\n    \r\n    | Bit Flag                  | Bit Value |\r\n    |---------------------------|-----------|\r\n    | 1=Event Information       | 1         |\r\n    | 2=Detail Information      | 2         |\r\n    | 3=Score Group Information | 4         |\r\n    | 4=Time Bank Information   | 8         |"},"result-id":{"type":"number","format":"int64","description":"The unique ITS database identifier of the test result. If this is not supplied, the last result taken by the examinee is returned."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/examinee/longitudinal-segment-detail/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"longitudinal-group-id","in":"query"},{"name":"longitudinal-group-name","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"include-flag","in":"query"},{"name":"result-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["LongitudinalSegmentsQuery", {
    name: "LongitudinalSegmentsQuery",
    description: `Retrieves high-level details about examinee segments for a specific longitudinal group.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"longitudinal-group-id":{"type":"number","format":"int64","description":"The unique ITS database identifier of the longitudinal group. If `longitudinal-group-id` and `longitudinal-group-name` are not supplied, all longitudinal groups for the matched examinees are returned."},"longitudinal-group-name":{"type":"string","description":"The unique textual identifier of the longitudinal group. If `longitudinal-group-id` and `longitudinal-group-name` are not supplied, all longitudinal groups for the matched examinees are returned."},"start-utc":{"type":"string","format":"date-time","description":"Filter for the start date to query from. Must include an end-utc date. Looks for all segments that start in this date range."},"end-utc":{"type":"string","format":"date-time","description":"Filter for the end date to query to. Must include an end-utc date. Looks for all segments that start in this date range."},"cycle-num":{"type":"number","format":"int32","description":"The cycle sequence number."},"run-num":{"type":"number","format":"int32","description":"The run sequence number. Must include a cycle number."},"segment-num":{"type":"number","format":"int32","description":"The segment sequence number. Must include a cycle and run number."},"examinee-id":{"type":"number","format":"int64","description":"**One of the examinee identifiers below must be supplied** \nThe unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"string","description":"The program's system identifier of the examinee. "},"program-examinee-public-id":{"type":"string","description":"The program's public or business identifier of the examinee."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/examinee/longitudinal-segments/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"longitudinal-group-id","in":"query"},{"name":"longitudinal-group-name","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"},{"name":"cycle-num","in":"query"},{"name":"run-num","in":"query"},{"name":"segment-num","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["ExamineeQuery", {
    name: "ExamineeQuery",
    description: `Retrieves details about examinees in a program.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"array","items":{"type":"string"},"description":"The unique program identifier of an institution. The API matches examinees linked to this institution and the institution's children. The web API client must have access to this institution."},"examinee-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the examinee. Use a comma-separated list to query on multiple examinees."},"program-examinee-system-id":{"type":"array","items":{"type":"string"},"description":"The program's system identifier of the examinee. Use a comma-separated list to query on multiple examinees."},"program-examinee-public-id":{"type":"array","items":{"type":"string"},"description":"The program's public or business identifier of the examinee. Use a comma-separated list to query on multiple examinees."},"return-fields":{"maximum":2,"minimum":0,"type":"number","format":"int32"},"include-flag":{"maximum":4095,"minimum":0,"type":"number","format":"int64","description":"Bit flag for any information you wish to include in the examinee object. If neither `include-flag` or `exclude-flag` are returned, all information is included. This parameter cannot be used if the exclude-flag parameter is used. Example: To include profile, address, and institution information, use 1096 to represent 8 + 64 + 1024. Bit Information\r\n\r\n| Bit Flag                            | Bit Value |\r\n|-------------------------------------|-----------|\r\n| 1 = Examinee status                 | 1         |\r\n| 2 = Enrollment status               | 2         |\r\n| 3 = Login information               | 4         |\r\n| 4 = Profile information             | 8         |\r\n| 5 = Examinee photo                  | 16        |\r\n| 6 = Contact information             | 32        |\r\n| 7 = Address                         | 64        |\r\n| 8 = Job information                 | 218       |\r\n| 9 = Program specific properties     | 256       |\r\n| 10 = Delivery options and overrides | 512       |\r\n| 11 = Institutions                   | 1024      |\r\n| 12 = Certifications                 | 2048      |"},"exclude-flag":{"maximum":4095,"minimum":0,"type":"number","format":"int64","description":"Bit flag for any information you wish to exclude from the examinee object. This parameter cannot be used if the `include-flag` parameter is used. See the `include-flag` parameter for a list of supported bits."},"limit":{"maximum":500,"minimum":1,"type":"number","format":"int32","default":500,"description":"The number of examinee objects to return. By default, this call returns a maximum of 500 objects. The limit can be set to any number less than 500."},"before-id":{"type":"number","format":"int64","default":9223372036854776000,"description":"A specific `examinee-id`. The API returns objects with `examinee-id`s that precede `before-id`. This parameter cannot be used if `after-id` is used."},"after-id":{"type":"number","format":"int64","description":"A specific `examinee-id`. The API returns objects with `examinee-id`s that follow `after-id`. This parameter cannot be used if `before-id` is used."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/examinee/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"return-fields","in":"query"},{"name":"include-flag","in":"query"},{"name":"exclude-flag","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["ExamineeImport", {
    name: "ExamineeImport",
    description: `Creates or updates the examinee within a program. The POST update is a complete overwrite of the examinee in the ITS system. Any parameter not passed is cleared. Use the PATCH verb to update single fields. Please work with your Program Manager to setup the import template.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Examinees are linked to this institution. The web API client must have access to this institution."},"requestBody":{"type":"object","properties":{"examinee-data":{"type":["array","null"],"items":{"type":"object","properties":{"examinee-id":{"type":"integer","description":"The unique ITS database identifier of the examinee. Required for Updates.","format":"int64","nullable":true},"program-examinee-system-id":{"maxLength":100,"type":"string","description":"The program's system identifier of the examinee. This is typically a database identifier. This identifier must be unique within the uniqueness scope defined for the program. It is required for Creates if `program-examinee-public-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-public-id` are not provided.","nullable":true},"program-examinee-public-id":{"maxLength":100,"type":"string","description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. The identifier must be unique within the uniqueness scope as defined for the program. It is required for Creates if `program-examinee-system-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-system-id` are not provided.","nullable":true},"program-examinee-institution-id":{"maxLength":256,"type":"string","description":"The program's unique Institutional Examinee identifier. The identifier must be unique within the uniqueness scope as defined for the program. The `program-institution-id` URL parameter is required when using this identifier.","nullable":true},"record-identifier":{"type":"string","description":"","nullable":true},"registration-identifier":{"type":"string","description":"","nullable":true},"active":{"type":"boolean","description":"If `true`, the examinee is active.","nullable":true},"examinee-status-id":{"type":"integer","description":"The table below describes each possible examinee status ID.\r\n**Examinee Status ID**\r\n\r\n| Status ID | Description         |\r\n|-----------|---------------------|\r\n| 1         | Active              |\r\n| 2         | Inactive            |\r\n| 3         | Suspended           |\r\n| 4         | Suspended Read-Only |","format":"int32","nullable":true},"enrollment-status":{"type":"string","description":"This is a program defined list. Example: Active, Graduated, …","nullable":true},"last-name":{"type":"string","description":"The examinee's last name.","nullable":true},"first-name":{"type":"string","description":"The examinee's first name.","nullable":true},"full-name":{"type":"string","description":"The examinee's full name. This is used for certificates and score reports.","nullable":true},"middle-name":{"type":"string","description":"The examinee's middle name. ","nullable":true},"title":{"type":"string","description":"A word used to describe the examinee's status or profession. Examples include Mr, Mrs, Doctor, Professor, etc. The set of allowed possible values is configurable for the program.","nullable":true},"grade":{"type":"string","description":"The enrolled grade of the examinee.","nullable":true},"major":{"type":"string","description":"The academic major of the examinee. The set of allowed possible values is configurable for the program.","nullable":true},"gender":{"type":"string","description":"The gender of the examinee. The set of allowed possible values is configurable for the program.","nullable":true},"ethnicity":{"type":"string","description":"A pipe-separated list of program-specific codes that describe the examinee.","nullable":true},"race":{"type":"string","description":"A pipe-separated list of program-specific codes that describe the examinee.","nullable":true},"language":{"type":"string","description":"The three-letter ISO language code.","nullable":true},"date-of-birth":{"type":"string","description":"The examinee's date of birth. MM-DD-YYYY","format":"date-time","nullable":true},"privacy-protected":{"type":"boolean","description":"Set if the user does not want their information shared. The default is `false`.","nullable":true},"waiver":{"type":"boolean","description":"Set if a waiver is on file for an examinee.","nullable":true},"time-zone-id":{"type":"integer","description":"The time zone that the examinee is in. See timezone/query for valid ID numbers.","format":"int32","nullable":true},"use-daylight-savings":{"type":"boolean","description":"If `true`, the examinee honors daylights savings.","nullable":true},"photo-image":{"type":"string","description":"Not Available","nullable":true},"photo-format":{"type":"string","description":"Not Available","nullable":true},"email":{"type":"string","description":"The examinee's email address. Must be correctly formatted per RFC 5322.","nullable":true},"primary-phone":{"type":"string","description":"The examinee's primary phone number.","nullable":true},"alternate-phone":{"type":"string","description":"The examinee's alternative phone number.","nullable":true},"parent-email-addresses":{"type":"string","description":"The email addresses of the examinee's parents. This is comma delimited. Must be correctly formatted per RFC 5322.","nullable":true},"preferred-contact-method":{"type":"integer","description":"This is the preferred contact method of the examinee. The default is 1. The table below includes the supported contact methods.\r\n**Contact Method**\r\n\r\n| Value | Description |\r\n|-------|-------------|\r\n| 1     | Email       |\r\n| 4     | SMS         |","format":"int32","nullable":true},"address":{"type":"string","description":"The first line of the examinee's address.","nullable":true},"address2":{"type":"string","description":"The second line of the examinee's address.","nullable":true},"address3":{"type":"string","description":"The third line of the examinee's address.","nullable":true},"city":{"type":"string","description":"The city that the examinee lives in.","nullable":true},"state":{"type":"string","description":"The state that the examinee lives in.","nullable":true},"postal-code":{"type":"string","description":"The examinee's postal code.","nullable":true},"country":{"type":"string","description":"The examinee's three-letter ISO country code. This is validated to be three characters.","nullable":true},"company":{"type":"string","description":"The company that the examinee works for. No additional validation is performed.","nullable":true},"job-title":{"type":"string","description":"The examinee's job title. No additional validation is performed.","nullable":true},"custom-properties":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The program-specific names identifying the property.","nullable":true},"code":{"type":"string","description":"The program-specific code for the property.","nullable":true}},"additionalProperties":false},"description":"This element can contain an XML hierarchy of custom properties that are returned with the examinee information.","nullable":true},"time-factor":{"type":"string","description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a 3 would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","nullable":true},"delivery-options":{"type":"integer","description":"The bit flag that can be used for program options. See program documentation. See options in Appendix A.","format":"int32","nullable":true},"delivery-overrides":{"type":"integer","description":"The bit flag that can be used for program overrides. See program documentation. See overrides in Appendix B.","format":"int32","nullable":true},"institutions":{"type":"array","items":{"type":"object","properties":{"institution-id":{"type":"integer","description":"The unique ITS database identifier of the institution.","format":"int64"},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Examinees are linked to this institution. The web API client must have access to this institution.","nullable":true},"name":{"type":"string","description":"The institution name.","nullable":true},"program-examinee-public-id":{"type":"string","description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. For programs that use a username to login, this is the username. This identifier must be unique within the uniqueness scope as defined for the program. It is required if `RecordIdentifier` is not provided.","nullable":true},"enrollment-status":{"type":"integer","description":"This is required if the examinee is uniquely identified at the institution level. The table below includes the acceptable enrollment status values.\r\n**Enrollment Status**\r\n\r\n| Value | Description  |\r\n|-------|--------------|\r\n| 1     | Enrolled     |\r\n| 2     | Transferred  |\r\n| 3     | Graduated    |\r\n| 4     | Not Enrolled |","format":"int32"}},"additionalProperties":false},"description":"The collection of institution elements.","nullable":true},"certification-names":{"type":"array","items":{"type":"string"},"description":"The names of the certifications associated with this examinee. Multiple certifications are returned as a pipe | separated list.","nullable":true}},"additionalProperties":false},"description":"A collection of one or more examinee objects to create. The examinee object is documented above."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id"]},
    method: "post",
    pathTemplate: "/examinee/import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["ExamineeImport1", {
    name: "ExamineeImport1",
    description: `Creates or updates the examinee within a program. The POST update is a complete overwrite of the examinee in the ITS system. Any parameter not passed is cleared. Use the PATCH verb to update single fields. Please work with your Program Manager to setup the import template.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Examinees are linked to this institution. The web API client must have access to this institution."},"requestBody":{"type":"object","properties":{"examinee-data":{"type":["array","null"],"items":{"type":"object","properties":{"examinee-id":{"type":"integer","description":"The unique ITS database identifier of the examinee. Required for Updates.","format":"int64","nullable":true},"program-examinee-system-id":{"maxLength":100,"type":"string","description":"The program's system identifier of the examinee. This is typically a database identifier. This identifier must be unique within the uniqueness scope defined for the program. It is required for Creates if `program-examinee-public-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-public-id` are not provided.","nullable":true},"program-examinee-public-id":{"maxLength":100,"type":"string","description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. The identifier must be unique within the uniqueness scope as defined for the program. It is required for Creates if `program-examinee-system-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-system-id` are not provided.","nullable":true},"program-examinee-institution-id":{"maxLength":256,"type":"string","description":"The program's unique Institutional Examinee identifier. The identifier must be unique within the uniqueness scope as defined for the program. The `program-institution-id` URL parameter is required when using this identifier.","nullable":true},"record-identifier":{"type":"string","description":"","nullable":true},"registration-identifier":{"type":"string","description":"","nullable":true},"active":{"type":"boolean","description":"If `true`, the examinee is active.","nullable":true},"examinee-status-id":{"type":"integer","description":"The table below describes each possible examinee status ID.\r\n**Examinee Status ID**\r\n\r\n| Status ID | Description         |\r\n|-----------|---------------------|\r\n| 1         | Active              |\r\n| 2         | Inactive            |\r\n| 3         | Suspended           |\r\n| 4         | Suspended Read-Only |","format":"int32","nullable":true},"enrollment-status":{"type":"string","description":"This is a program defined list. Example: Active, Graduated, …","nullable":true},"last-name":{"type":"string","description":"The examinee's last name.","nullable":true},"first-name":{"type":"string","description":"The examinee's first name.","nullable":true},"full-name":{"type":"string","description":"The examinee's full name. This is used for certificates and score reports.","nullable":true},"middle-name":{"type":"string","description":"The examinee's middle name. ","nullable":true},"title":{"type":"string","description":"A word used to describe the examinee's status or profession. Examples include Mr, Mrs, Doctor, Professor, etc. The set of allowed possible values is configurable for the program.","nullable":true},"grade":{"type":"string","description":"The enrolled grade of the examinee.","nullable":true},"major":{"type":"string","description":"The academic major of the examinee. The set of allowed possible values is configurable for the program.","nullable":true},"gender":{"type":"string","description":"The gender of the examinee. The set of allowed possible values is configurable for the program.","nullable":true},"ethnicity":{"type":"string","description":"A pipe-separated list of program-specific codes that describe the examinee.","nullable":true},"race":{"type":"string","description":"A pipe-separated list of program-specific codes that describe the examinee.","nullable":true},"language":{"type":"string","description":"The three-letter ISO language code.","nullable":true},"date-of-birth":{"type":"string","description":"The examinee's date of birth. MM-DD-YYYY","format":"date-time","nullable":true},"privacy-protected":{"type":"boolean","description":"Set if the user does not want their information shared. The default is `false`.","nullable":true},"waiver":{"type":"boolean","description":"Set if a waiver is on file for an examinee.","nullable":true},"time-zone-id":{"type":"integer","description":"The time zone that the examinee is in. See timezone/query for valid ID numbers.","format":"int32","nullable":true},"use-daylight-savings":{"type":"boolean","description":"If `true`, the examinee honors daylights savings.","nullable":true},"photo-image":{"type":"string","description":"Not Available","nullable":true},"photo-format":{"type":"string","description":"Not Available","nullable":true},"email":{"type":"string","description":"The examinee's email address. Must be correctly formatted per RFC 5322.","nullable":true},"primary-phone":{"type":"string","description":"The examinee's primary phone number.","nullable":true},"alternate-phone":{"type":"string","description":"The examinee's alternative phone number.","nullable":true},"parent-email-addresses":{"type":"string","description":"The email addresses of the examinee's parents. This is comma delimited. Must be correctly formatted per RFC 5322.","nullable":true},"preferred-contact-method":{"type":"integer","description":"This is the preferred contact method of the examinee. The default is 1. The table below includes the supported contact methods.\r\n**Contact Method**\r\n\r\n| Value | Description |\r\n|-------|-------------|\r\n| 1     | Email       |\r\n| 4     | SMS         |","format":"int32","nullable":true},"address":{"type":"string","description":"The first line of the examinee's address.","nullable":true},"address2":{"type":"string","description":"The second line of the examinee's address.","nullable":true},"address3":{"type":"string","description":"The third line of the examinee's address.","nullable":true},"city":{"type":"string","description":"The city that the examinee lives in.","nullable":true},"state":{"type":"string","description":"The state that the examinee lives in.","nullable":true},"postal-code":{"type":"string","description":"The examinee's postal code.","nullable":true},"country":{"type":"string","description":"The examinee's three-letter ISO country code. This is validated to be three characters.","nullable":true},"company":{"type":"string","description":"The company that the examinee works for. No additional validation is performed.","nullable":true},"job-title":{"type":"string","description":"The examinee's job title. No additional validation is performed.","nullable":true},"custom-properties":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"The program-specific names identifying the property.","nullable":true},"code":{"type":"string","description":"The program-specific code for the property.","nullable":true}},"additionalProperties":false},"description":"This element can contain an XML hierarchy of custom properties that are returned with the examinee information.","nullable":true},"time-factor":{"type":"string","description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a 3 would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","nullable":true},"delivery-options":{"type":"integer","description":"The bit flag that can be used for program options. See program documentation. See options in Appendix A.","format":"int32","nullable":true},"delivery-overrides":{"type":"integer","description":"The bit flag that can be used for program overrides. See program documentation. See overrides in Appendix B.","format":"int32","nullable":true},"institutions":{"type":"array","items":{"type":"object","properties":{"institution-id":{"type":"integer","description":"The unique ITS database identifier of the institution.","format":"int64"},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Examinees are linked to this institution. The web API client must have access to this institution.","nullable":true},"name":{"type":"string","description":"The institution name.","nullable":true},"program-examinee-public-id":{"type":"string","description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. For programs that use a username to login, this is the username. This identifier must be unique within the uniqueness scope as defined for the program. It is required if `RecordIdentifier` is not provided.","nullable":true},"enrollment-status":{"type":"integer","description":"This is required if the examinee is uniquely identified at the institution level. The table below includes the acceptable enrollment status values.\r\n**Enrollment Status**\r\n\r\n| Value | Description  |\r\n|-------|--------------|\r\n| 1     | Enrolled     |\r\n| 2     | Transferred  |\r\n| 3     | Graduated    |\r\n| 4     | Not Enrolled |","format":"int32"}},"additionalProperties":false},"description":"The collection of institution elements.","nullable":true},"certification-names":{"type":"array","items":{"type":"string"},"description":"The names of the certifications associated with this examinee. Multiple certifications are returned as a pipe | separated list.","nullable":true}},"additionalProperties":false},"description":"A collection of one or more examinee objects to create. The examinee object is documented above."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id"]},
    method: "patch",
    pathTemplate: "/examinee/import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["ExamineeDelete", {
    name: "ExamineeDelete",
    description: `Deletes an examinee from a program.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"array","items":{"type":"string"},"description":"The unique program identifier of an institution. The API matches examinees linked to this institution and the institution's children. The web API client must have access to this institution."},"examinee-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the examinee. One of the three examinee identifiers are required."},"program-examinee-public-id":{"type":"array","items":{"type":"string"},"description":"The program's public or business identifier of the examinee. One of the three examinee identifiers are required."},"program-examinee-system-id":{"type":"array","items":{"type":"string"},"description":"The program's system identifier of the examinee. One of the three examinee identifiers are required."},"delete-reason":{"type":"string"}},"required":["program-id","delete-reason"]},
    method: "delete",
    pathTemplate: "/examinee/delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"delete-reason","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["ExamineeRecordQuery", {
    name: "ExamineeRecordQuery",
    description: `This method queries a single audit log.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"table-name":{"type":"string","description":"The unique ITS database table name from the audit/query"},"record-id":{"type":"number","format":"int64","description":"The unique ITS database ID number for the record from the audit/query."}},"required":["program-id","table-name","record-id"]},
    method: "get",
    pathTemplate: "/examinee/record/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"table-name","in":"query"},{"name":"record-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["FormDefinitionImport", {
    name: "FormDefinitionImport",
    description: `Used to import Base64 encoded Form Definition XML. See schema and example files listed in the appendix.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"requestBody":{"required":["form-definition","form-id"],"type":"object","properties":{"form-id":{"type":"number","description":"The unique form identifier.","format":"int64"},"form-definition":{"minLength":1,"type":"string","description":"The form-definition object containing all the data used to create the form."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id"]},
    method: "post",
    pathTemplate: "/form/definition/Import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["FormDefinitionQuery", {
    name: "FormDefinitionQuery",
    description: `Used to query Form Definition XML. XML is return Base64 encoded.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"form-id":{"type":"number","format":"int64","description":"The unique database identifier of the form."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/form/definition/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"form-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["FormQuery", {
    name: "FormQuery",
    description: `This method returns the forms an institution is authorized to deliver for an event.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Only forms accessible by this institution are returned. The web API client must have access to this institution."},"form-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique database identifier of the form."},"last-modified-utc":{"type":"string","format":"date-time","description":"The UTC date/time to find all new or updated forms since that date/time."},"limit":{"maximum":1000,"minimum":1,"type":"number","format":"int32","description":"The number of result objects to return. By default, this call will return a maximum of 1000 form objects. The limit can be set to any number less than 1000."},"before-id":{"type":"number","format":"int64","description":"The form-id is the pagination ID used for this resource. Form objects with IDs immediately before this ID are returned. This parameter cannot be used if after-id is used."},"after-id":{"type":"number","format":"int64","description":"The form-id is the pagination ID used for this resource. Form objects with IDs immediately after this ID are returned. This parameter cannot be used if before-id is used."},"include-flag":{"type":"number","format":"int32","description":"Bit flag for any information you wish to include in the forms object. If include-flag is not requested, all information is included. \r\nExample: To include general form information and informational meta data, use 65 to represent 1+ 64.\r\nBit Information:\r\n\r\n| Bit Flag                       | Bit Value |\r\n| ------------------------------ | --------- |\r\n| 1 = General Form Information   | 1         |\r\n| 3 = Form Selection             | 2         |\r\n| 4 = Audits                     | 4         |\r\n| 5 = Equating                   | 8         |\r\n| 6 = Informational Meta Data    | 16        |\r\n| 7 = Delivery Information       | 32        |\r\n| 8 = Questions                  | 64        |\r\n| 9 = Reporting Groups / Scoring | 128       |\r\n| 10 = Projects                  | 256       |\r\n| 11 = Project Tasks             | 512       |\r\n| 12 = Project Labs              | 1024      |\r\n| 13 = Cases                     | 2048      |\r\n| 14 = Case Slides               | 4096      |\r\n| 15 = Sets                      | 8192      |\r\n"}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/Form/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"form-id","in":"query"},{"name":"last-modified-utc","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"},{"name":"include-flag","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["FormCreate", {
    name: "FormCreate",
    description: `Creates a form.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Only forms accessible by this institution are returned. The web API client must have access to this institution."},"requestBody":{"required":["description","form-name","language","test-id"],"type":"object","properties":{"form-name":{"minLength":1,"type":"string","description":"Name of the form. Must be unique within test."},"test-id":{"type":"number","description":"Unique database identifier of the test.","format":"int64"},"alias-name":{"type":["string","null"],"description":"Alternative name of form.  Returned in result xml.  Also used in form selection if form not found"},"description":{"minLength":1,"type":"string","description":"A form description. Used for registration-based programs where the test contains forms that are different tests."},"test-driver-version":{"maxLength":16,"minLength":0,"type":["string","null"],"description":"The test driver version associated with this form."},"content-key":{"type":["string","null"],"description":"Used as part of encryption process for forms published from Item Workshop.  Not used for dynamic forms."},"active":{"type":"boolean","description":"Set if the form is available for selection."},"language":{"minLength":1,"type":"string","description":"The three-letter ISO language code.  Forms are selected using target language or if this is not set."},"category":{"type":["string","null"],"description":"Categories are an optional way to balance forms across categories.  When selecting forms, the software will first determine the eligible forms, and if the forms are linked to a category, randomly select a category and select the form from that category to deliver."},"groups":{"type":["string","null"],"description":"Used when load balancing forms.  Forms can be grouped together for registration groups."},"priority":{"type":["number","null"],"description":"This is the priority of the form.  Used to sort the forms when selecting.  Higher priority forms are selected first.","format":"int32"},"set-number":{"type":["number","null"],"description":"Sets are used for rotating sets over time.  If used, each form is linked to a set number, and an active set number will be tracked for the test.  Only forms within the active set-number will be selected.","format":"int32"},"start-utc":{"type":["string","null"],"description":"The date the form is available to be taken in UTC.","format":"date-time"},"end-utc":{"type":["string","null"],"description":"End date the form is available in UTC.","format":"date-time"},"target-number":{"type":["number","null"],"description":"The target number of results.  Once this number is reached, the form will not be selected.","format":"int32"},"speed-min-upload":{"type":["number","null"],"description":"This is used for tests that have statistically equivalent lab and non-lab forms.  This value is the minimum upload speed required to deliver a lab form.  If set, an examinee’s upload speed must be above this value or a non-lab form will be delivered.","format":"int32"},"speed-min-download":{"type":["number","null"],"description":"This is used for tests that have statistically equivalent lab and non-lab forms.  This value is the minimum download speed required to deliver a lab form.  If set, an examinee’s download speed must be above this value or a non-lab form will be delivered.","format":"int32"},"speed-min-latency":{"type":["number","null"],"description":"This is used for tests that have statistically equivalent lab and non-lab forms.  This value is the maximum latency allowed to deliver a lab form.  If set, an examinee’s latency to the lab portal must be below this value or a non-lab form will be delivered.","format":"int32"},"activate-utc":{"type":["string","null"],"description":"The date the form is available to be taken in UTC.","format":"date-time"},"equated":{"type":["boolean","null"],"description":"If Null or set, the form is considered equated, meaning that score reports are available (if any), and aggregate results are also available"},"equated-utc":{"type":["string","null"],"description":"The date and time in UTC the form was equated (meaning all rescoring has occurred).","format":"date-time"},"equate-message":{"type":["string","null"],"description":"A message to be displayed on informational page at end of test instead of scores when the form is waiting for equating to be completed."},"accessible":{"type":["boolean","null"],"description":"If true, this form is accessible."},"practice":{"type":["boolean","null"],"description":"If true, this form is only available to practice events."},"read-aloud":{"type":["boolean","null"],"description":"Used when read-aloud forms is delivered.  Only one per test allowed."},"text-to-speech":{"type":["boolean","null"],"description":"If true, the form supports text to speech."},"require-secure-browser":{"type":["boolean","null"],"description":"If true, the test delivery system will require a secure browser."},"question-pool":{"type":["string","null"],"description":"Name of question pool for definition xml.  Maps to a pool name."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id","requestBody"]},
    method: "post",
    pathTemplate: "/Form/Create",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["FormUpdate", {
    name: "FormUpdate",
    description: `Updates one or more forms.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Only forms accessible by this institution are returned. The web API client must have access to this institution."},"requestBody":{"required":["form-id"],"type":"object","properties":{"form-id":{"type":"number","description":"Unique database identifier for the form.","format":"int64"},"form-name":{"type":["string","null"],"description":"Name of the form. Must be unique within test."},"alias-name":{"type":["string","null"],"description":"Alternative name of form.  Returned in result xml.  Also used in form selection if form not found.  "},"description":{"type":["string","null"],"description":"A form description. Used for registration-based programs where the test contains forms that are different tests."},"test-driver-version":{"type":["string","null"],"description":"The test driver version associated with this form."},"content-key":{"type":["string","null"],"description":"Used as part of encryption process for forms published from Item Workshop.  Not used for dynamic forms."},"active":{"type":["boolean","null"],"description":"Set if the form is available for selection."},"language":{"type":["string","null"],"description":"The three-letter ISO language code.  Forms are selected using target language or if this is not set."},"category":{"type":["string","null"],"description":"Categories are an optional way to balance forms across categories.  When selecting forms, the software will first determine the eligible forms, and if the forms are linked to a category, randomly select a category and select the form from that category to deliver."},"groups":{"type":["string","null"],"description":"Used when load balancing forms.  Forms can be grouped together for registration groups."},"priority":{"type":["number","null"],"description":"This is the priority of the form.  Used to sort the forms when selecting.  Higher priority forms are selected first.","format":"int32"},"set-number":{"type":["number","null"],"description":"Sets are used for rotating sets over time. If used, each form is linked to a set number, and an active set number will be tracked for the test. Only forms within the active set-number will be selected.","format":"int32"},"start-utc":{"type":["string","null"],"description":"The date the form is available to be taken in UTC.","format":"date-time"},"end-utc":{"type":["string","null"],"description":"End date the form is available in UTC.","format":"date-time"},"target-number":{"type":["number","null"],"description":"The target number of results. Once this number is reached, the form will not be selected.","format":"int32"},"speed-min-upload":{"type":["number","null"],"description":"This is used for tests that have statistically equivalent lab and non-lab forms. This value is the minimum upload speed required to deliver a lab form. If set, an examinee’s upload speed must be above this value or a non-lab form will be delivered.","format":"int32"},"speed-min-download":{"type":["number","null"],"description":"This is used for tests that have statistically equivalent lab and non-lab forms. This value is the minimum download speed required to deliver a lab form. If set, an examinee’s download speed must be above this value or a non-lab form will be delivered.","format":"int32"},"speed-min-latency":{"type":["number","null"],"description":"This is used for tests that have statistically equivalent lab and non-lab forms. This value is the maximum latency allowed to deliver a lab form. If set, an examinee’s latency to the lab portal must be below this value or a non-lab form will be delivered.","format":"int32"},"activate-utc":{"type":["string","null"],"description":"The date the form's activation status was modified in UTC.","format":"date-time"},"equated":{"type":["boolean","null"],"description":"If Null or set, the form is considered equated, meaning that score reports are available (if any), and aggregate results are also available"},"equated-utc":{"type":["string","null"],"description":"The date and time in UTC the form was equated (meaning all rescoring has occurred).","format":"date-time"},"equate-message":{"type":["string","null"],"description":"A message to be displayed on informational page at end of test instead of scores when the form is waiting for equating to be completed."},"accessible":{"type":["boolean","null"],"description":"If true, this form is accessible."},"practice":{"type":["boolean","null"],"description":"If true, this form is only available to practice events."},"read-aloud":{"type":["boolean","null"],"description":"Used when read-aloud forms is delivered.  Only one per test allowed."},"text-to-speech":{"type":["boolean","null"],"description":"If true, the form supports text to speech."},"require-secure-browser":{"type":["boolean","null"],"description":"If true, the test delivery system will require a secure browser."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id","requestBody"]},
    method: "patch",
    pathTemplate: "/Form/Update",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["FormDelete", {
    name: "FormDelete",
    description: `Deletes one or more forms.  You cannot delete forms linked to a result.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Only forms accessible by this institution are returned. The web API client must have access to this institution."},"form-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique database identifier of the form."}},"required":["program-id","form-id"]},
    method: "delete",
    pathTemplate: "/Form/Delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"form-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["GetFormReportsQuery", {
    name: "GetFormReportsQuery",
    description: `This method returns the form reporting data for a specific form.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64"},"test-id":{"type":"number","format":"int64"},"form-id":{"type":"number","format":"int64"}},"required":["program-id","test-id","form-id"]},
    method: "get",
    pathTemplate: "/form/reports/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"test-id","in":"query"},{"name":"form-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["GetFormResFilesQuery", {
    name: "GetFormResFilesQuery",
    description: `This method returns the binary encrypted RES file for a specific form.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64"},"form-id":{"type":"number","format":"int64"}},"required":["program-id","form-id"]},
    method: "get",
    pathTemplate: "/form/res-files/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"form-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["InventoryQuery", {
    name: "InventoryQuery",
    description: `Queries the Inventory tables for information on inventory counts.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution. "},"order-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"Comma delimited list of order-ids."},"program-order-id":{"type":"array","items":{"type":"string"},"description":"Comma delimited list of program-order-ids."},"package-code":{"type":"array","items":{"type":"number","format":"int64"},"description":"If specified, returns inventory for the specified packages only."},"start-order-utc":{"type":"string","description":"The start date >= of the order field of the order record. Used in conjunction with the end-order-utc.","format":"date-time"},"end-order-utc":{"type":"string","description":"The end date <= of the order field of the order record. Used in conjunction with the start-order-utc. ","format":"date-time"},"include-flag":{"type":"number","description":"Bit flag for the counts you wish to include in the Inventory object. \r\nBit Information:\r\n\r\n| Bit Flag                       | Bit Value |\r\n| ------------------------------ | --------- |\r\n| Purchased                      | 1         |\r\n| Available                      | 2         |\r\n| Activated                      | 4         |\r\n| Expired                        | 8         |\r\n| Removed                        | 16        |\r\n","format":"int64"}},"required":["program-id","program-institution-id"]},
    method: "get",
    pathTemplate: "/inventory/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"order-id","in":"query"},{"name":"program-order-id","in":"query"},{"name":"package-code","in":"query"},{"name":"start-order-utc","in":"query"},{"name":"end-order-utc","in":"query"},{"name":"include-flag","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["TestExportQuery", {
    name: "TestExportQuery",
    description: `Retrieves ItemBankXML for the forms for a given test`,
    inputSchema: {"type":"object","properties":{"bank-id":{"type":"number","format":"int64","description":"BankId for the bank from which to retrieve published form."},"form-id":{"type":"number","format":"int64","description":"FormId of the published form to be returned."}},"required":["bank-id","form-id"]},
    method: "get",
    pathTemplate: "/iw-tool/export/tests/query",
    executionParameters: [{"name":"bank-id","in":"query"},{"name":"form-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["ItemWorkshopImport", {
    name: "ItemWorkshopImport",
    description: `Item Workshop synchronous import.`,
    inputSchema: {"type":"object","properties":{"bank-id":{"type":"number","format":"int32","description":"The unique ITS database identifier of the bank provided as part of configuration."},"language":{"type":"string","description":"The three-letter ISO language code."},"folder-id":{"type":"number","format":"int32","description":"The unique ITS database identifier of the folder where the data will be imported."},"requestBody":{"type":"string","description":"Request body (content type: multipart/form-data)"}},"required":["bank-id","language","folder-id"]},
    method: "post",
    pathTemplate: "/iw-tool/import/import",
    executionParameters: [{"name":"bank-id","in":"query"},{"name":"language","in":"query"},{"name":"folder-id","in":"query"}],
    requestBodyContentType: "multipart/form-data",
    securityRequirements: [{"Default":[]}]
  }],
  ["ItemWorkshopImportAsync", {
    name: "ItemWorkshopImportAsync",
    description: `Item Workshop asynchronous import.`,
    inputSchema: {"type":"object","properties":{"bank-id":{"type":"number","format":"int32","description":"The unique ITS database identifier of the bank provided as part of configuration."},"language":{"type":"string","description":"The three-letter ISO language code."},"folder-id":{"type":"number","format":"int32","description":"The unique ITS database identifier of the folder where the data will be imported."},"callback-url":{"type":"string","description":"The URL to call when the import is complete. If this is not supplied, the notification that the import is complete is sent to the URL configured for ITS event notifications."},"requestBody":{"type":"string","description":"Request body (content type: multipart/form-data)"}},"required":["bank-id","language","folder-id"]},
    method: "post",
    pathTemplate: "/iw-tool/import/import-async",
    executionParameters: [{"name":"bank-id","in":"query"},{"name":"language","in":"query"},{"name":"folder-id","in":"query"},{"name":"callback-url","in":"query"}],
    requestBodyContentType: "multipart/form-data",
    securityRequirements: [{"Default":[]}]
  }],
  ["ItemWorkshopQuery", {
    name: "ItemWorkshopQuery",
    description: `Item Workshop query of import status.`,
    inputSchema: {"type":"object","properties":{"bank-id":{"type":"number","format":"int32","description":"The unique ITS database identifier of the bank provided as part of configuration."},"import-id":{"type":"number","format":"int32","description":"The unique ITS database identifier of the import."}},"required":["bank-id","import-id"]},
    method: "get",
    pathTemplate: "/iw-tool/import/query",
    executionParameters: [{"name":"bank-id","in":"query"},{"name":"import-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["GetLongitudinalGroupExamineesQuery", {
    name: "GetLongitudinalGroupExamineesQuery",
    description: `Retrieves details about examinees in a longitudinal group.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"longitudinal-group-id":{"type":"number","format":"int64","description":"The unique ITS database identifier of the longitudinal group. If `longitudinal-group-id` and `longitudinal-group-name` are not supplied, all longitudinal groups for the matched examinees are returned."},"longitudinal-group-name":{"type":"string","description":"The unique textual identifier of the longitudinal group. If `longitudinal-group-id` and `longitudinal-group-name` are not supplied, all longitudinal groups for the matched examinees are returned."},"examinee-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"**One of the examinee identifiers below must be supplied** \nThe unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"array","items":{"type":"string"},"description":"The program's system identifier of the examinee. "},"program-examinee-public-id":{"type":"array","items":{"type":"string"},"description":"The program's public or business identifier of the examinee."},"limit":{"type":"number","format":"int32","default":500,"description":"The number of Longitudinal Group Examinee objects to return. By default, this call returns a maximum of 500 objects. The limit can be set to any number less than 500."},"before-id":{"type":"number","format":"int64","description":"A specific examinee-id. The API returns objects with examinee-ids that precede before-id. This parameter cannot be used if after-id is used."},"after-id":{"type":"number","format":"int64","description":"A specific examinee-id. The API returns objects with examinee-ids that follow after-id. This parameter cannot be used if before-id is used."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/longitudinal-group/examinees/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"longitudinal-group-id","in":"query"},{"name":"longitudinal-group-name","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["PostLongitudinalGroupExamineesCreate", {
    name: "PostLongitudinalGroupExamineesCreate",
    description: `Enrolls examinees in a longitudinal group.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"requestBody":{"type":"object","properties":{"longitudinal-group-id":{"type":["number","null"],"description":"The unique ITS database identifier of the longitudinal group.","format":"int64"},"longitudinal-group-name":{"type":["string","null"],"description":"The unique textual identifier of the longitudinal group."},"longitudinal-group-description":{"type":["string","null"],"description":""},"examinee-id":{"type":["number","null"],"description":"The unique ITS database identifier of the examinee.","format":"int64"},"program-examinee-public-id":{"type":["string","null"],"description":"The program's public or business identifier of the examinee."},"program-examinee-system-id":{"type":["string","null"],"description":"The program's system identifier of the examinee."},"form-group":{"type":["string","null"],"description":"The form group that the examinee is assigned to. This determines the forms that are available for the examinee who is within a fixed-form longitudinal group. If this parameter is provided, the examinee receives a form linked to this form group."},"active":{"type":"boolean","description":"If true, the examinee can test and actively participate."},"read-only":{"type":"boolean","description":"If true, the examinee is given read-only access to the longitudinal group.","default":false}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id"]},
    method: "post",
    pathTemplate: "/longitudinal-group/examinees/create",
    executionParameters: [{"name":"program-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["PutLongitudinalGroupExamineesUpdate", {
    name: "PutLongitudinalGroupExamineesUpdate",
    description: `Finds and updates existing examinees in longitudinal groups by matching on supplied identifiers.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"requestBody":{"type":"object","properties":{"longitudinal-group-id":{"type":["number","null"],"description":"The unique ITS database identifier of the longitudinal group.","format":"int64"},"longitudinal-group-name":{"type":["string","null"],"description":"The unique textual identifier of the longitudinal group."},"longitudinal-group-description":{"type":["string","null"],"description":""},"examinee-id":{"type":["number","null"],"description":"The unique ITS database identifier of the examinee.","format":"int64"},"program-examinee-public-id":{"type":["string","null"],"description":"The program's public or business identifier of the examinee."},"program-examinee-system-id":{"type":["string","null"],"description":"The program's system identifier of the examinee."},"form-group":{"type":["string","null"],"description":"The form group that the examinee is assigned to. This determines the forms that are available for the examinee who is within a fixed-form longitudinal group. If this parameter is provided, the examinee receives a form linked to this form group."},"active":{"type":"boolean","description":"If true, the examinee can test and actively participate."},"read-only":{"type":"boolean","description":"If true, the examinee is given read-only access to the longitudinal group.","default":false}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id"]},
    method: "put",
    pathTemplate: "/longitudinal-group/examinees/update",
    executionParameters: [{"name":"program-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["DeleteLongitudinalGroupExamineesDelete", {
    name: "DeleteLongitudinalGroupExamineesDelete",
    description: `Removes an examinee from a longitudinal group.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"longitudinal-group-id":{"type":"number","format":"int64","description":"The unique ITS database identifier of the longitudinal group. This is required if longitudinal-group-name is not supplied. If no optional filters are supplied, all examinees linked to the group are removed."},"longitudinal-group-name":{"type":"string","description":"The unique textual identifier of the longitudinal group. This is required if longitudinal-group-id is not supplied. If no optional filters are supplied, all examinees linked to the group are removed."},"examinee-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"**One of the examinee identifiers below must be supplied** \nThe unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"array","items":{"type":"string"},"description":"The program's system identifier of the examinee. "},"program-examinee-public-id":{"type":"array","items":{"type":"string"},"description":"The program's public or business identifier of the examinee."},"permanent-delete":{"type":"boolean","description":"The default is false. This option is available only if the examinee has not taken any results within the longitudinal group. If true, the records are deleted from the database. If false, the examinee's longitudinal group is set to inactive."}},"required":["program-id"]},
    method: "delete",
    pathTemplate: "/longitudinal-group/examinees/delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"longitudinal-group-id","in":"query"},{"name":"longitudinal-group-name","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"permanent-delete","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["ExamineeQuery1", {
    name: "ExamineeQuery1",
    description: `Endpoint for querying message history`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The program's unique identifier"},"examinee-id":{"type":"number","format":"int64","description":"The unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"string","description":"The program’s system identifier of the examinee."},"program-examinee-public-id":{"type":"string","description":"The program’s public or business identifier of the examinee. "},"start-utc":{"type":"string","format":"date-time","description":"The start date >= of the CreateUTC field of the message record."},"end-utc":{"type":"string","format":"date-time","description":"The end date <= of the CreateUTC field of the message record."},"before-id":{"type":"number","format":"int64","default":9223372036854776000,"description":"Before ID for message history"},"after-id":{"type":"number","format":"int64","description":"After ID for message history"},"limit":{"type":"number","format":"int64","default":1000,"description":"Limit of the number of messages returned"}}},
    method: "get",
    pathTemplate: "/message-history/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"},{"name":"limit","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["OrderQuery", {
    name: "OrderQuery",
    description: `Retrieves details about orders.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. If supplied, all events linked to this institution or its children will be returned. The web API client must have access to this institution."},"order-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the order. Multiple supported."},"order-code":{"type":"array","items":{"type":"string"},"description":"The program-assigned, alpha-numeric identifier of the order. Multiple supported."},"package-code":{"type":"array","items":{"type":"string"},"description":"The program-assigned, alpha-numeric identifier of the package. Multiple supported."},"ordered-after-utc":{"type":"string","format":"date-time","description":"If specified, orders created on or after this date in UTC are returned. This parameter cannot be used if `ordered-before-utc` is supplied."},"ordered-before-utc":{"type":"string","format":"date-time","description":"If specified, orders created on or before this date in UTC are returned. This parameter cannot be used if `ordered-after-utc` is supplied."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/order/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"order-id","in":"query"},{"name":"order-code","in":"query"},{"name":"package-code","in":"query"},{"name":"ordered-after-utc","in":"query"},{"name":"ordered-before-utc","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["OrderCreate", {
    name: "OrderCreate",
    description: `Creates orders`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. This identifier is required for all institution tests. If supplied, the testing event is available only to this institution and its children. The web API client must have access to this institution."},"requestBody":{"type":"object","properties":{"orders":{"type":["array","null"],"items":{"required":["packages"],"type":"object","properties":{"order-code":{"type":"string","description":"The program-assigned, alpha-numeric identifier of the order.  Make sure that this is a unique identifier on the program side when creating or updating the order record.","nullable":true},"event-id":{"type":"integer","description":"The unique database identifier of the event.","format":"int64","nullable":true},"user-id":{"type":"integer","description":"The unique database identifier of the user who placed the order. If not provided or if invalid, the username of the user uploading the order is saved instead.","format":"int64","nullable":true},"examinee-id":{"type":"integer","description":"The unique ITS database identifier of the examinee.","format":"int64","nullable":true},"program-examinee-system-id":{"type":"string","description":"The program's system identifier of the examinee.","nullable":true},"program-examinee-public-id":{"type":"string","description":"The program's public or business identifier of the examinee.","nullable":true},"packages":{"type":"array","items":{"required":["package-code","quantity"],"type":"object","properties":{"package-code":{"minLength":1,"type":"string","description":"The program-assigned, alpha-numeric identifier of the package. Packages are not changed when you update an existing order."},"quantity":{"type":"integer","description":"The quantity of the package. Package quantities are not changed when you update an existing order.","format":"int32"},"expiration-utc":{"type":"string","description":"The expiration date of the inventory in UTC.","format":"date-time","nullable":true}},"additionalProperties":false},"description":"Collection of packages."},"method":{"type":"string","description":"The shipping code. Values are defined for the program.","nullable":true},"name":{"type":"string","description":"The shipping name for the order.","nullable":true},"organization":{"type":"string","description":"The shipping organization name for the order.","nullable":true},"phone":{"type":"string","description":"The shipping phone number for the order.","nullable":true},"country":{"type":"string","description":"The three-letter ISO country code for the country that the order will be shipped to.","nullable":true},"address1":{"type":"string","description":"The first line of the shipping address for the order.","nullable":true},"address2":{"type":"string","description":"The second line of the shipping address for the order.","nullable":true},"address3":{"type":"string","description":"The third line of the shipping address for the order.","nullable":true},"city":{"type":"string","description":"The city that the order will be shipped to. ","nullable":true},"state-region":{"type":"string","description":"The state or region that the order will be shipped to.","nullable":true},"postal-code":{"type":"string","description":"The postal code that the order will be shipped to.","nullable":true}},"additionalProperties":false}}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id"]},
    method: "post",
    pathTemplate: "/order/Create",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["OrderDelete", {
    name: "OrderDelete",
    description: `Removes all unused inventory from an order and removes customer access.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. This identifier is required for all institution tests. If supplied, the testing event is available only to this institution and its children. The web API client must have access to this institution."},"requestBody":{"type":"object","properties":{"order-id":{"type":["number","null"],"format":"int64"},"order-code":{"type":["string","null"]},"delete-reason":{"type":["string","null"]}},"additionalProperties":false,"description":"Removes all unused inventory from an order and removes customer access."}},"required":["program-id"]},
    method: "delete",
    pathTemplate: "/order/Delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["PackageFormsQuery", {
    name: "PackageFormsQuery",
    description: `This method returns the forms an institution is authorized to deliver for an event.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Only forms accessible by this institution are returned. The web API client must have access to this institution."},"package-code":{"type":"string","description":"The API will return forms for the `package-code` specified."},"accessible-only":{"type":"boolean","description":"If `true`, only accessible forms are returned. If not passed or `false`, accessible and non-accessible forms are returned."},"non-secure-only":{"type":"boolean","description":"If `true`, only non-secure forms are returned. If not passed or `false`, secure and non-secure forms are returned."},"practice-only":{"type":"boolean","default":false,"description":"If `true`, only practice forms are returned. If not passed or `false` and `non-practice-only` is not passed or `false`, then practice and non-practice forms are returned. This parameter cannot be passed if `non-practice-only` is passed as `true`."},"non-practice-only":{"type":"boolean","default":false,"description":"If `true`, only non-practice forms are returned. If not passed or `false` and `practice-only` is not passed or `false`, then practice and non-practice forms are returned. This parameter cannot be passed if `practice-only` is passed as `true`."}},"required":["program-id","program-institution-id","package-code"]},
    method: "get",
    pathTemplate: "/package/forms/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"package-code","in":"query"},{"name":"accessible-only","in":"query"},{"name":"non-secure-only","in":"query"},{"name":"practice-only","in":"query"},{"name":"non-practice-only","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["RegistrationUpdate", {
    name: "RegistrationUpdate",
    description: `Updates only the fields given for the record if given a program-registration-id.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution.  The web API client must have access to this institution."},"requestBody":{"type":"array","items":{"type":"object","properties":{"examinee-id":{"type":["number","null"],"description":"ITS database unique identifier for the examinee.","format":"int64"},"program-examinee-public-id":{"type":["string","null"],"description":"Program’s unique public identifier for the examinee."},"program-examinee-system-id":{"type":["string","null"],"description":"Program’s unique system identifier for the examinee."},"program-examinee-institution-id":{"type":["string","null"],"description":"The program's unique Institutional Examinee identifier. The identifier must be unique within the uniqueness scope as defined for the program. The program-institution-id URL parameter is required when using this identifier."},"program-registration-id":{"type":["string","null"],"description":"Program’s registration name."},"order":{"type":["string","null"],"description":"Program’s unique order identifier."},"sales-order-line-number":{"type":["string","null"],"description":"Program’s unique session identifier."},"active":{"type":["boolean","null"],"description":"If set to 0, then the registration is inactive."},"group":{"type":["string","null"],"description":"An identifier linking one or more forms for form selection."},"room":{"type":["string","null"],"description":"Room description for the Institution. "},"class-description":{"type":["string","null"],"description":"Class description or name. ITS database unique identifier for the examinee."},"course-section":{"type":["string","null"],"description":"Course Section Information "},"max-hours":{"type":["number","null"],"description":"The maximum hours before this test must be completed.","format":"int32"},"start-utc":{"type":["string","null"],"description":"Start date of the registration in UTC.","format":"date-time"},"end-utc":{"type":["string","null"],"description":"End date of the registration in UTC.","format":"date-time"},"created-utc":{"type":["string","null"],"description":"Date record was created.","format":"date-time"},"created-user-id":{"type":["number","null"],"description":"User who created the registration.","format":"int64"},"modified-utc":{"type":["string","null"],"description":"Date record was last modified.","format":"date-time"},"modify-user-id":{"type":["number","null"],"description":"User who modified the registration.","format":"int64"},"activated-utc":{"type":["string","null"],"description":"Date user's activation status last changed.","format":"date-time"},"activate-user-id":{"type":["number","null"],"description":"User who changed the registration's activation status.","format":"int64"},"tests":{"type":["array","null"],"items":{"type":"object","properties":{"test-name":{"type":"string","description":"The name of the test. Unique within program.","nullable":true},"form-name":{"type":"string","description":"Name of the form. Must be unique within test.","nullable":true},"test-demo":{"type":"boolean","description":"Set if the test is a demonstration or sample test.","nullable":true},"test-display-sequence":{"type":"integer","description":"The order in which the tests show up in the examinee's portal.","format":"int32","nullable":true},"language":{"maxLength":3,"minLength":0,"type":"string","description":"The three-letter ISO language code.","nullable":true},"options":{"type":"integer","description":"Possible bit flags that can be set to turn on or off options.","format":"int64","nullable":true},"overrides":{"type":"integer","description":"Possible bit flags that can be set to override configuration options that were made in the test or item.","format":"int64","nullable":true},"delivery-sequence":{"type":"integer","description":"The order in which the examinee has to take the test","format":"int32","nullable":true},"time-factor":{"type":"number","description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a “3” would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","format":"double","nullable":true},"remote-proctor-options":{"type":"integer","description":"A bit flag of remote proctor services that will be enabled for this registration test.","format":"int64","nullable":true},"remote-vendor-id":{"type":"integer","description":"A link to the RPVendorServices table, a table storing ITS’ supported remote proctoring vendor services.  If set, the exam will be delivered using this remote proctor vendor service.","format":"int32","nullable":true}},"additionalProperties":false}},"registration-id":{"type":["number","null"],"description":"ITS database unique identifier for the registration.","format":"int64"}},"additionalProperties":false},"description":"The JSON request body."}},"required":["program-id"]},
    method: "put",
    pathTemplate: "/registration/import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["RegistrationImportCreate", {
    name: "RegistrationImportCreate",
    description: `Creates a new registration or updates all fields for the record if given a program-registration-id.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution.  The web API client must have access to this institution."},"requestBody":{"type":"array","items":{"type":"object","properties":{"examinee-id":{"type":["number","null"],"description":"ITS database unique identifier for the examinee.","format":"int64"},"program-examinee-public-id":{"type":["string","null"],"description":"Program’s unique public identifier for the examinee."},"program-examinee-system-id":{"type":["string","null"],"description":"Program’s unique system identifier for the examinee."},"program-examinee-institution-id":{"type":["string","null"],"description":"The program's unique Institutional Examinee identifier. The identifier must be unique within the uniqueness scope as defined for the program. The program-institution-id URL parameter is required when using this identifier."},"program-registration-id":{"type":["string","null"],"description":"Program’s registration name."},"order":{"type":["string","null"],"description":"Program’s unique order identifier."},"sales-order-line-number":{"type":["string","null"],"description":"Program’s unique session identifier."},"active":{"type":["boolean","null"],"description":"If set to 0, then the registration is inactive."},"group":{"type":["string","null"],"description":"An identifier linking one or more forms for form selection."},"room":{"type":["string","null"],"description":"Room description for the Institution. "},"class-description":{"type":["string","null"],"description":"Class description or name. ITS database unique identifier for the examinee."},"course-section":{"type":["string","null"],"description":"Course Section Information "},"max-hours":{"type":["number","null"],"description":"The maximum hours before this test must be completed.","format":"int32"},"start-utc":{"type":["string","null"],"description":"Start date of the registration in UTC.","format":"date-time"},"end-utc":{"type":["string","null"],"description":"End date of the registration in UTC.","format":"date-time"},"created-utc":{"type":["string","null"],"description":"Date record was created.","format":"date-time"},"created-user-id":{"type":["number","null"],"description":"User who created the registration.","format":"int64"},"modified-utc":{"type":["string","null"],"description":"Date record was last modified.","format":"date-time"},"modify-user-id":{"type":["number","null"],"description":"User who modified the registration.","format":"int64"},"activated-utc":{"type":["string","null"],"description":"Date user's activation status last changed.","format":"date-time"},"activate-user-id":{"type":["number","null"],"description":"User who changed the registration's activation status.","format":"int64"},"tests":{"type":["array","null"],"items":{"type":"object","properties":{"test-name":{"type":"string","description":"The name of the test. Unique within program.","nullable":true},"form-name":{"type":"string","description":"Name of the form. Must be unique within test.","nullable":true},"test-demo":{"type":"boolean","description":"Set if the test is a demonstration or sample test.","nullable":true},"test-display-sequence":{"type":"integer","description":"The order in which the tests show up in the examinee's portal.","format":"int32","nullable":true},"language":{"maxLength":3,"minLength":0,"type":"string","description":"The three-letter ISO language code.","nullable":true},"options":{"type":"integer","description":"Possible bit flags that can be set to turn on or off options.","format":"int64","nullable":true},"overrides":{"type":"integer","description":"Possible bit flags that can be set to override configuration options that were made in the test or item.","format":"int64","nullable":true},"delivery-sequence":{"type":"integer","description":"The order in which the examinee has to take the test","format":"int32","nullable":true},"time-factor":{"type":"number","description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a “3” would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","format":"double","nullable":true},"remote-proctor-options":{"type":"integer","description":"A bit flag of remote proctor services that will be enabled for this registration test.","format":"int64","nullable":true},"remote-vendor-id":{"type":"integer","description":"A link to the RPVendorServices table, a table storing ITS’ supported remote proctoring vendor services.  If set, the exam will be delivered using this remote proctor vendor service.","format":"int32","nullable":true}},"additionalProperties":false}}},"additionalProperties":false},"description":"The JSON request body."}},"required":["program-id"]},
    method: "post",
    pathTemplate: "/registration/import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["PatchRegistrationUpdate", {
    name: "PatchRegistrationUpdate",
    description: `This will update a registration to link an examinee to it. `,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution.  The web API client must have access to this institution."},"examinee-id":{"type":"number","description":"ITS database unique identifier for the examinee.","format":"int64"},"program-examinee-public-id":{"type":"string","description":"Program’s unique public identifier for the examinee."},"program-examinee-system-id":{"type":"string","description":"Program’s unique system identifier for the examinee."},"program-examinee-institution-id":{"type":"string","description":"The program's unique Institutional Examinee identifier. The identifier must be unique within the uniqueness scope as defined for the program. The program-institution-id URL parameter is required when using this identifier."},"program-registration-id":{"type":"string","description":"Program’s registration name."},"registration-id":{"type":"number","description":"ITS database unique identifier for the registration.","format":"int64"}},"required":["program-id"]},
    method: "patch",
    pathTemplate: "/registration/update",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-institution-id","in":"query"},{"name":"program-registration-id","in":"query"},{"name":"registration-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["RegistrationQuery", {
    name: "RegistrationQuery",
    description: `This registration query will return registrations based on the filters provided.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution.  The web API client must have access to this institution."},"registration-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the registration. Multiple registrations can be specified using commas. If there is a value for this parameter, there should not be a value for program-registration-id"},"program-registration-id":{"type":"array","items":{"type":"string"},"description":"The unique identifier of the registration for the program. Multiple registration can be specified using commas. If there is a value for this parameter, there should not be a value for registration-id."},"examinee-id":{"type":"number","description":"Unique candidate identifier.","format":"int64"},"program-examinee-public-id":{"type":"string","description":"Program unique public string for the examinee"},"program-examinee-system-id":{"type":"string","description":"Program unique system string for the examinee "},"program-examinee-institution-id":{"type":"string","description":"The program's unique Institutional Examinee identifier.The identifier must be unique within the uniqueness scope as defined for the program. The program-institution-id URL parameter is required when using this identifier. "},"start-utc":{"type":"string","description":"Earliest start date matched in UTC","format":"date-time"},"end-utc":{"type":"string","description":"Latest start date matched in UTC.","format":"date-time"},"test-id":{"type":"number","description":"Unique test identifier.","format":"int64"},"started":{"type":"boolean","description":"If not provided, then condition is ignored. If False, then only registrations not linked to result are returned. If set to True, then only registrations with started results will be returned."},"completed":{"type":"boolean","description":"If not provided, then condition is ignored. If False, then only registrations that are not started or have not been completed are returned. If set to True, then only registrations with completed results will be returned."},"exclude-flag":{"maximum":2,"minimum":0,"type":"number","description":"Bit flag.  Set the bits for any information you wish to exclude from each registration \r\n        (the values in the table can be OR'd to set the desired filter). \r\n        Bit Information:\r\n\r\n        | Bit Flag                                                                           | Bit Value |\r\n        | ---------------------------------------------------------------------------------- | --------- |\r\n        | 1 = All registration information except RegistrationID and ProgramRegistrationID   | 1         |\r\n        | 2 = RegistrationTests                                                              | 2         |\r\n        ","format":"int64"},"limit":{"maximum":1000,"minimum":1,"type":"number","description":"The number of registration objects to return. By default, this call will return a maximum of 1000 registration objects. The limit can be set to any number less than 1000. ","format":"int32"},"before-id":{"type":"number","description":"The registration-id is the pagination ID used for this resource. Registration objects with IDs immediately before this ID are returned. This parameter cannot be used if after-id is used. ","format":"int64"},"after-id":{"type":"number","description":"The registration-id is the pagination ID used for this resource. Registration objects with IDs immediately after this ID are returned. This parameter cannot be used if before-id is used. ","format":"int64"}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/registration/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"registration-id","in":"query"},{"name":"program-registration-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-institution-id","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"},{"name":"test-id","in":"query"},{"name":"started","in":"query"},{"name":"completed","in":"query"},{"name":"exclude-flag","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["RegistrationDelete", {
    name: "RegistrationDelete",
    description: `This will delete registrations that do not have results started for them.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution.  The web API client must have access to this institution."},"registration-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique database identifier of the registration. Supports a comma delimited list."},"program-registration-id":{"type":"array","items":{"type":"string"},"description":"The program’s unique identifier for the registration. Support a comma delimited list."},"Reason":{"type":"string","description":"Explanation for the removal. Used on all registrations that are being removed."}},"required":["program-id","Reason"]},
    method: "delete",
    pathTemplate: "/registration/delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"registration-id","in":"query"},{"name":"program-registration-id","in":"query"},{"name":"Reason","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["RemoteAdminUrlsQuery", {
    name: "RemoteAdminUrlsQuery",
    description: `Retrieves a URL to a proctor session management portal.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"UserID":{"type":"number","format":"int64"},"url-type":{"type":"number","format":"int32","description":"1 = Direct session access (requires session code to be provided) \r\n\r\n2 = Session management (allows proctor to create and visit sessions)"},"session-code":{"type":"string","description":"`url-type` = 1. The unique identifier of the session. The `session-code` can refer to both existing, previously used, and new sessions. This is required if `url-type` = 1."},"redirect-url":{"type":"string","description":"Users are redirected to this URL when the remote URL is used after the expiration period (24 hours)."},"examinee-portal-options":{"type":"number","format":"int64"},"group-identifier":{"type":"string","description":"`url-type` = 2. Limits proctor to see sessions linked to this `group-identifier`."},"limit-days":{"type":"number","format":"int32","description":"`url-type` = 2. Limits proctor to see sessions created `limit-days` in the past. Set to 0 for same day only. The default is 0."},"proctor-identifier":{"type":"string","description":"The unique identifier of the proctor. This ID will be used in session audit logs."},"proctor-display-name":{"type":"string","description":"The proctor name that will be displayed on the session detail and session management pages."},"proctor-first-name":{"type":"string","description":"The first name of the proctor."},"proctor-last-name":{"type":"string","description":"The last name of the proctor."},"reserve-number":{"type":"number","format":"int32","description":"The number of examinees participating in the remote-proctored session."},"reserve-time":{"type":"string","format":"date-time","description":"The start time in UTC of the remoted-proctored session."},"parent-session-code":{"type":"string","description":"This parameter is only needed in a battery scenario where each subsequent test is delivered in a new session, and the session being created is occurring before the previous session’s reservations have expired. `parent-session-code` allows for all connections of the new session to assume the previous session’s reservations."},"resume-session":{"type":"boolean","description":"When set, the session expiration time is extended to the end of the day."},"minutes-offset":{"type":"number","format":"int32","description":"Minutes offset from UTC. The session expiration will be at midnight of the current day based on offset, or eight hours after start of session, whichever is later. If not provided, then offset will be EST (-300) / EDT(-240)."},"session-expiration":{"type":"string","format":"date-time","description":"The expiration date and time of the session. `minutes-offset` will be honored to determine the time zone. If `minutes-offset` is not provided, then offset will be EST (-300) / EDT(-240)."},"proctor-functions":{"type":"number","format":"int32"}},"required":["program-id","url-type","proctor-identifier","proctor-display-name","proctor-first-name","proctor-last-name"]},
    method: "get",
    pathTemplate: "/remote/admin-urls/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"UserID","in":"query"},{"name":"url-type","in":"query"},{"name":"session-code","in":"query"},{"name":"redirect-url","in":"query"},{"name":"examinee-portal-options","in":"query"},{"name":"group-identifier","in":"query"},{"name":"limit-days","in":"query"},{"name":"proctor-identifier","in":"query"},{"name":"proctor-display-name","in":"query"},{"name":"proctor-first-name","in":"query"},{"name":"proctor-last-name","in":"query"},{"name":"reserve-number","in":"query"},{"name":"reserve-time","in":"query"},{"name":"parent-session-code","in":"query"},{"name":"resume-session","in":"query"},{"name":"minutes-offset","in":"query"},{"name":"session-expiration","in":"query"},{"name":"proctor-functions","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["RemoteExamineeDataQuery", {
    name: "RemoteExamineeDataQuery",
    description: `This call returns URLs to retrieve examinee videos, chat logs, and photos for one or more examinees.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"session-code":{"type":"string","description":"The unique identifier of the session."},"examinee":{"type":"array","items":{"type":"number","format":"int64"},"description":"The internal database identifier of the examinee."},"program-examinee-public-id":{"type":"string","description":"The public identifier of the examinee. For example, a student identifier. Returned if available."},"program-examinee-system-id":{"type":"string","description":"The external system identifier for the examinee. This is typically a database identifier. Returned if available."},"data-options":{"type":"number","format":"int32","description":"Use the bitflag below to specify what information to return. The default is 31."},"url-available-hours":{"type":"number","format":"int32","description":"The number of hours the video, photo, and chat log URLs will be accessible after the URL is generated."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/remote/examinee-data/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"session-code","in":"query"},{"name":"examinee","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"data-options","in":"query"},{"name":"url-available-hours","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["GetRemotePracticeChecksQuery", {
    name: "GetRemotePracticeChecksQuery",
    description: `Retrieves details about a practice check.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"ip-address":{"type":"string","description":"If supplied, the API will return all system checks that originated from this ip-address.  You can request three octets or four octets.  If three octets are requested, the API will return all system checks where the first three octets of the system check ip address matches this ip-address."},"program-examinee-public-id":{"type":"string","description":"The program�s public or business identifier of the examinee."},"start-utc":{"type":"string","format":"date-time","description":"Includes all checks completed on or after this date."},"end-utc":{"type":"string","format":"date-time","description":"Includes all checks completed before this date."},"program-registration-id":{"type":"string","description":"The program’s unique identifier for the registration."},"limit":{"maximum":100,"minimum":1,"type":"number","format":"int32","default":100,"description":"The number of `remote-system-check` objects to return. By default, this call returns a maximum of 100 objects. The limit can be set to any number less than 100."},"before-id":{"type":"number","format":"int64","default":9223372036854776000,"description":"A specific `practice-check-id`. The API returns objects with system-check-ids that precede before-id. This parameter cannot be used if after-id is used."},"after-id":{"type":"number","format":"int64","description":"A specific `practice-check-id`. The API returns objects with system-check-ids that follow after-id. This parameter cannot be used if before-id is used."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/remote/practice-checks/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"ip-address","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"},{"name":"program-registration-id","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["RemoteSessionDataQuery", {
    name: "RemoteSessionDataQuery",
    description: `Retrieves videos, chat logs, and photos for one or more examinees.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"session-code":{"type":"string","description":"The unique identifier of the session."},"data-options":{"type":"number","format":"int32","description":"Use the bitflag below to specify what information to return. The default is 31."},"flagged-only":{"type":"boolean","description":"If set to `true`, only examinees with at least one flagged video recording will be included in the response object."},"url-available-hours":{"type":"number","format":"int32","description":"The number of hours the video, photo, and chat log URLs will be accessible after the URL is generated."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/remote/session-data/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"session-code","in":"query"},{"name":"data-options","in":"query"},{"name":"flagged-only","in":"query"},{"name":"url-available-hours","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["RemoteSessionCreate", {
    name: "RemoteSessionCreate",
    description: `Creates remote sessions that are hosted by Program Workshop. This call is for clients who want to create sessions in advance. It should not be used in conjunction with \`remote/admin-url/query\`, which creates sessions that are embedded in external systems.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"requestBody":{"type":"array","items":{"required":["description","start-utc"],"type":"object","properties":{"description":{"maxLength":50,"minLength":1,"type":"string","description":"The description of the session. This is displayed in the user interface for proctors."},"start-utc":{"type":"string","description":"The start date and time of the session in UTC.","format":"date-time"},"end-utc":{"type":"string","description":"The end date and time of the session in UTC.","format":"date-time"},"event-id":{"type":["number","null"],"description":"The ITS database identifier for the Event.","format":"int64"},"reserve-number":{"type":"number","description":"The number of examinees participating in the remote session.","format":"int32"},"minutes-offset":{"type":"number","description":"The number of minutes that the session is offset from UTC. This parameter is used only if `end-utc` is not provided. If it is provided, the session expiration is `end-utc`. If it is not provided, the expiration is midnight of the current day based on the offset, or eight hours after the start of the session, whichever is later. If `minutes-offset` is not provided, the offset is EST (-300) / EDT (-240).","format":"int32"},"group-identifier":{"type":["string","null"],"description":"Limits the proctor to only see sessions linked to this `group-identifier`."},"examinee-portal-options":{"type":["number","null"],"description":"Bit flag to set different options. Leave blank to use the preconfigured Global Options set for your program. Talk to your program manager on why you would use this field.\r\n\r\nBit Information:\r\n\r\n|     Bit Flag                   |     Bit Value |\r\n|--------------------------------|---------------|\r\n|     0=Examinee Login with first name, last name, and date of birth                            |     1         |\r\n|     1=Show terms of agreement                                                                 |     2         |\r\n|     2=Get photograph                                                                          |     4         |\r\n|     3=Get identification card photos                                                          |     8         |\r\n|     4=Disable recordings                                                                      |     16        |\r\n|     5=Create new sessions from management page                                                |     32        |\r\n|     6=Enable pause functionality                                                              |     64        |\r\n|     7=Examinee login with registration and password                                           |     128       |\r\n|     8=Mobile option if no camera available on device                                          |     256       |\r\n|     9=Check-in / Greeter Tab                                                                  |     512       |\r\n|     12=Approve all on check-in / Greeter Tab                                                  |     4096      |\r\n|     13=Assign examinee to proctors                                                            |     8192      |\r\n|     14=Assign roles to proctors                                                               |     16384     |\r\n|     16=Require two cameras for the examinee                                                   |     65536     |\r\n|     17=Filter out the ability to use virtual cameras. Requires ITS Secure Browsers            |     131072    |\r\n|     19=Enable a secondary institution consent form. Requires configuration within the system. |     524288    |","format":"int64"},"session-code":{"type":["string","null"],"description":"The unique identifier of the remote session. This parameter is required to update a remote session."}},"additionalProperties":false},"description":"The JSON request body."}},"required":["program-id"]},
    method: "post",
    pathTemplate: "/remote/sessions/create",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["RemoteSessionUpdate", {
    name: "RemoteSessionUpdate",
    description: `Finds and updates existing remote sessions by matching on supplied identifiers.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"requestBody":{"type":"array","items":{"required":["code","description","session-code","start-utc","user-id"],"type":"object","properties":{"user-id":{"type":"number","format":"int64"},"code":{"type":"number","format":"int64"},"session-code":{"minLength":1,"type":"string","description":"The unique identifier of the remote session. This parameter is required to update a remote session."},"description":{"minLength":1,"type":"string","description":"The description of the session. This is displayed in the user interface for proctors."},"start-utc":{"type":"string","description":"The start date and time of the session in UTC.","format":"date-time"},"end-utc":{"type":"string","description":"The end date and time of the session in UTC.","format":"date-time"},"reserve-number":{"type":"number","description":"The number of examinees participating in the remote session.","format":"int32"},"minutes-offset":{"type":"number","description":"The number of minutes that the session is offset from UTC. This parameter is used only if `end-utc` is not provided. If it is provided, the session expiration is `end-utc`. If it is not provided, the expiration is midnight of the current day based on the offset, or eight hours after the start of the session, whichever is later. If `minutes-offset` is not provided, the offset is EST (-300) / EDT (-240).","format":"int32"}},"additionalProperties":false},"description":"The JSON request body."}},"required":["program-id"]},
    method: "put",
    pathTemplate: "/remote/sessions/update",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["RemoteSessionQuery", {
    name: "RemoteSessionQuery",
    description: `Retrieves details about a remote session.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"session-code":{"type":"string","description":"The unique identifier of the remote session. This parameter is required if `start-utc` and `end-utc` are not supplied."},"start-utc":{"type":"string","format":"date-time","description":"Includes all sessions starting on or after this date. This parameter and `end-utc` are required if `session-code` is not supplied."},"end-utc":{"type":"string","format":"date-time","description":"Includes all sessions ending on or before this date. This parameter and `start-utc` are required if `session-code` is not supplied."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/remote/sessions/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"session-code","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["RemoteSessionDelete", {
    name: "RemoteSessionDelete",
    description: `Deletes a remote session.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"session-code":{"type":"array","items":{"type":"string"},"description":"The unique identifier of the remote session."}},"required":["program-id","session-code"]},
    method: "delete",
    pathTemplate: "/remote/sessions/delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"session-code","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["GetRemoteSystemChecksQuery", {
    name: "GetRemoteSystemChecksQuery",
    description: `Retrieves details about a remote system check.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"ip-address":{"type":"array","items":{"type":"string"},"description":"If supplied, the API will return all system checks that originated from this ip-address. You can request three octets or four octets. If three octets are requested, the API will return all system checks where the first three octets of the system check ip address matches this ip-address."},"start-utc":{"type":"string","format":"date-time","description":"Includes all checks completed on or after this date."},"end-utc":{"type":"string","format":"date-time","description":"Includes all checks completed before this date."},"limit":{"maximum":100,"minimum":1,"type":"number","format":"int32","default":100,"description":"Includes all checks completed before this date."},"before-id":{"type":"number","format":"int64","default":9223372036854776000,"description":"A specific system-check-id. The API returns objects with  system-check-ids that precede before-id. This parameter cannot be used if after-id is used."},"after-id":{"type":"number","format":"int64","description":"A specific system-check-id. The API returns objects with system-check-ids that follow after-id. This parameter cannot be used if before-id is used."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/remote/system-checks/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"ip-address","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["ResultIdentifierQuery", {
    name: "ResultIdentifierQuery",
    description: `Retrieves result identifiers that match the requested query.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"array","items":{"type":"string"},"description":"The unique program identifier of an institution. The API matches results linked to this institution and the institution’s children. The API client must have access to this institution."},"examinee-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"array","items":{"type":"string"},"description":"The program's system identifier of the examinee."},"program-examinee-public-id":{"type":"array","items":{"type":"string"},"description":"The program's public or business identifier of the examinee."},"program-registration-id":{"type":"array","items":{"type":"string"},"description":"The program's registration identifier."},"program-center-id":{"type":"array","items":{"type":"string"},"description":"The program's managed center."},"cohort-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The ITS database identifier of the cohort."},"event-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The ITS database identifier of the event."},"test-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The ITS database identifier of the test."},"form-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The ITS database identifier of the form."},"longitudinal-group-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the longitudinal group."},"start-utc":{"type":"string","format":"date-time","description":"Used in conjunction with the end-utc to give a time range for results with a modified date in that time range, in UTC."},"end-utc":{"type":"string","format":"date-time","description":"Used in conjunction with the start-utc to give a time range for results with a modified date in that time range, in UTC."},"completed-only":{"type":"boolean","description":"If `true`, only completed results are returned."},"equated-only":{"type":"boolean","description":"If `true`, only results linked to equated forms are returned. "},"include-demo":{"type":"boolean","description":"If `true`, demo results are included."},"limit":{"maximum":10000,"minimum":0,"type":"number","format":"int32","default":10000,"description":"The number of `result-id`s to return. By default, this call returns a maximum of 10,000 identifiers."},"before-id":{"type":"number","format":"int64","description":"A specific `result-id`. The API returns `result-id`s that precede `before-id`. This parameter cannot be used if `after-id` is used."},"after-id":{"type":"number","format":"int64","description":"A specific `result-id`. The API returns `result-id`s that follow `after-id`. This parameter cannot be used if `before-id` is used."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/result-identifier/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"program-registration-id","in":"query"},{"name":"program-center-id","in":"query"},{"name":"cohort-id","in":"query"},{"name":"event-id","in":"query"},{"name":"test-id","in":"query"},{"name":"form-id","in":"query"},{"name":"longitudinal-group-id","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"},{"name":"completed-only","in":"query"},{"name":"equated-only","in":"query"},{"name":"include-demo","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["ResultQuery", {
    name: "ResultQuery",
    description: `Retrieves results of a specific testing event.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"array","items":{"type":"string"},"description":"The unique program identifier of an institution. The API matches results linked to this institution and the institution’s children. The API client must have access to this institution."},"result-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the test result."},"examinee-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"array","items":{"type":"string"},"description":"The program's system identifier of the examinee."},"program-examinee-public-id":{"type":"array","items":{"type":"string"},"description":"The program's public or business identifier of the examinee."},"program-registration-id":{"type":"array","items":{"type":"string"},"description":"The program's registration identifier."},"program-center-id":{"type":"array","items":{"type":"string"},"description":"The program's managed center."},"cohort-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The ITS database identifier of the cohort."},"event-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The ITS database identifier of the event."},"test-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The ITS database identifier of the test."},"form-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The ITS database identifier of the form."},"longitudinal-group-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the longitudinal group."},"start-date":{"type":"string","format":"date-time","description":"The start date of results in UTC."},"end-date":{"type":"string","format":"date-time","description":"The end date of results in UTC. If the complete flag is set, this is based on the completed date of the result. Otherwise, this is based on the last modified date."},"completed-only":{"type":"boolean","description":"If `true`, only completed results are returned."},"equated-only":{"type":"boolean","description":"If `true`, only results linked to equated forms are returned."},"include-demo":{"type":"boolean","description":"If `true`, demo results are included."},"include-flag":{"type":"number","format":"int64","description":"Bit flag for any information you wish to include in the result. This parameter cannot be used if the `exclude-flag` is used.\r\n\r\nBit Information:\r\n\r\n|     Bit Flag                   |     Bit Value |\r\n|--------------------------------|---------------|\r\n|     1=Examinee                 |     1         |\r\n|     2=Center                   |     2         |\r\n|     3=Event                    |     4         |\r\n|     4=Actions                  |     8         |\r\n|     5=Questions                |     16        |\r\n|     6=Groups                   |     32        |\r\n|     7=Diagnostics              |     64        |\r\n|     8=Sections                 |     128       |\r\n|     9=Starts                   |     256       |\r\n|     10=Timing                  |     512       |\r\n|     11=Survey Questions        |     1024      |\r\n|     12=Essays                  |     2048      |\r\n|     13=Order Info              |     4096      |\r\n|     14=Institution Info        |     8192      |\r\n|     15=Cohort Info             |     16384     |\r\n|     16=Custom Questions        |     32768     |\r\n|     17=Comments                |     65536     |\r\n|     18=Accommodations          |     131072    |\r\n|     *19=Navigations            |     262144    |\r\n|     20=Longitudinal Group Info |     524288    |\r\n|     21=Incidents               |     1048576   |\r\n|     22=Variables               |     2097152   |\r\n\r\n* Navigations are not included unless requested with adding Bit 19 to the other Bit Flags requested, if you want all and Navigations use include-flag = 4194303"},"exclude-flag":{"type":"number","format":"int64","description":"Bit flag for any information you wish to exclude from the result. This parameter cannot be used if the `include-flag` parameter is used. Use the above table for Bit Values."},"limit":{"maximum":25,"minimum":0,"type":"number","format":"int32","default":25,"description":"The number of result objects to return. By default, this call returns a maximum of 25 objects."},"before-id":{"type":"number","format":"int64","description":"A specific `result-id`. The API returns objects with `result-id`s that precede `before-id`. This parameter cannot be used if `after-id` is used."},"after-id":{"type":"number","format":"int64","description":"A specific `result-id`. The API returns objects with `result-id`s that follow `after-id`. This parameter cannot be used if `before-id` is used."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/result/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"result-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"program-registration-id","in":"query"},{"name":"program-center-id","in":"query"},{"name":"cohort-id","in":"query"},{"name":"event-id","in":"query"},{"name":"test-id","in":"query"},{"name":"form-id","in":"query"},{"name":"longitudinal-group-id","in":"query"},{"name":"start-date","in":"query"},{"name":"end-date","in":"query"},{"name":"completed-only","in":"query"},{"name":"equated-only","in":"query"},{"name":"include-demo","in":"query"},{"name":"include-flag","in":"query"},{"name":"exclude-flag","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["ResultUpdate", {
    name: "ResultUpdate",
    description: `Updates parts of a result.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. The API matches results linked to this institution and the institution’s children. The API client must have access to this institution."},"result-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the test result."},"update-action":{"type":"number","format":"int32","description":"Action - 1 :  Description - Complete result"}},"required":["program-id","result-id","update-action"]},
    method: "patch",
    pathTemplate: "/result/update",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"result-id","in":"query"},{"name":"update-action","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["SabbaticalQuery", {
    name: "SabbaticalQuery",
    description: `Queries the Sabbatical tables for information on an examinee’s sabbatical.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"examinee-id":{"type":"number","format":"int64","description":"The unique ITS database identifier of the examinee."},"program-examinee-system-id":{"type":"string","description":"The program’s system identifier of the examinee."},"program-examinee-public-id":{"type":"string","description":"The program’s public or business identifier of the examinee."},"examinee-sabbatical-id":{"type":"string","description":"The unique ITS database identifier of the examinee’s sabbatical."},"start-utc":{"type":"string","format":"date-time","description":"The start date >= of the CreateUTC field of the message record."},"end-utc":{"type":"string","format":"date-time","description":"The end date <= of the CreateUTC field of the message record."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/sabbatical/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"examinee-id","in":"query"},{"name":"program-examinee-system-id","in":"query"},{"name":"program-examinee-public-id","in":"query"},{"name":"examinee-sabbatical-id","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["SecureBrowserErrorsQuery", {
    name: "SecureBrowserErrorsQuery",
    description: `This query returns the secure browser errors based on the optional filters.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique identifier for the program."},"environment-id":{"type":"number","format":"int32","description":"The ID of the environment to run the query on."},"program-institution-id":{"type":"string","description":"The customer’s unique Institution Code."},"external-registration-id":{"type":"string","description":"The customer’s unique registration ID."},"start-utc":{"type":"string","format":"date-time","description":"The start date to query by."},"end-utc":{"type":"string","format":"date-time","description":"The end date to query by"},"limit":{"type":"number","format":"int32","description":"The limit of the number of records returned"},"before-id":{"type":"number","format":"int32","description":"The id to return all records with an id before this point."},"end-id":{"type":"number","format":"int32","description":"The id to return all records with an id before this point."}},"required":["program-id","environment-id"]},
    method: "get",
    pathTemplate: "/secure-browser/errors/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"environment-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"external-registration-id","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"end-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["SecureBrowserTokensValidate", {
    name: "SecureBrowserTokensValidate",
    description: `This API calls our token validator service to respond with whether the token is valid or not`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique identifier for the program."},"requestBody":{"title":"Token","required":["agent-identifier","encrypted-key","environment","random-string","sb-version"],"type":"object","properties":{"environment":{"type":["string","null"],"description":"The Environment to check the token against"},"random-string":{"type":["string","null"],"description":"The random string seed that was used to generate the original token in the GetToken() Secure Browser call."},"encrypted-key":{"type":["string","null"],"description":"The encrypted key returned by the GetToken() call made to the Secure Browser."},"agent-identifier":{"type":["string","null"],"description":"The Agent Identifier associated with the Secure Browser."},"sb-version":{"type":["string","null"],"description":"The version of the Secure Browser."}},"additionalProperties":false,"description":"Request representing a token"}},"required":["program-id","requestBody"]},
    method: "post",
    pathTemplate: "/secure-browser/tokens/validate",
    executionParameters: [{"name":"program-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["SessionQuery", {
    name: "SessionQuery",
    description: `Retrieves details about a remote session.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","description":"The program's unique identifier","format":"int64"},"program-institution-id":{"maxLength":100,"type":"string","description":"The program’s name for the institution that is referenced"},"session-code":{"maxLength":50,"type":"string","description":"The unique identifier of the remote session."},"start-utc":{"type":"string","description":"The start date and time of the session in UTC.","format":"date-time"},"end-utc":{"type":"string","description":"The end date and time of the session in UTC.","format":"date-time"}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/session/query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"session-code","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["SessionCreate", {
    name: "SessionCreate",
    description: `Creates a session that are hosted by Program Workshop.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64"},"program-institution-id":{"type":"string"},"requestBody":{"type":"object","properties":{"program-id":{"type":"number","description":"The program's unique identifier","format":"int64"},"program-institution-id":{"type":["string","null"],"description":"The program’s name for the institution that is referenced"},"session-code":{"type":["string","null"],"description":"The unique identifier of the remote session. This parameter is required to update a remote session."},"event-id":{"type":["number","null"],"description":"The ITS database identifier for the Event.","format":"int64"},"description":{"type":["string","null"],"description":"The description of the session. This is displayed in the user interface for proctors."},"start-utc":{"type":["string","null"],"description":"The start date and time of the session in UTC.","format":"date-time"},"end-utc":{"type":["string","null"],"description":"The end date and time of the session in UTC.","format":"date-time"},"subject":{"type":["string","null"],"description":"Designate a single subject to restrict test delivery in the session to only those tests associated with the matching subject. Subject must exist and be linked to one or more tests via products."},"score-report-options":{"type":["number","null"],"description":"Options for the session's score reports:\r\n                                       0: None\r\n                                       1: Without Review\r\n                                       2: Review without solutions\r\n                                       3: eview with solutions(correct/incorrect displayed)","format":"int32"}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id","requestBody"]},
    method: "post",
    pathTemplate: "/session/create",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["SessionUpdate", {
    name: "SessionUpdate",
    description: `Finds and updates an existing session by matching on supplied identifiers.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64"},"program-institution-id":{"type":"string"},"requestBody":{"type":"object","properties":{"program-id":{"type":"number","description":"The program's unique identifier","format":"int64"},"program-institution-id":{"type":["string","null"],"description":"The program’s name for the institution that is referenced"},"session-code":{"type":["string","null"],"description":"The unique identifier of the remote session. This parameter is required to update a remote session."},"event-id":{"type":["number","null"],"description":"The ITS database identifier for the Event.","format":"int64"},"description":{"type":["string","null"],"description":"The description of the session. This is displayed in the user interface for proctors."},"start-utc":{"type":["string","null"],"description":"The start date and time of the session in UTC.","format":"date-time"},"end-utc":{"type":["string","null"],"description":"The end date and time of the session in UTC.","format":"date-time"},"subject":{"type":["string","null"],"description":"Designate a single subject to restrict test delivery in the session to only those tests associated with the matching subject. Subject must exist and be linked to one or more tests via products."},"score-report-options":{"type":["number","null"],"description":"Options for the session's score reports:\r\n                                       0: None\r\n                                       1: Without Review\r\n                                       2: Review without solutions\r\n                                       3: eview with solutions(correct/incorrect displayed)","format":"int32"}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id","requestBody"]},
    method: "patch",
    pathTemplate: "/session/update",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["SessionDelete", {
    name: "SessionDelete",
    description: `Soft deletes a session setting its Active flag to FALSE.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64"},"session-code":{"maxLength":50,"type":"string"}},"required":["program-id","session-code"]},
    method: "delete",
    pathTemplate: "/session/delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"session-code","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["SignalRDomainQuery", {
    name: "SignalRDomainQuery",
    description: `Returns the configured SignalR hostname.`,
    inputSchema: {"type":"object","properties":{}},
    method: "get",
    pathTemplate: "/signalr-domain/query",
    executionParameters: [],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["StartTestLogin", {
    name: "StartTestLogin",
    description: `Retrieves a URL that logs an examinee into the specified site. The examinee record is created or updated. The URL is time-sensitive and can be used only once.`,
    inputSchema: {"type":"object","properties":{"program-id":{"minimum":1,"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. The API matches examinees linked to this institution and the institution's children. The web API client must have access to this institution."},"requestBody":{"type":"object","properties":{"examinee":{"type":"object","properties":{"program-examinee-system-id":{"type":["string","null"],"description":"The program's system identifier of the examinee. This is typically a database identifier. This identifier must be unique within the uniqueness scope defined for the program. It is required for Creates if `program-examinee-public-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-public-id` are not provided."},"program-examinee-public-id":{"type":["string","null"],"description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. The identifier must be unique within the uniqueness scope as defined for the program. It is required for Creates if `program-examinee-system-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-system-id` are not provided."},"email":{"type":["string","null"],"description":"The examinee's email address. "},"first-name":{"type":["string","null"],"description":"The examinee's first name."},"middle-name":{"type":["string","null"],"description":"The examinee's middle name. "},"last-name":{"type":["string","null"],"description":"The examinee's last name."},"address1":{"type":["string","null"],"description":"The first line of the examinee's address."},"address2":{"type":["string","null"],"description":"The second line of the examinee's address."},"address3":{"type":["string","null"],"description":"The third line of the examinee's address."},"city":{"type":["string","null"],"description":"The city that the examinee lives in."},"state":{"type":["string","null"],"description":"The state that the examinee lives in."},"postal":{"type":["string","null"],"description":"The examinee's postal code."},"country":{"type":["string","null"],"description":"The examinee's three-letter ISO country code. This is validated to be three characters."},"primary-phone":{"type":["string","null"],"description":"The examinee's primary phone number."},"alternate-phone":{"type":["string","null"],"description":"The examinee's alternative phone number."},"photo-image":{"type":["string","null"],"description":"Not Available"},"photo-format":{"type":["string","null"],"description":"Not Available"}},"additionalProperties":false},"examinee-xml":{"type":["string","null"]},"delivery":{"type":"object","properties":{"form-id":{"type":["number","null"],"description":"The unique identifier for the form.","format":"int64"},"test-name":{"type":["string","null"],"description":"The unique textual identifier of the test. Required if `product-code` is not supplied."},"form-name":{"type":["string","null"],"description":"The unique form name. If this is not provided, the form is automatically selected. If this is provided, the form is validated to ensure it is active and authorized."},"form-group":{"type":["string","null"],"description":"Forms may be linked one or more groups.  If specified, then form selection will only match forms that are linked to the form-group passed in."},"pretest-group":{"type":["string","null"],"description":"Used in two ways. First, delivery groups can be linked to a pretest group. At delivery time, all delivery groups with a pretest-group reference are ignored if this pretest-group parameter on start does not match. Second, delivery groups can be linked to a pretest reference, which is dynamically used to match pretest items or sets managed outside of the test definition. When set on the delivery group, the delivery software will query the pretest references for items or sets that match the reference identifier and this pretest-group. If the pretest group is not passed in on start, then the delivery software will query for pretest references that match the reference identifier and are not linked to a pretest group. See the web service interface for managing pretest references for more information."},"product-code":{"type":["string","null"],"description":"The unique textual identifier of the product to deliver."},"language":{"type":["string","null"],"description":"The three-letter ISO language code. For multi-language tests, this is the code for the starting test language."},"break-factor":{"type":["number","null"],"description":"If timing is enabled and configured, this factor will be multiplied against the time set on all breaks.  For instance, “2” would provide double time on every break.  Break factor of 0 turns off the timing.  If not set, then time-factor will be used as the factor on breaks.","format":"double"},"break-minutes":{"type":["number","null"],"description":"The number of minutes allowed for break time.  Replaces test configuration with shared break time.  This value is not modified by break-factor if also passed in.","format":"int32"},"time-factor":{"type":["number","null"],"description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a “3” would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","format":"double"},"timing-defaults":{"type":["string","null"],"description":"\r\nIn pipe delimited format for the following categories, in seconds.  Categories are all optional.  So, if timing was set for discrete items only, it might look like this: “30||60”.  This timing overrides test configuration for questions.  This is the only way to set timing for retries, pre-question dialogs, post-question surveys, and critique.  Categories: \r\n\r\n·          Question - Discrete \r\n\r\n·          Question - Set (any group with a reading or an article) \r\n\r\n·          Question Retry- Discrete \r\n\r\n·          Question Retry- Set \r\n\r\n·          Post-question survey \r\n\r\n"},"time-minutes-adjustment":{"type":["number","null"],"description":"The software will compare this value to the overall time of the test, and calculate a time-factor that affects all timed areas including items.  Ignored if time-factor passed in. ","format":"int32"},"time-extension":{"type":["number","null"],"description":"?? Not supported","format":"int32"},"options":{"type":["number","null"],"description":"The bit flag that enables test delivery options. See options in Appendix A.","format":"int64"},"overrides":{"type":["number","null"],"description":"The bit flag that allows test- or item-configured options to be overridden. See overrides in Appendix B.","format":"int64"},"complete-url":{"type":["string","null"],"description":"When an examinee completes a test, this URL is called. This URL closes the secure browser if one is used."},"pause-url":{"type":["string","null"],"description":"When an examinee pauses a test, this URL is called. This URL closes the secure browser if one is used."},"error-url":{"type":["string","null"],"description":"API-related errors navigate to this URL. If this is not provided, a built-in error page is used."},"enforce-secure-browser":{"type":["boolean","null"],"description":"The table below includes the possible values for this parameter.\r\n    **Enforce Secure Browser**\r\n    \r\n    | Value | Description                                                            |\r\n    |-------|------------------------------------------------------------------------|\r\n    | 0     | Do not enforce the use of the ITS Secure Browser. This is the default. |\r\n    | 1     | Enforce the use of the ITS Secure Browser.                             |\r\n    "},"secure-browser-error-url":{"type":["string","null"],"description":"If a secure browser is required and if the API call is not made within a secure browser or app, this URL is called."},"delivery-model-id":{"type":["number","null"],"description":"Enumeration. Provided from ITS. A default value is set if not provided.","format":"int64"},"external-registration-id":{"type":["string","null"],"description":"The unique external identifier of the registration."},"external-center-id":{"type":["string","null"],"description":"The unique external identifier of the center delivering the test."},"external-order-id":{"type":["string","null"],"description":"Unique external identifier of the order."},"external-session-id":{"type":["string","null"],"description":"Unique external identifier of the session."},"station-id":{"type":["string","null"],"description":"Station identifier."},"process-name":{"type":["string","null"],"description":"Used to ensure that third party remote proctoring system is running correctly.  Test will stop if process is not running at any point during test delivery."},"process-id":{"type":["string","null"],"description":"Test will stop if process-name is not process-id during test startup."},"process-hash":{"type":["string","null"],"description":"Test will stop if process-name does not have the hashed process-hash."},"segment":{"type":["number","null"],"description":"Used for multi-segment delivery only.  Sent for multi-segment exams or exams that are delivered in multiple segments in a segment (for instance, a morning session and an afternoon session).  A collection of \"segments\" must be included for first segment started (which does not need to be the first segment), which will be used to define the test definition (this collection is only used for the initial start of the test).  At the time the test is started, normal random selection and ordering will be performed (if configured).  Once the order of delivery groups and questions and selection of pretest has been completed, the delivery software will break the delivery up across multiple segments based on the collection of segments that is passed in.","format":"int32"},"event-id":{"type":["number","null"],"description":"The unique database identifier of the event.","format":"int64"},"segments":{"type":["array","null"],"items":{"type":"object","properties":{"segment-number":{"type":"integer","description":"Each segment must be specified in sequential order.","format":"int32","nullable":true},"max-minutes":{"type":"integer","description":"If specified, then a timing block will be inserted around the segment's questions (outside of introduction displays) with this period for this segment.  If 0 is specified, then no overall timing will be enforced.  And if max-minutes is not passed in, then max-minutes will be set to the number of minutes based on the timed sections and groups within the segment, plus the break-minutes.","format":"int32","nullable":true},"break-minutes":{"type":"integer","description":"If specified, then this value will be used for break-minutes for this segment.  If not set, then the software will calculate the percentage of time allocated to this segment compared to all other segments, and set the break-minutes to the that percentage of the value set on the overall test.","format":"int32","nullable":true},"start-delivery-section":{"type":"integer","description":"Number from 1 to n where n is equal to or less than the number of sections in the test. This value specifies the starting section that will be delivered within this segment.  For the purpose of this parameter, a section is defined as a \"DeliveryGroup\" in the form specification of type 1 (standard section).","format":"int32","nullable":true},"end-delivery-section":{"type":"integer","description":"Number from 1 to n where n is equal to or less than the number of sections in the test. This value specifies the ending section that will be delivered within this segment. For the purpose of this parameter, a section is defined as a \"DeliveryGroup\" in the form specification of type 1 (standard section).  If not specified, then segment will be delivered to the end of test. This number can be the same as the start-delivery-section, which would be true in the case of a one section segment.  Sections can only be referenced in one segment.  For instance, you can not have a segment spanning 2-4 and 3-5 because sections 3 and 4 are referenced in two segments.","format":"int32","nullable":true}},"additionalProperties":false},"description":"Used for multi-segment delivery only.  A segments array is provided for multi-segment exams to define how to divide the test definition over the multiple segment period.  The segments array is only considered on the first launch of the test, and is used in conjunction with the segment parameter. While a form may consist of N sections, it is not required that all sections be included.  For instance, the segments can be limited to just section 3 of a form."},"variables":{"type":["array","null"],"items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the variable.","nullable":true},"value":{"type":"string","description":"Value of the variable.","nullable":true}},"additionalProperties":false},"description":"A variables array is provided to the UI and can be used to pass customization information to the user interface.  The variables array must be sent for each start."},"pass-through-properties":{"type":["array","null"],"items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the property.","nullable":true},"value":{"type":"string","description":"Value of the property.","nullable":true}},"additionalProperties":false},"description":"Properties are passed through to result xml/json. Properties are converted to XML for Result XML."}},"additionalProperties":false},"delivery-xml":{"type":["string","null"]},"program-registration-id":{"type":["string","null"]},"start-test-options":{"type":["number","null"],"format":"int64"},"site-code":{"type":["string","null"]}},"additionalProperties":false,"description":"The JSON request body."}}},
    method: "post",
    pathTemplate: "/start-test/Login",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["StartTestStart", {
    name: "StartTestStart",
    description: `Retrieves a URL that starts or restarts a test. The URL returned is time-sensitive and can be used only once. If the test is completed and has a score report, the score report is returned. If the test is completed and does not have a score report, the test is restarted on the “end of test display” or the last question of the test, whichever is earlier.`,
    inputSchema: {"type":"object","properties":{"program-id":{"minimum":1,"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. The API matches examinees linked to this institution and the institution's children. The web API client must have access to this institution."},"requestBody":{"type":"object","properties":{"examinee":{"type":"object","properties":{"program-examinee-system-id":{"type":["string","null"],"description":"The program's system identifier of the examinee. This is typically a database identifier. This identifier must be unique within the uniqueness scope defined for the program. It is required for Creates if `program-examinee-public-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-public-id` are not provided."},"program-examinee-public-id":{"type":["string","null"],"description":"The program's public or business identifier of the examinee. For instance, this may be a student ID. The identifier must be unique within the uniqueness scope as defined for the program. It is required for Creates if `program-examinee-system-id` is not provided. It is required for Updates if `examinee-id` and `program-examinee-system-id` are not provided."},"email":{"type":["string","null"],"description":"The examinee's email address. "},"first-name":{"type":["string","null"],"description":"The examinee's first name."},"middle-name":{"type":["string","null"],"description":"The examinee's middle name. "},"last-name":{"type":["string","null"],"description":"The examinee's last name."},"address1":{"type":["string","null"],"description":"The first line of the examinee's address."},"address2":{"type":["string","null"],"description":"The second line of the examinee's address."},"address3":{"type":["string","null"],"description":"The third line of the examinee's address."},"city":{"type":["string","null"],"description":"The city that the examinee lives in."},"state":{"type":["string","null"],"description":"The state that the examinee lives in."},"postal":{"type":["string","null"],"description":"The examinee's postal code."},"country":{"type":["string","null"],"description":"The examinee's three-letter ISO country code. This is validated to be three characters."},"primary-phone":{"type":["string","null"],"description":"The examinee's primary phone number."},"alternate-phone":{"type":["string","null"],"description":"The examinee's alternative phone number."},"photo-image":{"type":["string","null"],"description":"Not Available"},"photo-format":{"type":["string","null"],"description":"Not Available"}},"additionalProperties":false},"examinee-xml":{"type":["string","null"]},"delivery":{"type":"object","properties":{"form-id":{"type":["number","null"],"description":"The unique identifier for the form.","format":"int64"},"test-name":{"type":["string","null"],"description":"The unique textual identifier of the test. Required if `product-code` is not supplied."},"form-name":{"type":["string","null"],"description":"The unique form name. If this is not provided, the form is automatically selected. If this is provided, the form is validated to ensure it is active and authorized."},"form-group":{"type":["string","null"],"description":"Forms may be linked one or more groups.  If specified, then form selection will only match forms that are linked to the form-group passed in."},"pretest-group":{"type":["string","null"],"description":"Used in two ways. First, delivery groups can be linked to a pretest group. At delivery time, all delivery groups with a pretest-group reference are ignored if this pretest-group parameter on start does not match. Second, delivery groups can be linked to a pretest reference, which is dynamically used to match pretest items or sets managed outside of the test definition. When set on the delivery group, the delivery software will query the pretest references for items or sets that match the reference identifier and this pretest-group. If the pretest group is not passed in on start, then the delivery software will query for pretest references that match the reference identifier and are not linked to a pretest group. See the web service interface for managing pretest references for more information."},"product-code":{"type":["string","null"],"description":"The unique textual identifier of the product to deliver."},"language":{"type":["string","null"],"description":"The three-letter ISO language code. For multi-language tests, this is the code for the starting test language."},"break-factor":{"type":["number","null"],"description":"If timing is enabled and configured, this factor will be multiplied against the time set on all breaks.  For instance, “2” would provide double time on every break.  Break factor of 0 turns off the timing.  If not set, then time-factor will be used as the factor on breaks.","format":"double"},"break-minutes":{"type":["number","null"],"description":"The number of minutes allowed for break time.  Replaces test configuration with shared break time.  This value is not modified by break-factor if also passed in.","format":"int32"},"time-factor":{"type":["number","null"],"description":"If the test is timed, this number will be multiplied against each element that is timed, including overall time, section times, and item times. For instance, a “3” would give the examinee triple time. 1 = no change, this is the default. 0 = ignore timing, the test is untimed.","format":"double"},"timing-defaults":{"type":["string","null"],"description":"\r\nIn pipe delimited format for the following categories, in seconds.  Categories are all optional.  So, if timing was set for discrete items only, it might look like this: “30||60”.  This timing overrides test configuration for questions.  This is the only way to set timing for retries, pre-question dialogs, post-question surveys, and critique.  Categories: \r\n\r\n·          Question - Discrete \r\n\r\n·          Question - Set (any group with a reading or an article) \r\n\r\n·          Question Retry- Discrete \r\n\r\n·          Question Retry- Set \r\n\r\n·          Post-question survey \r\n\r\n"},"time-minutes-adjustment":{"type":["number","null"],"description":"The software will compare this value to the overall time of the test, and calculate a time-factor that affects all timed areas including items.  Ignored if time-factor passed in. ","format":"int32"},"time-extension":{"type":["number","null"],"description":"?? Not supported","format":"int32"},"options":{"type":["number","null"],"description":"The bit flag that enables test delivery options. See options in Appendix A.","format":"int64"},"overrides":{"type":["number","null"],"description":"The bit flag that allows test- or item-configured options to be overridden. See overrides in Appendix B.","format":"int64"},"complete-url":{"type":["string","null"],"description":"When an examinee completes a test, this URL is called. This URL closes the secure browser if one is used."},"pause-url":{"type":["string","null"],"description":"When an examinee pauses a test, this URL is called. This URL closes the secure browser if one is used."},"error-url":{"type":["string","null"],"description":"API-related errors navigate to this URL. If this is not provided, a built-in error page is used."},"enforce-secure-browser":{"type":["boolean","null"],"description":"The table below includes the possible values for this parameter.\r\n    **Enforce Secure Browser**\r\n    \r\n    | Value | Description                                                            |\r\n    |-------|------------------------------------------------------------------------|\r\n    | 0     | Do not enforce the use of the ITS Secure Browser. This is the default. |\r\n    | 1     | Enforce the use of the ITS Secure Browser.                             |\r\n    "},"secure-browser-error-url":{"type":["string","null"],"description":"If a secure browser is required and if the API call is not made within a secure browser or app, this URL is called."},"delivery-model-id":{"type":["number","null"],"description":"Enumeration. Provided from ITS. A default value is set if not provided.","format":"int64"},"external-registration-id":{"type":["string","null"],"description":"The unique external identifier of the registration."},"external-center-id":{"type":["string","null"],"description":"The unique external identifier of the center delivering the test."},"external-order-id":{"type":["string","null"],"description":"Unique external identifier of the order."},"external-session-id":{"type":["string","null"],"description":"Unique external identifier of the session."},"station-id":{"type":["string","null"],"description":"Station identifier."},"process-name":{"type":["string","null"],"description":"Used to ensure that third party remote proctoring system is running correctly.  Test will stop if process is not running at any point during test delivery."},"process-id":{"type":["string","null"],"description":"Test will stop if process-name is not process-id during test startup."},"process-hash":{"type":["string","null"],"description":"Test will stop if process-name does not have the hashed process-hash."},"segment":{"type":["number","null"],"description":"Used for multi-segment delivery only.  Sent for multi-segment exams or exams that are delivered in multiple segments in a segment (for instance, a morning session and an afternoon session).  A collection of \"segments\" must be included for first segment started (which does not need to be the first segment), which will be used to define the test definition (this collection is only used for the initial start of the test).  At the time the test is started, normal random selection and ordering will be performed (if configured).  Once the order of delivery groups and questions and selection of pretest has been completed, the delivery software will break the delivery up across multiple segments based on the collection of segments that is passed in.","format":"int32"},"event-id":{"type":["number","null"],"description":"The unique database identifier of the event.","format":"int64"},"segments":{"type":["array","null"],"items":{"type":"object","properties":{"segment-number":{"type":"integer","description":"Each segment must be specified in sequential order.","format":"int32","nullable":true},"max-minutes":{"type":"integer","description":"If specified, then a timing block will be inserted around the segment's questions (outside of introduction displays) with this period for this segment.  If 0 is specified, then no overall timing will be enforced.  And if max-minutes is not passed in, then max-minutes will be set to the number of minutes based on the timed sections and groups within the segment, plus the break-minutes.","format":"int32","nullable":true},"break-minutes":{"type":"integer","description":"If specified, then this value will be used for break-minutes for this segment.  If not set, then the software will calculate the percentage of time allocated to this segment compared to all other segments, and set the break-minutes to the that percentage of the value set on the overall test.","format":"int32","nullable":true},"start-delivery-section":{"type":"integer","description":"Number from 1 to n where n is equal to or less than the number of sections in the test. This value specifies the starting section that will be delivered within this segment.  For the purpose of this parameter, a section is defined as a \"DeliveryGroup\" in the form specification of type 1 (standard section).","format":"int32","nullable":true},"end-delivery-section":{"type":"integer","description":"Number from 1 to n where n is equal to or less than the number of sections in the test. This value specifies the ending section that will be delivered within this segment. For the purpose of this parameter, a section is defined as a \"DeliveryGroup\" in the form specification of type 1 (standard section).  If not specified, then segment will be delivered to the end of test. This number can be the same as the start-delivery-section, which would be true in the case of a one section segment.  Sections can only be referenced in one segment.  For instance, you can not have a segment spanning 2-4 and 3-5 because sections 3 and 4 are referenced in two segments.","format":"int32","nullable":true}},"additionalProperties":false},"description":"Used for multi-segment delivery only.  A segments array is provided for multi-segment exams to define how to divide the test definition over the multiple segment period.  The segments array is only considered on the first launch of the test, and is used in conjunction with the segment parameter. While a form may consist of N sections, it is not required that all sections be included.  For instance, the segments can be limited to just section 3 of a form."},"variables":{"type":["array","null"],"items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the variable.","nullable":true},"value":{"type":"string","description":"Value of the variable.","nullable":true}},"additionalProperties":false},"description":"A variables array is provided to the UI and can be used to pass customization information to the user interface.  The variables array must be sent for each start."},"pass-through-properties":{"type":["array","null"],"items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the property.","nullable":true},"value":{"type":"string","description":"Value of the property.","nullable":true}},"additionalProperties":false},"description":"Properties are passed through to result xml/json. Properties are converted to XML for Result XML."}},"additionalProperties":false},"delivery-xml":{"type":["string","null"]},"program-registration-id":{"type":["string","null"]},"start-test-options":{"type":["number","null"],"format":"int64"},"site-code":{"type":["string","null"]}},"additionalProperties":false,"description":"The JSON request body."}}},
    method: "post",
    pathTemplate: "/start-test/Start",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["TestFormsQuery", {
    name: "TestFormsQuery",
    description: `Return all forms configured for a test and the active status of those forms.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"number","format":"int64","description":"The unique program identifier of an institution. Only forms accessible by this institution are returned. The web API client must have access to this institution."},"test-name":{"type":"array","items":{"type":"string"},"description":"The unique textual identifier of the test."},"test-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique database identifier of the test."},"start-utc":{"type":"string","format":"date-time","description":"The start date and time in UTC that test delivery will occur and forms must be available."},"end-utc":{"type":"string","format":"date-time","description":"The last date and time in UTC that test delivery will occur and forms must be available."}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/test/forms/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"test-name","in":"query"},{"name":"test-id","in":"query"},{"name":"start-utc","in":"query"},{"name":"end-utc","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["TestPretestReferencesQuery", {
    name: "TestPretestReferencesQuery",
    description: `Gets a Pretest References object according to the specified TestIDs.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64"},"test-id":{"type":"array","items":{"type":"number","format":"int64"}}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/test/pretest-references/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"test-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["TestPretestReferencesImport", {
    name: "TestPretestReferencesImport",
    description: `Imports Pretest Reference objects into the database from the Pretest References object passed in. A 422 error is returned if 1 or more items or sets are not matched up before importing and the whole import is cancelled.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64"},"test-id":{"type":"number","format":"int64"},"requestBody":{"title":"Pretest References Model","required":["pretest-references"],"type":"object","properties":{"pretest-references":{"type":"array","items":{"title":"Pretest Reference Model","required":["Identifier"],"type":"object","properties":{"identifier":{"minLength":1,"type":"string","description":"Unique Identifier for the items or sets being updated, associated with a FormQuestionID or FormSetID."},"items":{"type":["array","null"],"items":{"required":["name"],"type":"object","properties":{"name":{"minLength":1,"type":"string","description":"Name of the Form Set/Item"},"pretest-group":{"type":"string","description":"Pretest group the Form Set/Item is under","nullable":true},"active":{"type":"boolean","description":"If true, this means the set/item is active and can be used as part of a Pretest."}},"additionalProperties":false},"description":"List of items that belong to this identifier."},"sets":{"type":["array","null"],"items":{"required":["name"],"type":"object","properties":{"name":{"minLength":1,"type":"string","description":"Name of the Form Set/Item"},"pretest-group":{"type":"string","description":"Pretest group the Form Set/Item is under","nullable":true},"active":{"type":"boolean","description":"If true, this means the set/item is active and can be used as part of a Pretest."}},"additionalProperties":false,"description":"A form set under a Pretest Reference Identifier"},"description":"List of form sets that belong to this identifier."}},"additionalProperties":false,"description":"Information for single Pretest Reference"},"description":"List of Pretest Reference objects."}},"additionalProperties":false,"description":"List of  Pretest Reference objects returned from a query or set to be imported."}},"required":["program-id","test-id","requestBody"]},
    method: "post",
    pathTemplate: "/test/pretest-references/Import",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"test-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["TestQuery", {
    name: "TestQuery",
    description: `Gets test query result object according to test object spec.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"test-name":{"type":"array","items":{"type":"string"},"description":"The unique textual identifier of the test. Multiple Supported"},"test-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique database identifier of the test. Multiple Supported"},"include-inactive":{"type":"boolean","default":false,"description":"A flag indicating whether inactive tests should be returned"},"include-demo":{"type":"boolean","default":false,"description":"A flag indicating whether demo tests should be returned"},"last-modified-utc":{"type":"string","format":"date-time","description":"The UTC date/time to find all new or updated tests since that date/time."},"limit":{"maximum":1000,"minimum":1,"type":"number","format":"int32","default":1000,"description":"The number of test objects to return. By default, this call will return a maximum of 1000 test objects. The limit can be set to any number less than 1000."},"before-id":{"type":"number","format":"int64","default":9223372036854776000,"description":"The test-id is the pagination ID used for this resource. Test-id objects with IDs immediately before this ID are returned. This parameter cannot be used if after-id is used."},"after-id":{"type":"number","format":"int64","description":"The test-id is the pagination ID used for this resource. Test objects with IDs immediately after this ID are returned. This parameter cannot be used if before-id is used."},"include-flag":{"type":"number","format":"int64","description":"Bit flag for any information you wish to include in the test object. If include-flag is not requested, all information is included. \r\nExample: To include general form information and informational meta data, use 65 to represent 1+ 64.\r\n**Bit Information**\r\n\r\n| Bit Flag                     | Bit Value |\r\n|------------------------------|-----------|\r\n| 1 = General Test Information | 1         |\r\n| 2 = Test Type                | 2         |\r\n| 3 = Audits                   | 4         |\r\n| 4 = Form Selection           | 8         |\r\n| 5 = Attempts                 | 16        |\r\n| 6 = Academic Models          | 32        |\r\n| 7 = Live in Application      | 64        |\r\n| 8 = Reporting & Exporting    | 128       |\r\n| 9 = Test Categories & Groups | 256       |\r\n| 10 = Start Test              | 512       |\r\n| 11 = Automatic Close         | 1024      |\r\n| 12 = Continuous Learning     | 2048      |\r\n| 13 = Observational           | 4096      |\r\n"}},"required":["program-id"]},
    method: "get",
    pathTemplate: "/Test/Query",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"test-name","in":"query"},{"name":"test-id","in":"query"},{"name":"include-inactive","in":"query"},{"name":"include-demo","in":"query"},{"name":"last-modified-utc","in":"query"},{"name":"limit","in":"query"},{"name":"before-id","in":"query"},{"name":"after-id","in":"query"},{"name":"include-flag","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["TestCreate", {
    name: "TestCreate",
    description: `Creates a test from the test create request object passed in.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"requestBody":{"required":["test-name"],"type":"object","properties":{"description":{"type":["string","null"],"description":"Description of the test.  This is the description shown by StartTest.  Note that description is varchar. Localized version in Translations."},"languages":{"type":["string","null"],"description":"The languages the test is available in.  This is a comma delimited list."},"program-version":{"type":["string","null"],"description":"Program specific version associated with test.  If used by a program, must be populated either by a database trigger or custom publishing sproc."},"demo":{"type":["boolean","null"],"description":"Set if the test is a demonstration or sample test."},"simulation":{"type":["boolean","null"],"description":"If true, this test can be used by our ITS test simulation software."},"test-type-id":{"type":["number","null"],"description":"The type of test (test, quiz, tutorial, survey, dynamic pool, flex pool, adaptive pool). Maps to dbo.TestTypes in the IW database.\r\n    \r\n| TestTypeID | Code          |\r\n|------------|---------------|\r\n| 0          | Test          |\r\n| 1          | Section       |\r\n| 2          | Tutorial      |\r\n| 3          | Survey        |\r\n| 4          | Test Template |\r\n| 5          | Quiz          |\r\n| 6          | Dynamic Test  |\r\n| 7          | Dynamic Pool  |\r\n| 8          | Flex Pool     |\r\n| 9          | Adaptive Pool |\r\n| 10         | Article Block |\r\n| 11         | Content Block |\r\n    ","format":"int32"},"test-usages":{"type":["number","null"],"description":"Bit flag for test usages\r\n    \r\n | Bit Flag                                                  | Bit Value |\r\n|-----------------------------------------------------------|-----------|\r\n| 1 = Class assignment (home / proctored)                   | 1         |\r\n| 2 = Scheduled administrations                             | 2         |\r\n| 3 = Cohort administrations                                | 4         |\r\n| 4 = Class practice (always available)                     | 8         |\r\n| 5 = Class proctored assignment                            | 16        |\r\n| 6 = Sample test for system verification                   | 32        |\r\n| 7 = Simulation test                                       | 64        |\r\n| 8 = System check test                                     | 128       |\r\n| 9 = Program test available for institution administrators | 256       |\r\n| 10 = Remote proctor onboarding test                       | 512       |\r\n| 11 = Survey UI                                            | 1024      |   \r\n    ","format":"int32"},"abandoned-hours":{"type":["number","null"],"description":"The number of hours before a test is considered abandoned.  If NULL, then no restartable results are considered abandoned.  If 0, then all restartable results are considered abandoned, unless active within 30 minutes.","format":"int32"},"form-selection-start-utc":{"type":["string","null"],"description":"The date form selection delivery counts should begin from in UTC.","format":"date-time"},"set-days":{"type":["number","null"],"description":"Number of days that a set is active before rotating to next set.","format":"int32"},"set-number":{"type":["number","null"],"description":"Current set number. Must be set for sets to be considered in form selection.","format":"int32"},"set-start-utc":{"type":["string","null"],"description":"Start date when current set was selected in UTC","format":"date-time"},"test-form-selection-id":{"type":["number","null"],"description":"All variations will select the form least seen by examinee.\r\n    \r\n| Value | Description                                        |\r\n|-------|----------------------------------------------------|\r\n| 1     | balance based on counts of delivery                |\r\n| 2     | random form selection (used for very high volumes) |\r\n| 3     | institutions dates, then do random form selection  |\r\n","format":"int32"},"max-attempts-days":{"type":["number","null"],"description":"Period for tracking max attempts.","format":"int32"},"max-attempts":{"type":["number","null"],"description":"Total number of attempts to pass that an examinee gets within max-attempt-days.","format":"int32"},"min-test-retake-days":{"type":["number","null"],"description":"Minimum number of days that must elapsed before an examinee can retest on any form of the test.","format":"int32"},"min-retest-days":{"type":["number","null"],"description":"The number of days that must pass before a person can see a form again.","format":"int32"},"subject-id":{"type":["number","null"],"description":"Links category to a subject. Subjects may be program or institution defined. Institution subjects may be defined anywhere in the hierarchy,and are available to the institution and its children. ","format":"int64"},"test-difficulty-id":{"type":["number","null"],"description":"Difficulty of test.\r\n    **Possible Values**\r\n    \r\n| Test Difficulty | Value |\r\n|-----------------|-------|\r\n| Easy            | 1     |\r\n| Moderate        | 2     |\r\n| Hard            | 4     |\r\n","format":"int32"},"application-identifier-windows":{"type":["string","null"],"description":"Used for Live in Application exams. For Windows, this is the class code."},"application-identifier-mac":{"type":["string","null"],"description":"Used for Live in Application exams."},"sub-program-id":{"type":["number","null"],"description":"If set, then test is linked to a subprogram. Subprograms allows reporting systems to determine method of reporting, and tests that can be reported on. ","format":"int64"},"test-export-restrictions":{"type":["number","null"],"description":"The restrictions set on test data.\r\n    **Possible Values**\r\n    \r\n| Bit Flag                                        | Bit Value |\r\n|-------------------------------------------------|-----------|\r\n| 1 = Question information                        | 1         |\r\n| 2 = Group scores except scaled score and timing | 2         |\r\n| 3 = Personal identifying information            | 4         |\r\n","format":"int64"},"test-category-id":{"type":["number","null"],"description":"Links to specific test category. Test categories are used for content security. Also used for grouping tests in the My Classes assignment picker.","format":"int64"},"sort-key":{"type":["string","null"],"description":"Used for sorting tests within category."},"test-group-id":{"type":["number","null"],"description":"Used for delivery overrides.","format":"int64"},"max-hours":{"type":["number","null"],"description":"The number of hours after the last modification before a result is automatically closed.  This requires the “Test Complete Service” to be running for the program.  Should be NULL if not set, but 0 will be ignored by service.","format":"int32"},"num-days":{"type":["number","null"],"description":"The number of days after the last modification before a result is automatically closed.  This requires the “Test Complete Service” to be running for the program.  Should be NULL if not set, but 0 will be ignored by service.","format":"int32"},"max-questions-per-day":{"type":["number","null"],"description":"Continuous Learning. If set, then test delivery will be limited to this value per day.","format":"int32"},"max-questions-per-week":{"type":["number","null"],"description":"Continuous Learning. If set, then test delivery will be limited to this value per week. Weeks are defined as Monday through Sunday.","format":"int32"},"max-questions-days-remaining":{"type":["number","null"],"description":"If set, max questions (daily or weekly) is ignored if this number of days or less is remaining in the testing period.","format":"int32"},"notification-days-default":{"type":["number","null"],"description":"Days examinees are notified.  This configuration can be overridden at the examinee level.\r\n    **Possible Values**\r\n    \r\n| Bit Flag      | Bit Value |\r\n|---------------|-----------|\r\n| 1 = Monday    | 1         |\r\n| 2 = Tuesday   | 2         |\r\n| 3 = Wednesday | 4         |\r\n| 4 = Thursday  | 8         |\r\n| 5 = Friday    | 16        |\r\n| 6 = Saturday  | 32        |\r\n| 7 = Sunday    | 64        |\r\n","format":"int32"},"recommended-minutes-per-question":{"type":["number","null"],"description":"Continuous Learning. The recommended minutes per question.","format":"int32"},"assessor-offset-scaled":{"type":["number","null"],"description":"Observational.  Number of minutes after scheduled start that examiner will participate in assessment. This value may be scaled if a TimeFactor is applied. If NULL, then assessor-offset-scaled is assumed to be 0.  Used to display start time on schedule UI for assessor.","format":"int32"},"assessor-offset-fixed":{"type":["number","null"],"description":"Observational. Number of fixed minutes after scheduled start that examiner will participate in assessment. If NULL, then assessor-offset-fixed is assumed to be 0. Used to display start time on schedule UI for assessor (see above).","format":"int32"},"assessor-duration":{"type":["number","null"],"description":"Observational.  Number of minutes after participation start (see above) offset that assessor will be expected to remain in event.  Used to display end time on schedule UI.","format":"int32"},"template-name":{"type":["string","null"],"description":"Used for dynamic tests only.  Must map to an existing test template that will include user interface, questional styles, optional tutorials and intro screens, and options end of test screens. (note: may change for multi-segment)"},"template-first":{"type":["string","null"],"description":"Used for dynamic tests that are may be delivered as a multi-segment result.  Must map to the name of a test template.  Used for the first segment in the result.  If not set, then form cannot be used for multi-segment testing.  If not set, this can be configured outside of the web service, and updates will not overwrite the configuration.  The user interface and styles from the first segment is used for all segments."},"template-middle":{"type":["string","null"],"description":"Same as template-first, except used for the middle segments in a multi-segment result."},"template-last":{"type":["string","null"],"description":"Same as template-first, except used for the last segment in a multi-segment result."},"pretest-pool":{"type":["string","null"],"description":"Name of dynamic pretest pool. Maps to a pool name."},"test-name":{"minLength":1,"type":"string","description":"The name of the test.  Unique within program."},"system-check":{"type":["boolean","null"],"description":"If true, this test can be used by the System Check software."},"auto-hold":{"type":["boolean","null"],"description":"Default 0. When set, result will be put on an automatic hold when delivered by StartTest."},"question-pool":{"type":["string","null"],"description":"Name of question pool for definition xml. Maps to a pool name."},"display-pool":{"type":["string","null"],"description":"Name of display pool for definition xml. Maps to a pool name."},"form-dates":{"type":["array","null"],"items":{"type":"object","properties":{"test-id":{"type":"integer","description":"The unique ID for a test","format":"int64","nullable":true},"form-date-id":{"type":"integer","description":"The unique ID for a FormDate","format":"int64","nullable":true},"start-utc":{"type":"string","description":"The date the form is available to be taken in UTC.","format":"date-time","nullable":true},"end-utc":{"type":"string","description":"End date the form is available in UTC.","format":"date-time","nullable":true},"group":{"type":"string","description":"An identifier linking one or more forms for form selection.","nullable":true},"all-institutions":{"type":"boolean","description":"A flag indicating whether all institutions have access to this form.  If not set, only the institutions specification in the collection of institutions below will have access to the form.","nullable":true},"institutions":{"type":"array","items":{"type":"object","properties":{"form-date-id":{"type":"integer","description":"ID to join back to the form dates","format":"int64","nullable":true},"all-children":{"type":"boolean","description":"A flag indicating whether all children institution have access to this form.","nullable":true},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Only forms accessible by this institution are returned.  The web API client must have access to this institution.","nullable":true}},"additionalProperties":false},"description":"Collection of Institutions within Form Date (Required if all-institutions is set to false.)","nullable":true}},"additionalProperties":false},"description":"A collection of dates associated within the form."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id"]},
    method: "post",
    pathTemplate: "/Test/Create",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["TestDelete", {
    name: "TestDelete",
    description: `Deletes tests matching test ids.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"test-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique database identifier of the test. Multiple Supported"}},"required":["program-id","test-id"]},
    method: "delete",
    pathTemplate: "/Test/Delete",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"test-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["TestUpdate", {
    name: "TestUpdate",
    description: `Gets test object according to test object spec.`,
    inputSchema: {"type":"object","properties":{"program-id":{"type":"number","format":"int64","description":"The unique program identifier provided as part of configuration."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Sessions are linked to this institution. The web API client must have access to this institution."},"requestBody":{"required":["test-id"],"type":"object","properties":{"description":{"type":["string","null"],"description":"Description of the test.  This is the description shown by StartTest.  Note that description is varchar. Localized version in Translations."},"languages":{"type":["string","null"],"description":"The languages the test is available in.  This is a comma delimited list."},"program-version":{"type":["string","null"],"description":"Program specific version associated with test.  If used by a program, must be populated either by a database trigger or custom publishing sproc."},"demo":{"type":["boolean","null"],"description":"Set if the test is a demonstration or sample test."},"simulation":{"type":["boolean","null"],"description":"If true, this test can be used by our ITS test simulation software."},"test-type-id":{"type":["number","null"],"description":"The type of test (test, quiz, tutorial, survey, dynamic pool, flex pool, adaptive pool). Maps to dbo.TestTypes in the IW database.\r\n    \r\n| TestTypeID | Code          |\r\n|------------|---------------|\r\n| 0          | Test          |\r\n| 1          | Section       |\r\n| 2          | Tutorial      |\r\n| 3          | Survey        |\r\n| 4          | Test Template |\r\n| 5          | Quiz          |\r\n| 6          | Dynamic Test  |\r\n| 7          | Dynamic Pool  |\r\n| 8          | Flex Pool     |\r\n| 9          | Adaptive Pool |\r\n| 10         | Article Block |\r\n| 11         | Content Block |\r\n    ","format":"int32"},"test-usages":{"type":["number","null"],"description":"Bit flag for test usages\r\n    \r\n | Bit Flag                                                  | Bit Value |\r\n|-----------------------------------------------------------|-----------|\r\n| 1 = Class assignment (home / proctored)                   | 1         |\r\n| 2 = Scheduled administrations                             | 2         |\r\n| 3 = Cohort administrations                                | 4         |\r\n| 4 = Class practice (always available)                     | 8         |\r\n| 5 = Class proctored assignment                            | 16        |\r\n| 6 = Sample test for system verification                   | 32        |\r\n| 7 = Simulation test                                       | 64        |\r\n| 8 = System check test                                     | 128       |\r\n| 9 = Program test available for institution administrators | 256       |\r\n| 10 = Remote proctor onboarding test                       | 512       |\r\n| 11 = Survey UI                                            | 1024      |   \r\n    ","format":"int32"},"abandoned-hours":{"type":["number","null"],"description":"The number of hours before a test is considered abandoned.  If NULL, then no restartable results are considered abandoned.  If 0, then all restartable results are considered abandoned, unless active within 30 minutes.","format":"int32"},"form-selection-start-utc":{"type":["string","null"],"description":"The date form selection delivery counts should begin from in UTC.","format":"date-time"},"set-days":{"type":["number","null"],"description":"Number of days that a set is active before rotating to next set.","format":"int32"},"set-number":{"type":["number","null"],"description":"Current set number. Must be set for sets to be considered in form selection.","format":"int32"},"set-start-utc":{"type":["string","null"],"description":"Start date when current set was selected in UTC","format":"date-time"},"test-form-selection-id":{"type":["number","null"],"description":"All variations will select the form least seen by examinee.\r\n    \r\n| Value | Description                                        |\r\n|-------|----------------------------------------------------|\r\n| 1     | balance based on counts of delivery                |\r\n| 2     | random form selection (used for very high volumes) |\r\n| 3     | institutions dates, then do random form selection  |\r\n","format":"int32"},"max-attempts-days":{"type":["number","null"],"description":"Period for tracking max attempts.","format":"int32"},"max-attempts":{"type":["number","null"],"description":"Total number of attempts to pass that an examinee gets within max-attempt-days.","format":"int32"},"min-test-retake-days":{"type":["number","null"],"description":"Minimum number of days that must elapsed before an examinee can retest on any form of the test.","format":"int32"},"min-retest-days":{"type":["number","null"],"description":"The number of days that must pass before a person can see a form again.","format":"int32"},"subject-id":{"type":["number","null"],"description":"Links category to a subject. Subjects may be program or institution defined. Institution subjects may be defined anywhere in the hierarchy,and are available to the institution and its children. ","format":"int64"},"test-difficulty-id":{"type":["number","null"],"description":"Difficulty of test.\r\n    **Possible Values**\r\n    \r\n| Test Difficulty | Value |\r\n|-----------------|-------|\r\n| Easy            | 1     |\r\n| Moderate        | 2     |\r\n| Hard            | 4     |\r\n","format":"int32"},"application-identifier-windows":{"type":["string","null"],"description":"Used for Live in Application exams. For Windows, this is the class code."},"application-identifier-mac":{"type":["string","null"],"description":"Used for Live in Application exams."},"sub-program-id":{"type":["number","null"],"description":"If set, then test is linked to a subprogram. Subprograms allows reporting systems to determine method of reporting, and tests that can be reported on. ","format":"int64"},"test-export-restrictions":{"type":["number","null"],"description":"The restrictions set on test data.\r\n    **Possible Values**\r\n    \r\n| Bit Flag                                        | Bit Value |\r\n|-------------------------------------------------|-----------|\r\n| 1 = Question information                        | 1         |\r\n| 2 = Group scores except scaled score and timing | 2         |\r\n| 3 = Personal identifying information            | 4         |\r\n","format":"int64"},"test-category-id":{"type":["number","null"],"description":"Links to specific test category. Test categories are used for content security. Also used for grouping tests in the My Classes assignment picker.","format":"int64"},"sort-key":{"type":["string","null"],"description":"Used for sorting tests within category."},"test-group-id":{"type":["number","null"],"description":"Used for delivery overrides.","format":"int64"},"max-hours":{"type":["number","null"],"description":"The number of hours after the last modification before a result is automatically closed.  This requires the “Test Complete Service” to be running for the program.  Should be NULL if not set, but 0 will be ignored by service.","format":"int32"},"num-days":{"type":["number","null"],"description":"The number of days after the last modification before a result is automatically closed.  This requires the “Test Complete Service” to be running for the program.  Should be NULL if not set, but 0 will be ignored by service.","format":"int32"},"max-questions-per-day":{"type":["number","null"],"description":"Continuous Learning. If set, then test delivery will be limited to this value per day.","format":"int32"},"max-questions-per-week":{"type":["number","null"],"description":"Continuous Learning. If set, then test delivery will be limited to this value per week. Weeks are defined as Monday through Sunday.","format":"int32"},"max-questions-days-remaining":{"type":["number","null"],"description":"If set, max questions (daily or weekly) is ignored if this number of days or less is remaining in the testing period.","format":"int32"},"notification-days-default":{"type":["number","null"],"description":"Days examinees are notified.  This configuration can be overridden at the examinee level.\r\n    **Possible Values**\r\n    \r\n| Bit Flag      | Bit Value |\r\n|---------------|-----------|\r\n| 1 = Monday    | 1         |\r\n| 2 = Tuesday   | 2         |\r\n| 3 = Wednesday | 4         |\r\n| 4 = Thursday  | 8         |\r\n| 5 = Friday    | 16        |\r\n| 6 = Saturday  | 32        |\r\n| 7 = Sunday    | 64        |\r\n","format":"int32"},"recommended-minutes-per-question":{"type":["number","null"],"description":"Continuous Learning. The recommended minutes per question.","format":"int32"},"assessor-offset-scaled":{"type":["number","null"],"description":"Observational.  Number of minutes after scheduled start that examiner will participate in assessment. This value may be scaled if a TimeFactor is applied. If NULL, then assessor-offset-scaled is assumed to be 0.  Used to display start time on schedule UI for assessor.","format":"int32"},"assessor-offset-fixed":{"type":["number","null"],"description":"Observational. Number of fixed minutes after scheduled start that examiner will participate in assessment. If NULL, then assessor-offset-fixed is assumed to be 0. Used to display start time on schedule UI for assessor (see above).","format":"int32"},"assessor-duration":{"type":["number","null"],"description":"Observational.  Number of minutes after participation start (see above) offset that assessor will be expected to remain in event.  Used to display end time on schedule UI.","format":"int32"},"template-name":{"type":["string","null"],"description":"Used for dynamic tests only.  Must map to an existing test template that will include user interface, questional styles, optional tutorials and intro screens, and options end of test screens. (note: may change for multi-segment)"},"template-first":{"type":["string","null"],"description":"Used for dynamic tests that are may be delivered as a multi-segment result.  Must map to the name of a test template.  Used for the first segment in the result.  If not set, then form cannot be used for multi-segment testing.  If not set, this can be configured outside of the web service, and updates will not overwrite the configuration.  The user interface and styles from the first segment is used for all segments."},"template-middle":{"type":["string","null"],"description":"Same as template-first, except used for the middle segments in a multi-segment result."},"template-last":{"type":["string","null"],"description":"Same as template-first, except used for the last segment in a multi-segment result."},"pretest-pool":{"type":["string","null"],"description":"Name of dynamic pretest pool. Maps to a pool name."},"test-id":{"type":"number","description":"Unique test identifier.","format":"int64"},"test-name":{"type":["string","null"],"description":"The name of the test.  Unique within program."},"system-check":{"type":["boolean","null"],"description":"If true, this test can be used by the System Check software."},"auto-hold":{"type":["boolean","null"],"description":"Default 0. When set, result will be put on an automatic hold when delivered by StartTest."}},"additionalProperties":false,"description":"The JSON request body."}},"required":["program-id","requestBody"]},
    method: "patch",
    pathTemplate: "/Test/Update",
    executionParameters: [{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"}],
    requestBodyContentType: "application/json",
    securityRequirements: [{"Default":[]}]
  }],
  ["GetTimezoneQuery", {
    name: "GetTimezoneQuery",
    description: `Sorted list of ITS time zones with their ITS TimeZoneID.`,
    inputSchema: {"type":"object","properties":{}},
    method: "get",
    pathTemplate: "/Timezone/Query",
    executionParameters: [],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["QueryUserAccess", {
    name: "QueryUserAccess",
    description: `Retrieves user access information.`,
    inputSchema: {"type":"object","properties":{"vendor-id":{"minimum":1,"type":"number","format":"int64","description":"The unique database identifier of the vendor."},"sponsor-id":{"minimum":1,"type":"number","format":"int64","description":"The unique database identifier of the sponsor."},"program-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique program identifier provided as part of configuration. If supplied, users with access to the requested programs will be returned."},"program-institution-id":{"type":"array","items":{"type":"string"},"description":"The program’s unique identifier of an institution. If supplied, users with access to the requested institutions will be returned."},"user-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the user."},"program-user-system-id":{"type":"array","items":{"type":"string"},"description":"The program’s system-generated unique identifier of the user. Used to link the ITS system with a program’s system for SSO and system-to-system imports."},"program-user-public-id":{"type":"array","items":{"type":"string"},"description":"The program’s public identifier of a user. For example, the user’s Board ID."},"included-user-types":{"type":"number","format":"int32","description":"Determine which types of users to return.\r\n\r\n| User Type | Description                                                  |\r\n| --------- | ------------------------------------------------------------ |\r\n| 1         | Returns all user types that match the filter specifications. |\r\n| 2         | Returns only vendor users.                                   |\r\n| 3         | Returns only sponsor users.                                  |\r\n| 4         | Returns only institution users.                              |\r\n"},"included-user-statuses":{"enum":[0,1,2,4],"type":"number","format":"int32","description":"Determine which user statuses to return.\r\n\r\n| User Type | Description  |\r\n| --------- | ------------ |\r\n| 1         | Active       |\r\n| 2         | Inactive     |\r\n| 4         | Deleted      |\r\n"}}},
    method: "get",
    pathTemplate: "/user/access/query",
    executionParameters: [{"name":"vendor-id","in":"query"},{"name":"sponsor-id","in":"query"},{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"user-id","in":"query"},{"name":"program-user-system-id","in":"query"},{"name":"program-user-public-id","in":"query"},{"name":"included-user-types","in":"query"},{"name":"included-user-statuses","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["DeleteUserAccess", {
    name: "DeleteUserAccess",
    description: `Removes access for a user to a program or institution.`,
    inputSchema: {"type":"object","properties":{"vendor-id":{"minimum":1,"type":"number","format":"int64","description":"Either a vendor-id or a sponsor-id is required.  The unique database identifier of the vendor."},"sponsor-id":{"minimum":1,"type":"number","format":"int64","description":"The unique database identifier of the sponsor."},"program-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"Either program-id or program-institution-id is required. The unique program identifier provided as part of configuration. If supplied, users with access to the requested programs will be removed."},"program-institution-id":{"type":"array","items":{"type":"string"},"description":"The program's unique identifier of an institution. If supplied, users with access to the requested institutions will be removed."},"user-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"One of the following three User IDs are required. The unique ITS database identifier of the user. Multiple supported."},"program-user-system-id":{"type":"array","items":{"type":"string"},"description":"The program's system-generated unique identifier of the user. Used to link the ITS system with a program's system for SSO and system-to-system imports."},"program-user-public-id":{"type":"array","items":{"type":"string"},"description":"The program's public identifier of a user. For example, the user's Board ID."}}},
    method: "delete",
    pathTemplate: "/user/access/delete",
    executionParameters: [{"name":"vendor-id","in":"query"},{"name":"sponsor-id","in":"query"},{"name":"program-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"user-id","in":"query"},{"name":"program-user-system-id","in":"query"},{"name":"program-user-public-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["GetUserQuery", {
    name: "GetUserQuery",
    description: `List of users and their associated data.`,
    inputSchema: {"type":"object","properties":{"vendor-id":{"minimum":1,"type":"number","format":"int64","description":"The unique database identifier of the vendor."},"sponsor-id":{"minimum":1,"type":"number","format":"int64","description":"The unique database identifier of the sponsor."},"user-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the user."},"program-user-system-id":{"type":"array","items":{"type":"string"},"description":"The program's system-generated unique identifier of the user. Used to link the ITS system with a program's system for SSO and system-to-system imports."},"program-user-public-id":{"type":"array","items":{"type":"string"},"description":"The program's public identifier of a user. For example, the user's Board ID."},"included-user-types":{"type":"number","format":"int32","description":"Determine which types of users to return.\r\n\r\n| User Type | Description                                                  |\r\n| --------- | ------------------------------------------------------------ |\r\n| 1         | Returns all user types that match the filter specifications. |\r\n| 2         | Returns only vendor users.                                   |\r\n| 3         | Returns only sponsor users.                                  |\r\n| 4         | Returns only institution users.                              |\r\n"},"included-user-statuses":{"enum":[0,1,2,4],"type":"number","format":"int32","description":"Determine which user statuses to return.\r\n\r\n| User Type | Description  |\r\n| --------- | ------------ |\r\n| 1         | Active       |\r\n| 2         | Inactive     |\r\n| 4         | Deleted      |\r\n"}}},
    method: "get",
    pathTemplate: "/User/query",
    executionParameters: [{"name":"vendor-id","in":"query"},{"name":"sponsor-id","in":"query"},{"name":"user-id","in":"query"},{"name":"program-user-system-id","in":"query"},{"name":"program-user-public-id","in":"query"},{"name":"included-user-types","in":"query"},{"name":"included-user-statuses","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
  ["DeleteUserDelete", {
    name: "DeleteUserDelete",
    description: `Deletes a user.`,
    inputSchema: {"type":"object","properties":{"vendor-id":{"minimum":1,"type":"number","format":"int64","description":"The unique identifier of the vendor."},"program-institution-id":{"type":"string","description":"The unique program identifier of an institution. Users are linked to this institution. The web API client must have access to this institution."},"user-id":{"type":"array","items":{"type":"number","format":"int64"},"description":"The unique ITS database identifier of the user."},"program-user-system-id":{"type":"array","items":{"type":"string"},"description":"The unique program identifier of the user."},"program-user-public-id":{"type":"array","items":{"type":"string"},"description":"The unique program public identifier of the user."}},"required":["vendor-id"]},
    method: "delete",
    pathTemplate: "/User/delete",
    executionParameters: [{"name":"vendor-id","in":"query"},{"name":"program-institution-id","in":"query"},{"name":"user-id","in":"query"},{"name":"program-user-system-id","in":"query"},{"name":"program-user-public-id","in":"query"}],
    requestBodyContentType: undefined,
    securityRequirements: [{"Default":[]}]
  }],
]);

/**
 * Security schemes from the OpenAPI spec
 */
const securitySchemes =   {
    "Default": {
      "type": "http",
      "description": "Bearer Token",
      "scheme": "bearer",
      "bearerFormat": "ITS provided JWT"
    }
  };


server.setRequestHandler(ListToolsRequestSchema, async () => {
  const toolsForClient: Tool[] = Array.from(toolDefinitionMap.values()).map(def => ({
    name: def.name,
    description: def.description,
    inputSchema: def.inputSchema
  }));
  return { tools: toolsForClient };
});


server.setRequestHandler(CallToolRequestSchema, async (request: CallToolRequest): Promise<CallToolResult> => {
  const { name: toolName, arguments: toolArgs } = request.params;
  const toolDefinition = toolDefinitionMap.get(toolName);
  if (!toolDefinition) {
    console.error(`Error: Unknown tool requested: ${toolName}`);
    return { content: [{ type: "text", text: `Error: Unknown tool requested: ${toolName}` }] };
  }
  return await executeApiTool(toolName, toolDefinition, toolArgs ?? {}, securitySchemes);
});



/**
 * Type definition for cached OAuth tokens
 */
interface TokenCacheEntry {
    token: string;
    expiresAt: number;
}

/**
 * Declare global __oauthTokenCache property for TypeScript
 */
declare global {
    var __oauthTokenCache: Record<string, TokenCacheEntry> | undefined;
}

/**
 * Acquires an OAuth2 token using client credentials flow
 * 
 * @param schemeName Name of the security scheme
 * @param scheme OAuth2 security scheme
 * @returns Acquired token or null if unable to acquire
 */
async function acquireOAuth2Token(schemeName: string, scheme: any): Promise<string | null | undefined> {
    try {
        // Check if we have the necessary credentials
  const keySuffix = schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase();
  const clientId = process.env[`OAUTH_CLIENT_ID_${keySuffix}`] || process.env.OAUTH_CLIENT_ID;
  const clientSecret = process.env[`OAUTH_CLIENT_SECRET_${keySuffix}`] || process.env.OAUTH_CLIENT_SECRET;
  const scopes = process.env[`OAUTH_SCOPES_${keySuffix}`] || process.env.OAUTH_SCOPE || process.env.OAUTH_SCOPES;
        
        if (!clientId || !clientSecret) {
            console.error(`Missing client credentials for OAuth2 scheme '${schemeName}'`);
            return null;
        }
        
        // Initialize token cache if needed
        if (typeof global.__oauthTokenCache === 'undefined') {
            global.__oauthTokenCache = {};
        }
        
        // Check if we have a cached token
        const cacheKey = `${schemeName}_${clientId}`;
        const cachedToken = global.__oauthTokenCache[cacheKey];
        const now = Date.now();
        
        if (cachedToken && cachedToken.expiresAt > now) {
            console.error(`Using cached OAuth2 token for '${schemeName}' (expires in ${Math.floor((cachedToken.expiresAt - now) / 1000)} seconds)`);
            return cachedToken.token;
        }
        
        // Determine token URL based on flow type
        let tokenUrl = process.env[`OAUTH_TOKEN_URL_${keySuffix}`] || process.env.OAUTH_TOKEN_URL || '';
        if (scheme.flows?.clientCredentials?.tokenUrl) {
            tokenUrl = scheme.flows.clientCredentials.tokenUrl || tokenUrl;
            console.error(`Using client credentials flow for '${schemeName}'`);
        } else if (scheme.flows?.password?.tokenUrl) {
            tokenUrl = scheme.flows.password.tokenUrl || tokenUrl;
            console.error(`Using password flow for '${schemeName}'`);
        } else {
            if (!tokenUrl) {
              console.error(`No supported OAuth2 flow found for '${schemeName}' and no OAUTH_TOKEN_URL provided`);
              return null;
            }
        }
        
        // Prepare the token request
        let formData = new URLSearchParams();
        formData.append('grant_type', 'client_credentials');
        
        // Add scopes if specified
        if (scopes) {
            formData.append('scope', scopes);
        }
        
        console.error(`Requesting OAuth2 token from ${tokenUrl}`);
        
        // Make the token request
        const response = await axios({
            method: 'POST',
            url: tokenUrl,
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'Authorization': `Basic ${Buffer.from(`${clientId}:${clientSecret}`).toString('base64')}`
            },
            data: formData.toString()
        });
        
        // Process the response
        if (response.data?.access_token) {
            const token = response.data.access_token;
            const expiresIn = response.data.expires_in || 3600; // Default to 1 hour
            
            // Cache the token
            global.__oauthTokenCache[cacheKey] = {
                token,
                expiresAt: now + (expiresIn * 1000) - 60000 // Expire 1 minute early
            };
            
            console.error(`Successfully acquired OAuth2 token for '${schemeName}' (expires in ${expiresIn} seconds)`);
            return token;
        } else {
            console.error(`Failed to acquire OAuth2 token for '${schemeName}': No access_token in response`);
            return null;
        }
    } catch (error: unknown) {
        const errorMessage = error instanceof Error ? error.message : String(error);
        console.error(`Error acquiring OAuth2 token for '${schemeName}':`, errorMessage);
        return null;
    }
}


/**
 * Executes an API tool with the provided arguments
 * 
 * @param toolName Name of the tool to execute
 * @param definition Tool definition
 * @param toolArgs Arguments provided by the user
 * @param allSecuritySchemes Security schemes from the OpenAPI spec
 * @returns Call tool result
 */
async function executeApiTool(
    toolName: string,
    definition: McpToolDefinition,
    toolArgs: JsonObject,
    allSecuritySchemes: Record<string, any>
): Promise<CallToolResult> {
  try {
    // Validate arguments against the input schema
    let validatedArgs: JsonObject;
    try {
        const zodSchema = getZodSchemaFromJsonSchema(definition.inputSchema, toolName);
        const argsToParse = (typeof toolArgs === 'object' && toolArgs !== null) ? toolArgs : {};
        validatedArgs = zodSchema.parse(argsToParse);
    } catch (error: unknown) {
        if (error instanceof ZodError) {
            const validationErrorMessage = `Invalid arguments for tool '${toolName}': ${error.errors.map(e => `${e.path.join('.')} (${e.code}): ${e.message}`).join(', ')}`;
            return { content: [{ type: 'text', text: validationErrorMessage }] };
        } else {
             const errorMessage = error instanceof Error ? error.message : String(error);
             return { content: [{ type: 'text', text: `Internal error during validation setup: ${errorMessage}` }] };
        }
    }

    // Prepare URL, query parameters, headers, and request body
    let urlPath = definition.pathTemplate;
    const queryParams: Record<string, any> = {};
    const headers: Record<string, string> = { 'Accept': 'application/json' };
    let requestBodyData: any = undefined;

    // Apply parameters to the URL path, query, or headers
    definition.executionParameters.forEach((param) => {
        const value = validatedArgs[param.name];
        if (typeof value !== 'undefined' && value !== null) {
            if (param.in === 'path') {
                urlPath = urlPath.replace(`{${param.name}}`, encodeURIComponent(String(value)));
            }
            else if (param.in === 'query') {
                queryParams[param.name] = value;
            }
            else if (param.in === 'header') {
                headers[param.name.toLowerCase()] = String(value);
            }
        }
    });

    // Ensure all path parameters are resolved
    if (urlPath.includes('{')) {
        throw new Error(`Failed to resolve path parameters: ${urlPath}`);
    }
    
    // Construct the full URL
    const requestUrl = API_BASE_URL ? `${API_BASE_URL}${urlPath}` : urlPath;

    // Handle request body if needed
    if (definition.requestBodyContentType && typeof validatedArgs['requestBody'] !== 'undefined') {
        requestBodyData = validatedArgs['requestBody'];
        headers['content-type'] = definition.requestBodyContentType;
    }


    // Apply security requirements if available
    // Security requirements use OR between array items and AND within each object
    const appliedSecurity = definition.securityRequirements?.find(req => {
        // Try each security requirement (combined with OR)
        return Object.entries(req).every(([schemeName, scopesArray]) => {
            const scheme = allSecuritySchemes[schemeName];
            if (!scheme) return false;
            
            // API Key security (header, query, cookie)
            if (scheme.type === 'apiKey') {
                return !!process.env[`API_KEY_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`];
            }
            
            // HTTP security (basic, bearer)
            if (scheme.type === 'http') {
                if (scheme.scheme?.toLowerCase() === 'bearer') {
                    return !!process.env[`BEARER_TOKEN_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`];
                }
                else if (scheme.scheme?.toLowerCase() === 'basic') {
                    return !!process.env[`BASIC_USERNAME_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`] && 
                           !!process.env[`BASIC_PASSWORD_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`];
                }
            }
            
            // OAuth2 security
            if (scheme.type === 'oauth2') {
                // Check for pre-existing token
                if (process.env[`OAUTH_TOKEN_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`]) {
                    return true;
                }
                
                // Check for client credentials for auto-acquisition
                if (process.env[`OAUTH_CLIENT_ID_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`] &&
                    process.env[`OAUTH_CLIENT_SECRET_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`]) {
                    // Verify we have a supported flow
                    if (scheme.flows?.clientCredentials || scheme.flows?.password) {
                        return true;
                    }
                }
                
                return false;
            }
            
            // OpenID Connect
            if (scheme.type === 'openIdConnect') {
                return !!process.env[`OPENID_TOKEN_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`];
            }
            
            return false;
        });
    });

    // If we found matching security scheme(s), apply them
    if (appliedSecurity) {
        // Apply each security scheme from this requirement (combined with AND)
        for (const [schemeName, scopesArray] of Object.entries(appliedSecurity)) {
            const scheme = allSecuritySchemes[schemeName];
            
            // API Key security
            if (scheme?.type === 'apiKey') {
                const apiKey = process.env[`API_KEY_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`];
                if (apiKey) {
                    if (scheme.in === 'header') {
                        headers[scheme.name.toLowerCase()] = apiKey;
                        console.error(`Applied API key '${schemeName}' in header '${scheme.name}'`);
                    }
                    else if (scheme.in === 'query') {
                        queryParams[scheme.name] = apiKey;
                        console.error(`Applied API key '${schemeName}' in query parameter '${scheme.name}'`);
                    }
                    else if (scheme.in === 'cookie') {
                        // Add the cookie, preserving other cookies if they exist
                        headers['cookie'] = `${scheme.name}=${apiKey}${headers['cookie'] ? `; ${headers['cookie']}` : ''}`;
                        console.error(`Applied API key '${schemeName}' in cookie '${scheme.name}'`);
                    }
                }
            } 
            // HTTP security (Bearer or Basic)
            else if (scheme?.type === 'http') {
        if (scheme.scheme?.toLowerCase() === 'bearer') {
          const token = process.env[`BEARER_TOKEN_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`] || process.env.API_BEARER_TOKEN;
          if (token) {
            headers['authorization'] = `Bearer ${token}`;
          }
        } 
                else if (scheme.scheme?.toLowerCase() === 'basic') {
                    const username = process.env[`BASIC_USERNAME_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`];
                    const password = process.env[`BASIC_PASSWORD_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`];
                    if (username && password) {
                        headers['authorization'] = `Basic ${Buffer.from(`${username}:${password}`).toString('base64')}`;
                        console.error(`Applied Basic authentication for '${schemeName}'`);
                    }
                }
            }
            // OAuth2 security
            else if (scheme?.type === 'oauth2') {
                // First try to use a pre-provided token
                let token = process.env[`OAUTH_TOKEN_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`];
                
                // If no token but we have client credentials, try to acquire a token
                if (!token && (scheme.flows?.clientCredentials || scheme.flows?.password)) {
                    console.error(`Attempting to acquire OAuth token for '${schemeName}'`);
                    token = (await acquireOAuth2Token(schemeName, scheme)) ?? '';
                }
                
                // Apply token if available
                if (token) {
                    headers['authorization'] = `Bearer ${token}`;
                    console.error(`Applied OAuth2 token for '${schemeName}'`);
                    
                    // List the scopes that were requested, if any
                    const scopes = scopesArray as string[];
                    if (scopes && scopes.length > 0) {
                        console.error(`Requested scopes: ${scopes.join(', ')}`);
                    }
                }
            }
            // OpenID Connect
            else if (scheme?.type === 'openIdConnect') {
                const token = process.env[`OPENID_TOKEN_${schemeName.replace(/[^a-zA-Z0-9]/g, '_').toUpperCase()}`];
                if (token) {
                    headers['authorization'] = `Bearer ${token}`;
                    console.error(`Applied OpenID Connect token for '${schemeName}'`);
                    
                    // List the scopes that were requested, if any
                    const scopes = scopesArray as string[];
                    if (scopes && scopes.length > 0) {
                        console.error(`Requested scopes: ${scopes.join(', ')}`);
                    }
                }
            }
        }
    } 
    // Log warning if security is required but not available
    else if (definition.securityRequirements?.length > 0) {
        // First generate a more readable representation of the security requirements
        const securityRequirementsString = definition.securityRequirements
            .map(req => {
                const parts = Object.entries(req)
                    .map(([name, scopesArray]) => {
                        const scopes = scopesArray as string[];
                        if (scopes.length === 0) return name;
                        return `${name} (scopes: ${scopes.join(', ')})`;
                    })
                    .join(' AND ');
                return `[${parts}]`;
            })
            .join(' OR ');
            
        console.warn(`Tool '${toolName}' requires security: ${securityRequirementsString}, but no suitable credentials found.`);
    }
    

    // Prepare the axios request configuration
    const config: AxiosRequestConfig = {
      method: definition.method.toUpperCase(), 
      url: requestUrl, 
      params: queryParams, 
      headers: headers,
      ...(requestBodyData !== undefined && { data: requestBodyData }),
    };

    // Log request info to stderr (doesn't affect MCP output)
    console.error(`Executing tool "${toolName}": ${config.method} ${config.url}`);
    
    // Execute the request
    const response = await axios(config);

    // Process and format the response
    let responseText = '';
    const contentType = response.headers['content-type']?.toLowerCase() || '';
    
    // Handle JSON responses
    if (contentType.includes('application/json') && typeof response.data === 'object' && response.data !== null) {
         try { 
             responseText = JSON.stringify(response.data, null, 2); 
         } catch (e) { 
             responseText = "[Stringify Error]"; 
         }
    } 
    // Handle string responses
    else if (typeof response.data === 'string') { 
         responseText = response.data; 
    }
    // Handle other response types
    else if (response.data !== undefined && response.data !== null) { 
         responseText = String(response.data); 
    }
    // Handle empty responses
    else { 
         responseText = `(Status: ${response.status} - No body content)`; 
    }
    
    // Return formatted response
    return { 
        content: [ 
            { 
                type: "text", 
                text: `API Response (Status: ${response.status}):\n${responseText}` 
            } 
        ], 
    };

  } catch (error: unknown) {
    // Handle errors during execution
    let errorMessage: string;
    
    // Format Axios errors specially
    if (axios.isAxiosError(error)) { 
        errorMessage = formatApiError(error); 
    }
    // Handle standard errors
    else if (error instanceof Error) { 
        errorMessage = error.message; 
    }
    // Handle unexpected error types
    else { 
        errorMessage = 'Unexpected error: ' + String(error); 
    }
    
    // Log error to stderr
    console.error(`Error during execution of tool '${toolName}':`, errorMessage);
    
    // Return error message to client
    return { content: [{ type: "text", text: errorMessage }] };
  }
}


/**
 * Main function to start the server
 */
async function main() {
// Set up stdio transport
  try {
  // Best effort: acquire bearer token if needed
  await ensureBearerToken();
    const transport = new StdioServerTransport();
    await server.connect(transport);
    console.error(`${SERVER_NAME} MCP Server (v${SERVER_VERSION}) running on stdio${API_BASE_URL ? `, proxying API at ${API_BASE_URL}` : ''}`);
  } catch (error) {
    console.error("Error during server startup:", error);
    process.exit(1);
  }
}

/**
 * Cleanup function for graceful shutdown
 */
async function cleanup() {
    console.error("Shutting down MCP server...");
    process.exit(0);
}

// Register signal handlers
process.on('SIGINT', cleanup);
process.on('SIGTERM', cleanup);

// Start the server
main().catch((error) => {
  console.error("Fatal error in main execution:", error);
  process.exit(1);
});

/**
 * Formats API errors for better readability
 * 
 * @param error Axios error
 * @returns Formatted error message
 */
function formatApiError(error: AxiosError): string {
    let message = 'API request failed.';
    if (error.response) {
        message = `API Error: Status ${error.response.status} (${error.response.statusText || 'Status text not available'}). `;
        const responseData = error.response.data;
        const MAX_LEN = 200;
        if (typeof responseData === 'string') { 
            message += `Response: ${responseData.substring(0, MAX_LEN)}${responseData.length > MAX_LEN ? '...' : ''}`; 
        }
        else if (responseData) { 
            try { 
                const jsonString = JSON.stringify(responseData); 
                message += `Response: ${jsonString.substring(0, MAX_LEN)}${jsonString.length > MAX_LEN ? '...' : ''}`; 
            } catch { 
                message += 'Response: [Could not serialize data]'; 
            } 
        }
        else { 
            message += 'No response body received.'; 
        }
    } else if (error.request) {
        message = 'API Network Error: No response received from server.';
        if (error.code) message += ` (Code: ${error.code})`;
    } else { 
        message += `API Request Setup Error: ${error.message}`; 
    }
    return message;
}

/**
 * Converts a JSON Schema to a Zod schema for runtime validation
 * 
 * @param jsonSchema JSON Schema
 * @param toolName Tool name for error reporting
 * @returns Zod schema
 */
function getZodSchemaFromJsonSchema(jsonSchema: any, toolName: string): z.ZodTypeAny {
    if (typeof jsonSchema !== 'object' || jsonSchema === null) { 
        return z.object({}).passthrough(); 
    }
    try {
        const zodSchemaString = jsonSchemaToZod(jsonSchema);
        const zodSchema = eval(zodSchemaString);
        if (typeof zodSchema?.parse !== 'function') { 
            throw new Error('Eval did not produce a valid Zod schema.'); 
        }
        return zodSchema as z.ZodTypeAny;
    } catch (err: any) {
        console.error(`Failed to generate/evaluate Zod schema for '${toolName}':`, err);
        return z.object({}).passthrough();
    }
}
